var program = xdc.useModule('xdc.cfg.Program');

program.sectMap[".args"]        = new Program.SectionSpec();
program.sectMap[".bss"]         = new Program.SectionSpec();
program.sectMap[".cinit"]       = new Program.SectionSpec();
program.sectMap[".cio"]         = new Program.SectionSpec();
program.sectMap[".const"]       = new Program.SectionSpec();
program.sectMap[".data"]        = new Program.SectionSpec();
program.sectMap[".far"]         = new Program.SectionSpec();
program.sectMap[".fardata"]     = new Program.SectionSpec();
program.sectMap[".neardata"]    = new Program.SectionSpec();
program.sectMap[".rodata"]      = new Program.SectionSpec();
program.sectMap[".stack"]       = new Program.SectionSpec();
program.sectMap[".switch"]      = new Program.SectionSpec();
program.sectMap[".sysmem"]      = new Program.SectionSpec();
program.sectMap[".text"]        = new Program.SectionSpec();
program.sectMap[".tbss"]        = new Program.SectionSpec();
program.sectMap[".tdata"]       = new Program.SectionSpec();
    
// Must place these sections in core local memory 
program.sectMap[".args"].loadSegment        = "L2SRAM";
program.sectMap[".cio"].loadSegment         = "L2SRAM";

// Variables in the following data sections can potentially be 'shared' in
// OpenMP. These sections must be placed in shared memory.
program.sectMap[".bss"].loadSegment         = "MSMCSRAM";
program.sectMap[".cinit"].loadSegment       = "MSMCSRAM";
program.sectMap[".const"].loadSegment       = "MSMCSRAM";
program.sectMap[".data"].loadSegment        = "MSMCSRAM";
program.sectMap[".far"].loadSegment         = "MSMCSRAM";
program.sectMap[".fardata"].loadSegment     = "MSMCSRAM";
program.sectMap[".neardata"].loadSegment    = "MSMCSRAM";
program.sectMap[".rodata"].loadSegment      = "MSMCSRAM";
//program.sectMap[".sysmem"].loadSegment      = "DDR3";
program.sectMap[".sysmem"].loadSegment      = "MSMCSRAM";
program.sectMap[".tbss"].loadSegment        = "MSMCSRAM";
program.sectMap[".tdata"].loadSegment       = "MSMCSRAM";


// Code sections shared by cores - place in shared memory to avoid duplication
program.sectMap[".switch"].loadSegment      = program.platform.codeMemory;
program.sectMap[".text"].loadSegment        = program.platform.codeMemory;

// Size the default stack and place it in L2SRAM 
program.stack = 0x4000;
program.sectMap[".stack"].loadSegment       = "L2SRAM";

// Since there are no arguments passed to main, set .args size to 0
program.argSize = 0;


 // allocate out of this shared region heap after IPC has been started.


/* =====================      Optional     =============================        */
/*                       Advance User settings                                  */
/*                 The default settings are commented out.                      */
/*             Uncomment the same and modify, if different setting is desired   */
/* =============================================================================*/

//OpenMP.qmssInit = true ;
//OpenMP.qmssMemRegion = -1;
//OpenMP.qmssStartIndex = 0;
//OpenMP.qmssDestQueueNum = -1;
//OpenMP.stackRegionId = -1;
//OpenMP.internalOsal = true;
//OpenMP.cppiHwSem = 3;
//OpenMP.qmssHwSem = 4;
//OpenMP.ompHwSem = 5;
//OpenMP.mpaxIndex = 3;

/* ================ Logger configuration ================
 *  Please refer to the ti.uia.sysbios.LoggingSetup module for more
 *  details and configuration options.
 */
 
 
var LoggingSetup = xdc.useModule('ti.uia.sysbios.LoggingSetup');
LoggingSetup.eventUploadMode = LoggingSetup.UploadMode_JTAGRUNMODE;
LoggingSetup.loadLoggerSize = 1024;
LoggingSetup.mainLoggerSize = 327680;
LoggingSetup.sysbiosLoggerSize = 524288;
LoggingSetup.sysbiosTaskLogging = false;


var UIABenchmark  = xdc.useModule('ti.uia.events.UIABenchmark');

var LogSync = xdc.useModule('ti.uia.runtime.LogSync');

var GlobalTimestampTimer =
    xdc.useModule('ti.uia.family.c66.TimestampC66XGlobal');
    
//LogSync.GlobalTimestampProxy = GlobalTimestampTimer;
LogSync.enableEventCorrelationForJTAG = true;

var Log = xdc.useModule('xdc.runtime.Log');
var Diags = xdc.useModule('xdc.runtime.Diags');
 
var Main = xdc.useModule('xdc.runtime.Main');

Main.common$.diags_INFO = Diags.RUNTIME_ON

var Timestamp = xdc.useModule('xdc.runtime.Timestamp');

var System = xdc.useModule('xdc.runtime.System');
var SysStd = xdc.useModule('xdc.runtime.SysStd');
System.SupportProxy = SysStd;
System.extendedFormats = "%f$S";

//////////////
