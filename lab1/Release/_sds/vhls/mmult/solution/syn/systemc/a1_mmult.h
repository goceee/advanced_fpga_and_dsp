// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _a1_mmult_HH_
#define _a1_mmult_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "a1_mmult_fadd_32ns_3bkb.h"
#include "a1_mmult_fmul_32ns_3cud.h"
#include "a1_mmult_Abuf.h"

namespace ap_rtl {

struct a1_mmult : public sc_module {
    // Port declarations 27
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > A_Addr_A;
    sc_out< sc_logic > A_EN_A;
    sc_out< sc_lv<4> > A_WEN_A;
    sc_out< sc_lv<32> > A_Din_A;
    sc_in< sc_lv<32> > A_Dout_A;
    sc_out< sc_logic > A_Clk_A;
    sc_out< sc_logic > A_Rst_A;
    sc_out< sc_lv<32> > B_Addr_A;
    sc_out< sc_logic > B_EN_A;
    sc_out< sc_lv<4> > B_WEN_A;
    sc_out< sc_lv<32> > B_Din_A;
    sc_in< sc_lv<32> > B_Dout_A;
    sc_out< sc_logic > B_Clk_A;
    sc_out< sc_logic > B_Rst_A;
    sc_out< sc_lv<32> > C_Addr_A;
    sc_out< sc_logic > C_EN_A;
    sc_out< sc_lv<4> > C_WEN_A;
    sc_out< sc_lv<32> > C_Din_A;
    sc_in< sc_lv<32> > C_Dout_A;
    sc_out< sc_logic > C_Clk_A;
    sc_out< sc_logic > C_Rst_A;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    a1_mmult(sc_module_name name);
    SC_HAS_PROCESS(a1_mmult);

    ~a1_mmult();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    a1_mmult_Abuf* Abuf_U;
    a1_mmult_Abuf* Bbuf_U;
    a1_mmult_fadd_32ns_3bkb<1,5,32,32,32>* mmult_fadd_32ns_3bkb_U1;
    a1_mmult_fmul_32ns_3cud<1,4,32,32,32>* mmult_fmul_32ns_3cud_U2;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<17> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<12> > tmp_3_cast_fu_220_p1;
    sc_signal< sc_lv<12> > tmp_3_cast_reg_403;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > i_1_fu_230_p2;
    sc_signal< sc_lv<6> > i_1_reg_411;
    sc_signal< sc_lv<10> > tmp_fu_240_p3;
    sc_signal< sc_lv<10> > tmp_reg_416;
    sc_signal< sc_lv<1> > exitcond4_fu_224_p2;
    sc_signal< sc_lv<10> > Abuf_addr_reg_421;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<10> > Bbuf_addr_reg_426;
    sc_signal< sc_lv<6> > j_1_fu_273_p2;
    sc_signal< sc_lv<6> > j_1_reg_434;
    sc_signal< sc_lv<1> > exitcond3_fu_267_p2;
    sc_signal< sc_lv<12> > tmp_6_cast_fu_298_p1;
    sc_signal< sc_lv<12> > tmp_6_cast_reg_449;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<6> > i_2_fu_308_p2;
    sc_signal< sc_lv<6> > i_2_reg_457;
    sc_signal< sc_lv<10> > tmp_1_fu_318_p3;
    sc_signal< sc_lv<10> > tmp_1_reg_462;
    sc_signal< sc_lv<1> > exitcond2_fu_302_p2;
    sc_signal< sc_lv<10> > j2_cast3_fu_326_p1;
    sc_signal< sc_lv<10> > j2_cast3_reg_467;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<12> > j2_cast2_cast_fu_330_p1;
    sc_signal< sc_lv<12> > j2_cast2_cast_reg_472;
    sc_signal< sc_lv<6> > j_2_fu_340_p2;
    sc_signal< sc_lv<6> > j_2_reg_480;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<6> > k_1_fu_388_p2;
    sc_signal< sc_lv<6> > k_1_reg_498;
    sc_signal< sc_lv<32> > Abuf_q0;
    sc_signal< sc_lv<32> > Abuf_load_reg_503;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > Bbuf_q0;
    sc_signal< sc_lv<32> > Bbuf_load_reg_508;
    sc_signal< sc_lv<32> > grp_fu_208_p2;
    sc_signal< sc_lv<32> > term_reg_513;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<32> > grp_fu_203_p2;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<10> > Abuf_address0;
    sc_signal< sc_logic > Abuf_ce0;
    sc_signal< sc_logic > Abuf_we0;
    sc_signal< sc_lv<10> > Bbuf_address0;
    sc_signal< sc_logic > Bbuf_ce0;
    sc_signal< sc_logic > Bbuf_we0;
    sc_signal< sc_lv<6> > i_reg_135;
    sc_signal< sc_lv<6> > j_reg_146;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<6> > i1_reg_157;
    sc_signal< sc_lv<1> > exitcond1_fu_334_p2;
    sc_signal< sc_lv<6> > j2_reg_168;
    sc_signal< sc_lv<1> > exitcond_fu_382_p2;
    sc_signal< sc_lv<32> > result_reg_179;
    sc_signal< sc_lv<6> > k_reg_192;
    sc_signal< sc_lv<32> > tmp_7_cast_fu_261_p1;
    sc_signal< sc_lv<32> > sum_cast_fu_284_p1;
    sc_signal< sc_lv<32> > tmp_9_cast_fu_355_p1;
    sc_signal< sc_lv<32> > tmp_12_cast_fu_377_p1;
    sc_signal< sc_lv<32> > sum6_cast_fu_398_p1;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<11> > tmp_2_fu_212_p3;
    sc_signal< sc_lv<5> > tmp_3_fu_236_p1;
    sc_signal< sc_lv<12> > j_cast6_cast_fu_252_p1;
    sc_signal< sc_lv<12> > tmp_7_fu_256_p2;
    sc_signal< sc_lv<10> > j_cast7_fu_248_p1;
    sc_signal< sc_lv<10> > sum_fu_279_p2;
    sc_signal< sc_lv<11> > tmp_5_fu_290_p3;
    sc_signal< sc_lv<5> > tmp_4_fu_314_p1;
    sc_signal< sc_lv<12> > k_cast1_cast_fu_346_p1;
    sc_signal< sc_lv<12> > tmp_9_fu_350_p2;
    sc_signal< sc_lv<11> > tmp_s_fu_360_p3;
    sc_signal< sc_lv<12> > tmp_11_cast_fu_368_p1;
    sc_signal< sc_lv<12> > tmp_6_fu_372_p2;
    sc_signal< sc_lv<10> > sum6_fu_394_p2;
    sc_signal< sc_lv<17> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<17> ap_ST_fsm_state1;
    static const sc_lv<17> ap_ST_fsm_state2;
    static const sc_lv<17> ap_ST_fsm_state3;
    static const sc_lv<17> ap_ST_fsm_state4;
    static const sc_lv<17> ap_ST_fsm_state5;
    static const sc_lv<17> ap_ST_fsm_state6;
    static const sc_lv<17> ap_ST_fsm_state7;
    static const sc_lv<17> ap_ST_fsm_state8;
    static const sc_lv<17> ap_ST_fsm_state9;
    static const sc_lv<17> ap_ST_fsm_state10;
    static const sc_lv<17> ap_ST_fsm_state11;
    static const sc_lv<17> ap_ST_fsm_state12;
    static const sc_lv<17> ap_ST_fsm_state13;
    static const sc_lv<17> ap_ST_fsm_state14;
    static const sc_lv<17> ap_ST_fsm_state15;
    static const sc_lv<17> ap_ST_fsm_state16;
    static const sc_lv<17> ap_ST_fsm_state17;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_A_Addr_A();
    void thread_A_Clk_A();
    void thread_A_Din_A();
    void thread_A_EN_A();
    void thread_A_Rst_A();
    void thread_A_WEN_A();
    void thread_Abuf_address0();
    void thread_Abuf_ce0();
    void thread_Abuf_we0();
    void thread_B_Addr_A();
    void thread_B_Clk_A();
    void thread_B_Din_A();
    void thread_B_EN_A();
    void thread_B_Rst_A();
    void thread_B_WEN_A();
    void thread_Bbuf_address0();
    void thread_Bbuf_ce0();
    void thread_Bbuf_we0();
    void thread_C_Addr_A();
    void thread_C_Clk_A();
    void thread_C_Din_A();
    void thread_C_EN_A();
    void thread_C_Rst_A();
    void thread_C_WEN_A();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_exitcond1_fu_334_p2();
    void thread_exitcond2_fu_302_p2();
    void thread_exitcond3_fu_267_p2();
    void thread_exitcond4_fu_224_p2();
    void thread_exitcond_fu_382_p2();
    void thread_i_1_fu_230_p2();
    void thread_i_2_fu_308_p2();
    void thread_j2_cast2_cast_fu_330_p1();
    void thread_j2_cast3_fu_326_p1();
    void thread_j_1_fu_273_p2();
    void thread_j_2_fu_340_p2();
    void thread_j_cast6_cast_fu_252_p1();
    void thread_j_cast7_fu_248_p1();
    void thread_k_1_fu_388_p2();
    void thread_k_cast1_cast_fu_346_p1();
    void thread_sum6_cast_fu_398_p1();
    void thread_sum6_fu_394_p2();
    void thread_sum_cast_fu_284_p1();
    void thread_sum_fu_279_p2();
    void thread_tmp_11_cast_fu_368_p1();
    void thread_tmp_12_cast_fu_377_p1();
    void thread_tmp_1_fu_318_p3();
    void thread_tmp_2_fu_212_p3();
    void thread_tmp_3_cast_fu_220_p1();
    void thread_tmp_3_fu_236_p1();
    void thread_tmp_4_fu_314_p1();
    void thread_tmp_5_fu_290_p3();
    void thread_tmp_6_cast_fu_298_p1();
    void thread_tmp_6_fu_372_p2();
    void thread_tmp_7_cast_fu_261_p1();
    void thread_tmp_7_fu_256_p2();
    void thread_tmp_9_cast_fu_355_p1();
    void thread_tmp_9_fu_350_p2();
    void thread_tmp_fu_240_p3();
    void thread_tmp_s_fu_360_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
