// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module a0_matxvec (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_A_AWVALID,
        m_axi_A_AWREADY,
        m_axi_A_AWADDR,
        m_axi_A_AWID,
        m_axi_A_AWLEN,
        m_axi_A_AWSIZE,
        m_axi_A_AWBURST,
        m_axi_A_AWLOCK,
        m_axi_A_AWCACHE,
        m_axi_A_AWPROT,
        m_axi_A_AWQOS,
        m_axi_A_AWREGION,
        m_axi_A_AWUSER,
        m_axi_A_WVALID,
        m_axi_A_WREADY,
        m_axi_A_WDATA,
        m_axi_A_WSTRB,
        m_axi_A_WLAST,
        m_axi_A_WID,
        m_axi_A_WUSER,
        m_axi_A_ARVALID,
        m_axi_A_ARREADY,
        m_axi_A_ARADDR,
        m_axi_A_ARID,
        m_axi_A_ARLEN,
        m_axi_A_ARSIZE,
        m_axi_A_ARBURST,
        m_axi_A_ARLOCK,
        m_axi_A_ARCACHE,
        m_axi_A_ARPROT,
        m_axi_A_ARQOS,
        m_axi_A_ARREGION,
        m_axi_A_ARUSER,
        m_axi_A_RVALID,
        m_axi_A_RREADY,
        m_axi_A_RDATA,
        m_axi_A_RLAST,
        m_axi_A_RID,
        m_axi_A_RUSER,
        m_axi_A_RRESP,
        m_axi_A_BVALID,
        m_axi_A_BREADY,
        m_axi_A_BRESP,
        m_axi_A_BID,
        m_axi_A_BUSER,
        A_offset,
        A_offset1,
        B_0_address0,
        B_0_ce0,
        B_0_q0,
        B_0_address1,
        B_0_ce1,
        B_0_q1,
        B_1_address0,
        B_1_ce0,
        B_1_q0,
        B_1_address1,
        B_1_ce1,
        B_1_q1,
        B_2_address0,
        B_2_ce0,
        B_2_q0,
        B_2_address1,
        B_2_ce1,
        B_2_q1,
        B_3_address0,
        B_3_ce0,
        B_3_q0,
        B_3_address1,
        B_3_ce1,
        B_3_q1,
        B_4_address0,
        B_4_ce0,
        B_4_q0,
        B_4_address1,
        B_4_ce1,
        B_4_q1,
        B_5_address0,
        B_5_ce0,
        B_5_q0,
        B_5_address1,
        B_5_ce1,
        B_5_q1,
        B_6_address0,
        B_6_ce0,
        B_6_q0,
        B_6_address1,
        B_6_ce1,
        B_6_q1,
        B_7_address0,
        B_7_ce0,
        B_7_q0,
        B_7_address1,
        B_7_ce1,
        B_7_q1,
        B_8_address0,
        B_8_ce0,
        B_8_q0,
        B_8_address1,
        B_8_ce1,
        B_8_q1,
        B_9_address0,
        B_9_ce0,
        B_9_q0,
        B_9_address1,
        B_9_ce1,
        B_9_q1,
        B_10_address0,
        B_10_ce0,
        B_10_q0,
        B_10_address1,
        B_10_ce1,
        B_10_q1,
        B_11_address0,
        B_11_ce0,
        B_11_q0,
        B_11_address1,
        B_11_ce1,
        B_11_q1,
        B_12_address0,
        B_12_ce0,
        B_12_q0,
        B_12_address1,
        B_12_ce1,
        B_12_q1,
        B_13_address0,
        B_13_ce0,
        B_13_q0,
        B_13_address1,
        B_13_ce1,
        B_13_q1,
        B_14_address0,
        B_14_ce0,
        B_14_q0,
        B_14_address1,
        B_14_ce1,
        B_14_q1,
        B_15_address0,
        B_15_ce0,
        B_15_q0,
        B_15_address1,
        B_15_ce1,
        B_15_q1,
        m_axi_C_AWVALID,
        m_axi_C_AWREADY,
        m_axi_C_AWADDR,
        m_axi_C_AWID,
        m_axi_C_AWLEN,
        m_axi_C_AWSIZE,
        m_axi_C_AWBURST,
        m_axi_C_AWLOCK,
        m_axi_C_AWCACHE,
        m_axi_C_AWPROT,
        m_axi_C_AWQOS,
        m_axi_C_AWREGION,
        m_axi_C_AWUSER,
        m_axi_C_WVALID,
        m_axi_C_WREADY,
        m_axi_C_WDATA,
        m_axi_C_WSTRB,
        m_axi_C_WLAST,
        m_axi_C_WID,
        m_axi_C_WUSER,
        m_axi_C_ARVALID,
        m_axi_C_ARREADY,
        m_axi_C_ARADDR,
        m_axi_C_ARID,
        m_axi_C_ARLEN,
        m_axi_C_ARSIZE,
        m_axi_C_ARBURST,
        m_axi_C_ARLOCK,
        m_axi_C_ARCACHE,
        m_axi_C_ARPROT,
        m_axi_C_ARQOS,
        m_axi_C_ARREGION,
        m_axi_C_ARUSER,
        m_axi_C_RVALID,
        m_axi_C_RREADY,
        m_axi_C_RDATA,
        m_axi_C_RLAST,
        m_axi_C_RID,
        m_axi_C_RUSER,
        m_axi_C_RRESP,
        m_axi_C_BVALID,
        m_axi_C_BREADY,
        m_axi_C_BRESP,
        m_axi_C_BID,
        m_axi_C_BUSER,
        C_offset,
        C_offset2
);

parameter    ap_ST_fsm_state1 = 28'd1;
parameter    ap_ST_fsm_state2 = 28'd2;
parameter    ap_ST_fsm_state3 = 28'd4;
parameter    ap_ST_fsm_state4 = 28'd8;
parameter    ap_ST_fsm_state5 = 28'd16;
parameter    ap_ST_fsm_state6 = 28'd32;
parameter    ap_ST_fsm_state7 = 28'd64;
parameter    ap_ST_fsm_state8 = 28'd128;
parameter    ap_ST_fsm_pp0_stage0 = 28'd256;
parameter    ap_ST_fsm_state12 = 28'd512;
parameter    ap_ST_fsm_state13 = 28'd1024;
parameter    ap_ST_fsm_state14 = 28'd2048;
parameter    ap_ST_fsm_state15 = 28'd4096;
parameter    ap_ST_fsm_state16 = 28'd8192;
parameter    ap_ST_fsm_state17 = 28'd16384;
parameter    ap_ST_fsm_state18 = 28'd32768;
parameter    ap_ST_fsm_state19 = 28'd65536;
parameter    ap_ST_fsm_state20 = 28'd131072;
parameter    ap_ST_fsm_state21 = 28'd262144;
parameter    ap_ST_fsm_state22 = 28'd524288;
parameter    ap_ST_fsm_state23 = 28'd1048576;
parameter    ap_ST_fsm_state24 = 28'd2097152;
parameter    ap_ST_fsm_pp1_stage0 = 28'd4194304;
parameter    ap_ST_fsm_state27 = 28'd8388608;
parameter    ap_ST_fsm_state28 = 28'd16777216;
parameter    ap_ST_fsm_state29 = 28'd33554432;
parameter    ap_ST_fsm_state30 = 28'd67108864;
parameter    ap_ST_fsm_state31 = 28'd134217728;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_A_AWVALID;
input   m_axi_A_AWREADY;
output  [31:0] m_axi_A_AWADDR;
output  [0:0] m_axi_A_AWID;
output  [31:0] m_axi_A_AWLEN;
output  [2:0] m_axi_A_AWSIZE;
output  [1:0] m_axi_A_AWBURST;
output  [1:0] m_axi_A_AWLOCK;
output  [3:0] m_axi_A_AWCACHE;
output  [2:0] m_axi_A_AWPROT;
output  [3:0] m_axi_A_AWQOS;
output  [3:0] m_axi_A_AWREGION;
output  [0:0] m_axi_A_AWUSER;
output   m_axi_A_WVALID;
input   m_axi_A_WREADY;
output  [31:0] m_axi_A_WDATA;
output  [3:0] m_axi_A_WSTRB;
output   m_axi_A_WLAST;
output  [0:0] m_axi_A_WID;
output  [0:0] m_axi_A_WUSER;
output   m_axi_A_ARVALID;
input   m_axi_A_ARREADY;
output  [31:0] m_axi_A_ARADDR;
output  [0:0] m_axi_A_ARID;
output  [31:0] m_axi_A_ARLEN;
output  [2:0] m_axi_A_ARSIZE;
output  [1:0] m_axi_A_ARBURST;
output  [1:0] m_axi_A_ARLOCK;
output  [3:0] m_axi_A_ARCACHE;
output  [2:0] m_axi_A_ARPROT;
output  [3:0] m_axi_A_ARQOS;
output  [3:0] m_axi_A_ARREGION;
output  [0:0] m_axi_A_ARUSER;
input   m_axi_A_RVALID;
output   m_axi_A_RREADY;
input  [31:0] m_axi_A_RDATA;
input   m_axi_A_RLAST;
input  [0:0] m_axi_A_RID;
input  [0:0] m_axi_A_RUSER;
input  [1:0] m_axi_A_RRESP;
input   m_axi_A_BVALID;
output   m_axi_A_BREADY;
input  [1:0] m_axi_A_BRESP;
input  [0:0] m_axi_A_BID;
input  [0:0] m_axi_A_BUSER;
input  [29:0] A_offset;
input  [19:0] A_offset1;
output  [11:0] B_0_address0;
output   B_0_ce0;
input  [31:0] B_0_q0;
output  [11:0] B_0_address1;
output   B_0_ce1;
input  [31:0] B_0_q1;
output  [11:0] B_1_address0;
output   B_1_ce0;
input  [31:0] B_1_q0;
output  [11:0] B_1_address1;
output   B_1_ce1;
input  [31:0] B_1_q1;
output  [11:0] B_2_address0;
output   B_2_ce0;
input  [31:0] B_2_q0;
output  [11:0] B_2_address1;
output   B_2_ce1;
input  [31:0] B_2_q1;
output  [11:0] B_3_address0;
output   B_3_ce0;
input  [31:0] B_3_q0;
output  [11:0] B_3_address1;
output   B_3_ce1;
input  [31:0] B_3_q1;
output  [11:0] B_4_address0;
output   B_4_ce0;
input  [31:0] B_4_q0;
output  [11:0] B_4_address1;
output   B_4_ce1;
input  [31:0] B_4_q1;
output  [11:0] B_5_address0;
output   B_5_ce0;
input  [31:0] B_5_q0;
output  [11:0] B_5_address1;
output   B_5_ce1;
input  [31:0] B_5_q1;
output  [11:0] B_6_address0;
output   B_6_ce0;
input  [31:0] B_6_q0;
output  [11:0] B_6_address1;
output   B_6_ce1;
input  [31:0] B_6_q1;
output  [11:0] B_7_address0;
output   B_7_ce0;
input  [31:0] B_7_q0;
output  [11:0] B_7_address1;
output   B_7_ce1;
input  [31:0] B_7_q1;
output  [11:0] B_8_address0;
output   B_8_ce0;
input  [31:0] B_8_q0;
output  [11:0] B_8_address1;
output   B_8_ce1;
input  [31:0] B_8_q1;
output  [11:0] B_9_address0;
output   B_9_ce0;
input  [31:0] B_9_q0;
output  [11:0] B_9_address1;
output   B_9_ce1;
input  [31:0] B_9_q1;
output  [11:0] B_10_address0;
output   B_10_ce0;
input  [31:0] B_10_q0;
output  [11:0] B_10_address1;
output   B_10_ce1;
input  [31:0] B_10_q1;
output  [11:0] B_11_address0;
output   B_11_ce0;
input  [31:0] B_11_q0;
output  [11:0] B_11_address1;
output   B_11_ce1;
input  [31:0] B_11_q1;
output  [11:0] B_12_address0;
output   B_12_ce0;
input  [31:0] B_12_q0;
output  [11:0] B_12_address1;
output   B_12_ce1;
input  [31:0] B_12_q1;
output  [11:0] B_13_address0;
output   B_13_ce0;
input  [31:0] B_13_q0;
output  [11:0] B_13_address1;
output   B_13_ce1;
input  [31:0] B_13_q1;
output  [11:0] B_14_address0;
output   B_14_ce0;
input  [31:0] B_14_q0;
output  [11:0] B_14_address1;
output   B_14_ce1;
input  [31:0] B_14_q1;
output  [11:0] B_15_address0;
output   B_15_ce0;
input  [31:0] B_15_q0;
output  [11:0] B_15_address1;
output   B_15_ce1;
input  [31:0] B_15_q1;
output   m_axi_C_AWVALID;
input   m_axi_C_AWREADY;
output  [31:0] m_axi_C_AWADDR;
output  [0:0] m_axi_C_AWID;
output  [31:0] m_axi_C_AWLEN;
output  [2:0] m_axi_C_AWSIZE;
output  [1:0] m_axi_C_AWBURST;
output  [1:0] m_axi_C_AWLOCK;
output  [3:0] m_axi_C_AWCACHE;
output  [2:0] m_axi_C_AWPROT;
output  [3:0] m_axi_C_AWQOS;
output  [3:0] m_axi_C_AWREGION;
output  [0:0] m_axi_C_AWUSER;
output   m_axi_C_WVALID;
input   m_axi_C_WREADY;
output  [31:0] m_axi_C_WDATA;
output  [3:0] m_axi_C_WSTRB;
output   m_axi_C_WLAST;
output  [0:0] m_axi_C_WID;
output  [0:0] m_axi_C_WUSER;
output   m_axi_C_ARVALID;
input   m_axi_C_ARREADY;
output  [31:0] m_axi_C_ARADDR;
output  [0:0] m_axi_C_ARID;
output  [31:0] m_axi_C_ARLEN;
output  [2:0] m_axi_C_ARSIZE;
output  [1:0] m_axi_C_ARBURST;
output  [1:0] m_axi_C_ARLOCK;
output  [3:0] m_axi_C_ARCACHE;
output  [2:0] m_axi_C_ARPROT;
output  [3:0] m_axi_C_ARQOS;
output  [3:0] m_axi_C_ARREGION;
output  [0:0] m_axi_C_ARUSER;
input   m_axi_C_RVALID;
output   m_axi_C_RREADY;
input  [31:0] m_axi_C_RDATA;
input   m_axi_C_RLAST;
input  [0:0] m_axi_C_RID;
input  [0:0] m_axi_C_RUSER;
input  [1:0] m_axi_C_RRESP;
input   m_axi_C_BVALID;
output   m_axi_C_BREADY;
input  [1:0] m_axi_C_BRESP;
input  [0:0] m_axi_C_BID;
input  [0:0] m_axi_C_BUSER;
input  [29:0] C_offset;
input  [19:0] C_offset2;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_A_ARVALID;
reg m_axi_A_RREADY;
reg[11:0] B_0_address0;
reg B_0_ce0;
reg[11:0] B_0_address1;
reg B_0_ce1;
reg[11:0] B_1_address0;
reg B_1_ce0;
reg[11:0] B_1_address1;
reg B_1_ce1;
reg[11:0] B_2_address0;
reg B_2_ce0;
reg[11:0] B_2_address1;
reg B_2_ce1;
reg[11:0] B_3_address0;
reg B_3_ce0;
reg[11:0] B_3_address1;
reg B_3_ce1;
reg[11:0] B_4_address0;
reg B_4_ce0;
reg[11:0] B_4_address1;
reg B_4_ce1;
reg[11:0] B_5_address0;
reg B_5_ce0;
reg[11:0] B_5_address1;
reg B_5_ce1;
reg[11:0] B_6_address0;
reg B_6_ce0;
reg[11:0] B_6_address1;
reg B_6_ce1;
reg[11:0] B_7_address0;
reg B_7_ce0;
reg[11:0] B_7_address1;
reg B_7_ce1;
reg[11:0] B_8_address0;
reg B_8_ce0;
reg[11:0] B_8_address1;
reg B_8_ce1;
reg[11:0] B_9_address0;
reg B_9_ce0;
reg[11:0] B_9_address1;
reg B_9_ce1;
reg[11:0] B_10_address0;
reg B_10_ce0;
reg[11:0] B_10_address1;
reg B_10_ce1;
reg[11:0] B_11_address0;
reg B_11_ce0;
reg[11:0] B_11_address1;
reg B_11_ce1;
reg[11:0] B_12_address0;
reg B_12_ce0;
reg[11:0] B_12_address1;
reg B_12_ce1;
reg[11:0] B_13_address0;
reg B_13_ce0;
reg[11:0] B_13_address1;
reg B_13_ce1;
reg[11:0] B_14_address0;
reg B_14_ce0;
reg[11:0] B_14_address1;
reg B_14_ce1;
reg[11:0] B_15_address0;
reg B_15_ce0;
reg[11:0] B_15_address1;
reg B_15_ce1;
reg m_axi_C_AWVALID;
reg m_axi_C_WVALID;
reg m_axi_C_BREADY;

(* fsm_encoding = "none" *) reg   [27:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    A_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    A_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond3_reg_2330;
reg    C_blk_n_AW;
wire    ap_CS_fsm_state13;
wire   [0:0] exitcond1_fu_2147_p2;
reg    C_blk_n_W;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond8_reg_3674;
reg    C_blk_n_B;
wire    ap_CS_fsm_state31;
reg   [10:0] indvar_reg_837;
reg   [10:0] indvar_reg_837_pp0_iter1_reg;
wire    ap_block_state9_pp0_stage0_iter0;
reg    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [6:0] indvar6_reg_1628;
wire   [30:0] sum_fu_1967_p2;
reg   [30:0] sum_reg_2313;
reg    ap_sig_ioackin_m_axi_A_ARREADY;
reg   [31:0] C_addr_reg_2324;
wire    ap_CS_fsm_state8;
wire   [0:0] exitcond3_fu_2007_p2;
reg   [0:0] exitcond3_reg_2330_pp0_iter1_reg;
wire   [10:0] indvar_next_fu_2013_p2;
reg   [10:0] indvar_next_reg_2334;
reg    ap_enable_reg_pp0_iter0;
reg   [31:0] A_addr_read_reg_2339;
reg    ap_sig_ioackin_m_axi_C_AWREADY;
reg    ap_block_state13_io;
reg   [11:0] B_0_addr_2_reg_2354;
reg   [11:0] B_0_addr_3_reg_2359;
reg   [11:0] B_1_addr_2_reg_2374;
reg   [11:0] B_1_addr_3_reg_2379;
reg   [11:0] B_2_addr_2_reg_2394;
reg   [11:0] B_2_addr_3_reg_2399;
reg   [11:0] B_3_addr_2_reg_2414;
reg   [11:0] B_3_addr_3_reg_2419;
reg   [11:0] B_4_addr_2_reg_2434;
reg   [11:0] B_4_addr_3_reg_2439;
reg   [11:0] B_5_addr_2_reg_2454;
reg   [11:0] B_5_addr_3_reg_2459;
reg   [11:0] B_6_addr_2_reg_2474;
reg   [11:0] B_6_addr_3_reg_2479;
reg   [11:0] B_7_addr_2_reg_2494;
reg   [11:0] B_7_addr_3_reg_2499;
reg   [11:0] B_8_addr_2_reg_2514;
reg   [11:0] B_8_addr_3_reg_2519;
reg   [11:0] B_9_addr_2_reg_2534;
reg   [11:0] B_9_addr_3_reg_2539;
reg   [11:0] B_10_addr_2_reg_2554;
reg   [11:0] B_10_addr_3_reg_2559;
reg   [11:0] B_11_addr_2_reg_2574;
reg   [11:0] B_11_addr_3_reg_2579;
reg   [11:0] B_12_addr_2_reg_2594;
reg   [11:0] B_12_addr_3_reg_2599;
reg   [11:0] B_13_addr_2_reg_2614;
reg   [11:0] B_13_addr_3_reg_2619;
reg   [11:0] B_14_addr_2_reg_2634;
reg   [11:0] B_14_addr_3_reg_2639;
reg   [11:0] B_15_addr_2_reg_2654;
reg   [11:0] B_15_addr_3_reg_2659;
wire   [10:0] k_1_fu_2153_p2;
reg   [10:0] k_1_reg_2668;
wire   [31:0] a_q0;
reg   [31:0] a_load_reg_2678;
wire    ap_CS_fsm_state14;
reg   [31:0] B_0_load_reg_2714;
reg   [31:0] B_0_load_1_reg_2719;
reg   [31:0] B_1_load_reg_2724;
reg   [31:0] B_1_load_1_reg_2729;
reg   [31:0] B_2_load_reg_2734;
reg   [31:0] B_2_load_1_reg_2739;
reg   [31:0] B_3_load_reg_2744;
reg   [31:0] B_3_load_1_reg_2749;
reg   [31:0] B_4_load_reg_2754;
reg   [31:0] B_4_load_1_reg_2759;
reg   [31:0] B_5_load_reg_2764;
reg   [31:0] B_5_load_1_reg_2769;
reg   [31:0] B_6_load_reg_2774;
reg   [31:0] B_6_load_1_reg_2779;
reg   [31:0] B_7_load_reg_2784;
reg   [31:0] B_7_load_1_reg_2789;
reg   [31:0] B_8_load_reg_2794;
reg   [31:0] B_8_load_1_reg_2799;
reg   [31:0] B_9_load_reg_2804;
reg   [31:0] B_9_load_1_reg_2809;
reg   [31:0] B_10_load_reg_2814;
reg   [31:0] B_10_load_1_reg_2819;
reg   [31:0] B_11_load_reg_2824;
reg   [31:0] B_11_load_1_reg_2829;
reg   [31:0] B_12_load_reg_2834;
reg   [31:0] B_12_load_1_reg_2839;
reg   [31:0] B_13_load_reg_2844;
reg   [31:0] B_13_load_1_reg_2849;
reg   [31:0] B_14_load_reg_2854;
reg   [31:0] B_14_load_1_reg_2859;
reg   [31:0] B_15_load_reg_2864;
reg   [31:0] B_15_load_1_reg_2869;
reg   [31:0] B_0_load_2_reg_2874;
wire    ap_CS_fsm_state15;
reg   [31:0] B_0_load_3_reg_2879;
reg   [31:0] B_1_load_2_reg_2884;
reg   [31:0] B_1_load_3_reg_2889;
reg   [31:0] B_2_load_2_reg_2894;
reg   [31:0] B_2_load_3_reg_2899;
reg   [31:0] B_3_load_2_reg_2904;
reg   [31:0] B_3_load_3_reg_2909;
reg   [31:0] B_4_load_2_reg_2914;
reg   [31:0] B_4_load_3_reg_2919;
reg   [31:0] B_5_load_2_reg_2924;
reg   [31:0] B_5_load_3_reg_2929;
reg   [31:0] B_6_load_2_reg_2934;
reg   [31:0] B_6_load_3_reg_2939;
reg   [31:0] B_7_load_2_reg_2944;
reg   [31:0] B_7_load_3_reg_2949;
reg   [31:0] B_8_load_2_reg_2954;
reg   [31:0] B_8_load_3_reg_2959;
reg   [31:0] B_9_load_2_reg_2964;
reg   [31:0] B_9_load_3_reg_2969;
reg   [31:0] B_10_load_2_reg_2974;
reg   [31:0] B_10_load_3_reg_2979;
reg   [31:0] B_11_load_2_reg_2984;
reg   [31:0] B_11_load_3_reg_2989;
reg   [31:0] B_12_load_2_reg_2994;
reg   [31:0] B_12_load_3_reg_2999;
reg   [31:0] B_13_load_2_reg_3004;
reg   [31:0] B_13_load_3_reg_3009;
reg   [31:0] B_14_load_2_reg_3014;
reg   [31:0] B_14_load_3_reg_3019;
reg   [31:0] B_15_load_2_reg_3024;
reg   [31:0] B_15_load_3_reg_3029;
wire   [31:0] grp_fu_1831_p2;
reg   [31:0] tmp_6_reg_3034;
wire    ap_CS_fsm_state18;
wire   [31:0] grp_fu_1835_p2;
reg   [31:0] tmp_6_1_reg_3039;
wire   [31:0] grp_fu_1839_p2;
reg   [31:0] tmp_6_4_reg_3044;
wire   [31:0] grp_fu_1843_p2;
reg   [31:0] tmp_6_5_reg_3049;
wire   [31:0] grp_fu_1847_p2;
reg   [31:0] tmp_6_8_reg_3054;
wire   [31:0] grp_fu_1851_p2;
reg   [31:0] tmp_6_9_reg_3059;
wire   [31:0] grp_fu_1855_p2;
reg   [31:0] tmp_6_11_reg_3064;
wire   [31:0] grp_fu_1859_p2;
reg   [31:0] tmp_6_12_reg_3069;
wire   [31:0] grp_fu_1863_p2;
reg   [31:0] tmp_6_15_reg_3074;
wire   [31:0] grp_fu_1867_p2;
reg   [31:0] tmp_6_16_reg_3079;
wire   [31:0] grp_fu_1871_p2;
reg   [31:0] tmp_6_19_reg_3084;
wire   [31:0] grp_fu_1875_p2;
reg   [31:0] tmp_6_20_reg_3089;
wire   [31:0] grp_fu_1879_p2;
reg   [31:0] tmp_6_23_reg_3094;
wire   [31:0] grp_fu_1883_p2;
reg   [31:0] tmp_6_24_reg_3099;
wire   [31:0] grp_fu_1887_p2;
reg   [31:0] tmp_6_27_reg_3104;
wire   [31:0] grp_fu_1891_p2;
reg   [31:0] tmp_6_28_reg_3109;
wire   [31:0] grp_fu_1895_p2;
reg   [31:0] tmp_6_31_reg_3114;
wire   [31:0] grp_fu_1899_p2;
reg   [31:0] tmp_6_32_reg_3119;
wire   [31:0] grp_fu_1903_p2;
reg   [31:0] tmp_6_35_reg_3124;
wire   [31:0] grp_fu_1907_p2;
reg   [31:0] tmp_6_36_reg_3129;
wire   [31:0] grp_fu_1911_p2;
reg   [31:0] tmp_6_39_reg_3134;
wire   [31:0] grp_fu_1915_p2;
reg   [31:0] tmp_6_40_reg_3139;
wire   [31:0] grp_fu_1919_p2;
reg   [31:0] tmp_6_43_reg_3144;
wire   [31:0] grp_fu_1923_p2;
reg   [31:0] tmp_6_44_reg_3149;
wire   [31:0] grp_fu_1927_p2;
reg   [31:0] tmp_6_47_reg_3154;
wire   [31:0] grp_fu_1931_p2;
reg   [31:0] tmp_6_48_reg_3159;
wire   [31:0] grp_fu_1935_p2;
reg   [31:0] tmp_6_51_reg_3164;
wire   [31:0] grp_fu_1939_p2;
reg   [31:0] tmp_6_52_reg_3169;
wire   [31:0] grp_fu_1943_p2;
reg   [31:0] tmp_6_55_reg_3174;
wire   [31:0] grp_fu_1947_p2;
reg   [31:0] tmp_6_56_reg_3179;
wire   [31:0] grp_fu_1951_p2;
reg   [31:0] tmp_6_59_reg_3184;
wire   [31:0] grp_fu_1955_p2;
reg   [31:0] tmp_6_60_reg_3189;
reg   [31:0] tmp_6_2_reg_3194;
wire    ap_CS_fsm_state19;
reg   [31:0] tmp_6_3_reg_3199;
reg   [31:0] tmp_6_6_reg_3204;
reg   [31:0] tmp_6_7_reg_3209;
reg   [31:0] tmp_6_s_reg_3214;
reg   [31:0] tmp_6_10_reg_3219;
reg   [31:0] tmp_6_13_reg_3224;
reg   [31:0] tmp_6_14_reg_3229;
reg   [31:0] tmp_6_17_reg_3234;
reg   [31:0] tmp_6_18_reg_3239;
reg   [31:0] tmp_6_21_reg_3244;
reg   [31:0] tmp_6_22_reg_3249;
reg   [31:0] tmp_6_25_reg_3254;
reg   [31:0] tmp_6_26_reg_3259;
reg   [31:0] tmp_6_29_reg_3264;
reg   [31:0] tmp_6_30_reg_3269;
reg   [31:0] tmp_6_33_reg_3274;
reg   [31:0] tmp_6_34_reg_3279;
reg   [31:0] tmp_6_37_reg_3284;
reg   [31:0] tmp_6_38_reg_3289;
reg   [31:0] tmp_6_41_reg_3294;
reg   [31:0] tmp_6_42_reg_3299;
reg   [31:0] tmp_6_45_reg_3304;
reg   [31:0] tmp_6_46_reg_3309;
reg   [31:0] tmp_6_49_reg_3314;
reg   [31:0] tmp_6_50_reg_3319;
reg   [31:0] tmp_6_53_reg_3324;
reg   [31:0] tmp_6_54_reg_3329;
reg   [31:0] tmp_6_57_reg_3334;
reg   [31:0] tmp_6_58_reg_3339;
reg   [31:0] tmp_6_61_reg_3344;
reg   [31:0] tmp_6_62_reg_3349;
wire   [31:0] grp_fu_1639_p2;
reg   [31:0] c_0_0_1_reg_3354;
wire    ap_CS_fsm_state23;
wire   [31:0] grp_fu_1644_p2;
reg   [31:0] c_0_1_1_reg_3359;
wire   [31:0] grp_fu_1649_p2;
reg   [31:0] c_1_0_1_reg_3364;
wire   [31:0] grp_fu_1654_p2;
reg   [31:0] c_1_1_1_reg_3369;
wire   [31:0] grp_fu_1659_p2;
reg   [31:0] c_2_0_1_reg_3374;
wire   [31:0] grp_fu_1664_p2;
reg   [31:0] c_2_1_1_reg_3379;
wire   [31:0] grp_fu_1669_p2;
reg   [31:0] c_3_0_1_reg_3384;
wire   [31:0] grp_fu_1674_p2;
reg   [31:0] c_3_1_1_reg_3389;
wire   [31:0] grp_fu_1679_p2;
reg   [31:0] c_4_0_1_reg_3394;
wire   [31:0] grp_fu_1684_p2;
reg   [31:0] c_4_1_1_reg_3399;
wire   [31:0] grp_fu_1689_p2;
reg   [31:0] c_5_0_1_reg_3404;
wire   [31:0] grp_fu_1694_p2;
reg   [31:0] c_5_1_1_reg_3409;
wire   [31:0] grp_fu_1699_p2;
reg   [31:0] c_6_0_1_reg_3414;
wire   [31:0] grp_fu_1704_p2;
reg   [31:0] c_6_1_1_reg_3419;
wire   [31:0] grp_fu_1709_p2;
reg   [31:0] c_7_0_1_reg_3424;
wire   [31:0] grp_fu_1714_p2;
reg   [31:0] c_7_1_1_reg_3429;
wire   [31:0] grp_fu_1719_p2;
reg   [31:0] c_8_0_1_reg_3434;
wire   [31:0] grp_fu_1724_p2;
reg   [31:0] c_8_1_1_reg_3439;
wire   [31:0] grp_fu_1729_p2;
reg   [31:0] c_9_0_1_reg_3444;
wire   [31:0] grp_fu_1734_p2;
reg   [31:0] c_9_1_1_reg_3449;
wire   [31:0] grp_fu_1739_p2;
reg   [31:0] c_10_0_1_reg_3454;
wire   [31:0] grp_fu_1744_p2;
reg   [31:0] c_10_1_1_reg_3459;
wire   [31:0] grp_fu_1749_p2;
reg   [31:0] c_11_0_1_reg_3464;
wire   [31:0] grp_fu_1754_p2;
reg   [31:0] c_11_1_1_reg_3469;
wire   [31:0] grp_fu_1759_p2;
reg   [31:0] c_12_0_1_reg_3474;
wire   [31:0] grp_fu_1764_p2;
reg   [31:0] c_12_1_1_reg_3479;
wire   [31:0] grp_fu_1769_p2;
reg   [31:0] c_13_0_1_reg_3484;
wire   [31:0] grp_fu_1774_p2;
reg   [31:0] c_13_1_1_reg_3489;
wire   [31:0] grp_fu_1779_p2;
reg   [31:0] c_14_0_1_reg_3494;
wire   [31:0] grp_fu_1784_p2;
reg   [31:0] c_14_1_1_reg_3499;
wire   [31:0] grp_fu_1789_p2;
reg   [31:0] c_15_0_1_reg_3504;
wire   [31:0] grp_fu_1794_p2;
reg   [31:0] c_15_1_1_reg_3509;
wire    ap_CS_fsm_state24;
wire   [0:0] exitcond8_fu_2159_p2;
wire    ap_block_state25_pp1_stage0_iter0;
wire    ap_block_state26_pp1_stage0_iter1;
reg    ap_sig_ioackin_m_axi_C_WREADY;
reg    ap_block_state26_io;
reg    ap_block_pp1_stage0_11001;
wire   [6:0] indvar_next7_fu_2165_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [31:0] tmp_5_fu_2179_p66;
reg   [31:0] tmp_5_reg_3683;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_enable_reg_pp0_iter2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state25;
reg   [9:0] a_address0;
reg    a_ce0;
reg    a_we0;
reg   [10:0] ap_phi_mux_indvar_phi_fu_841_p4;
reg   [31:0] c_15_3_reg_849;
wire    ap_CS_fsm_state12;
reg   [31:0] c_15_2_reg_861;
reg   [31:0] c_15_1_reg_873;
reg   [31:0] c_15_0_reg_885;
reg   [31:0] c_14_3_reg_897;
reg   [31:0] c_14_2_reg_909;
reg   [31:0] c_14_1_reg_921;
reg   [31:0] c_14_0_reg_933;
reg   [31:0] c_13_3_reg_945;
reg   [31:0] c_13_2_reg_957;
reg   [31:0] c_13_1_reg_969;
reg   [31:0] c_13_0_reg_981;
reg   [31:0] c_12_3_reg_993;
reg   [31:0] c_12_2_reg_1005;
reg   [31:0] c_12_1_reg_1017;
reg   [31:0] c_12_0_reg_1029;
reg   [31:0] c_11_3_reg_1041;
reg   [31:0] c_11_2_reg_1053;
reg   [31:0] c_11_1_reg_1065;
reg   [31:0] c_11_0_reg_1077;
reg   [31:0] c_10_3_reg_1089;
reg   [31:0] c_10_2_reg_1101;
reg   [31:0] c_10_1_reg_1113;
reg   [31:0] c_10_0_reg_1125;
reg   [31:0] c_9_3_reg_1137;
reg   [31:0] c_9_2_reg_1149;
reg   [31:0] c_9_1_reg_1161;
reg   [31:0] c_9_0_reg_1173;
reg   [31:0] c_8_3_reg_1185;
reg   [31:0] c_8_2_reg_1197;
reg   [31:0] c_8_1_reg_1209;
reg   [31:0] c_8_0_reg_1221;
reg   [31:0] c_7_3_reg_1233;
reg   [31:0] c_7_2_reg_1245;
reg   [31:0] c_7_1_reg_1257;
reg   [31:0] c_7_0_reg_1269;
reg   [31:0] c_6_3_reg_1281;
reg   [31:0] c_6_2_reg_1293;
reg   [31:0] c_6_1_reg_1305;
reg   [31:0] c_6_0_reg_1317;
reg   [31:0] c_5_3_reg_1329;
reg   [31:0] c_5_2_reg_1341;
reg   [31:0] c_5_1_reg_1353;
reg   [31:0] c_5_0_reg_1365;
reg   [31:0] c_4_3_reg_1377;
reg   [31:0] c_4_2_reg_1389;
reg   [31:0] c_4_1_reg_1401;
reg   [31:0] c_4_0_reg_1413;
reg   [31:0] c_3_3_reg_1425;
reg   [31:0] c_3_2_reg_1437;
reg   [31:0] c_3_1_reg_1449;
reg   [31:0] c_3_0_reg_1461;
reg   [31:0] c_2_3_reg_1473;
reg   [31:0] c_2_2_reg_1485;
reg   [31:0] c_2_1_reg_1497;
reg   [31:0] c_2_0_reg_1509;
reg   [31:0] c_1_3_reg_1521;
reg   [31:0] c_1_2_reg_1533;
reg   [31:0] c_1_1_reg_1545;
reg   [31:0] c_1_0_reg_1557;
reg   [31:0] c_0_3_reg_1569;
reg   [31:0] c_0_2_reg_1581;
reg   [31:0] c_0_1_reg_1593;
reg   [31:0] c_0_0_reg_1605;
reg   [10:0] k_reg_1617;
wire   [31:0] indvar_cast4_fu_2019_p1;
wire   [31:0] tmp_2_fu_2037_p1;
wire   [31:0] tmp_9_fu_2063_p3;
wire   [31:0] tmp_3_fu_2093_p3;
wire   [31:0] tmp_10_fu_2123_p3;
wire   [31:0] k_cast3_fu_2024_p1;
wire   [31:0] sum_cast_fu_1973_p1;
wire   [31:0] sum5_cast_fu_1997_p1;
reg    ap_reg_ioackin_m_axi_A_ARREADY;
reg    ap_reg_ioackin_m_axi_C_AWREADY;
reg    ap_reg_ioackin_m_axi_C_WREADY;
wire    ap_block_pp1_stage0_01001;
reg   [31:0] grp_fu_1639_p0;
reg   [31:0] grp_fu_1639_p1;
wire    ap_CS_fsm_state20;
reg   [31:0] grp_fu_1644_p0;
reg   [31:0] grp_fu_1644_p1;
reg   [31:0] grp_fu_1649_p0;
reg   [31:0] grp_fu_1649_p1;
reg   [31:0] grp_fu_1654_p0;
reg   [31:0] grp_fu_1654_p1;
reg   [31:0] grp_fu_1659_p0;
reg   [31:0] grp_fu_1659_p1;
reg   [31:0] grp_fu_1664_p0;
reg   [31:0] grp_fu_1664_p1;
reg   [31:0] grp_fu_1669_p0;
reg   [31:0] grp_fu_1669_p1;
reg   [31:0] grp_fu_1674_p0;
reg   [31:0] grp_fu_1674_p1;
reg   [31:0] grp_fu_1679_p0;
reg   [31:0] grp_fu_1679_p1;
reg   [31:0] grp_fu_1684_p0;
reg   [31:0] grp_fu_1684_p1;
reg   [31:0] grp_fu_1689_p0;
reg   [31:0] grp_fu_1689_p1;
reg   [31:0] grp_fu_1694_p0;
reg   [31:0] grp_fu_1694_p1;
reg   [31:0] grp_fu_1699_p0;
reg   [31:0] grp_fu_1699_p1;
reg   [31:0] grp_fu_1704_p0;
reg   [31:0] grp_fu_1704_p1;
reg   [31:0] grp_fu_1709_p0;
reg   [31:0] grp_fu_1709_p1;
reg   [31:0] grp_fu_1714_p0;
reg   [31:0] grp_fu_1714_p1;
reg   [31:0] grp_fu_1719_p0;
reg   [31:0] grp_fu_1719_p1;
reg   [31:0] grp_fu_1724_p0;
reg   [31:0] grp_fu_1724_p1;
reg   [31:0] grp_fu_1729_p0;
reg   [31:0] grp_fu_1729_p1;
reg   [31:0] grp_fu_1734_p0;
reg   [31:0] grp_fu_1734_p1;
reg   [31:0] grp_fu_1739_p0;
reg   [31:0] grp_fu_1739_p1;
reg   [31:0] grp_fu_1744_p0;
reg   [31:0] grp_fu_1744_p1;
reg   [31:0] grp_fu_1749_p0;
reg   [31:0] grp_fu_1749_p1;
reg   [31:0] grp_fu_1754_p0;
reg   [31:0] grp_fu_1754_p1;
reg   [31:0] grp_fu_1759_p0;
reg   [31:0] grp_fu_1759_p1;
reg   [31:0] grp_fu_1764_p0;
reg   [31:0] grp_fu_1764_p1;
reg   [31:0] grp_fu_1769_p0;
reg   [31:0] grp_fu_1769_p1;
reg   [31:0] grp_fu_1774_p0;
reg   [31:0] grp_fu_1774_p1;
reg   [31:0] grp_fu_1779_p0;
reg   [31:0] grp_fu_1779_p1;
reg   [31:0] grp_fu_1784_p0;
reg   [31:0] grp_fu_1784_p1;
reg   [31:0] grp_fu_1789_p0;
reg   [31:0] grp_fu_1789_p1;
reg   [31:0] grp_fu_1794_p0;
reg   [31:0] grp_fu_1794_p1;
reg   [31:0] grp_fu_1831_p1;
wire    ap_CS_fsm_state16;
reg   [31:0] grp_fu_1835_p1;
reg   [31:0] grp_fu_1839_p1;
reg   [31:0] grp_fu_1843_p1;
reg   [31:0] grp_fu_1847_p1;
reg   [31:0] grp_fu_1851_p1;
reg   [31:0] grp_fu_1855_p1;
reg   [31:0] grp_fu_1859_p1;
reg   [31:0] grp_fu_1863_p1;
reg   [31:0] grp_fu_1867_p1;
reg   [31:0] grp_fu_1871_p1;
reg   [31:0] grp_fu_1875_p1;
reg   [31:0] grp_fu_1879_p1;
reg   [31:0] grp_fu_1883_p1;
reg   [31:0] grp_fu_1887_p1;
reg   [31:0] grp_fu_1891_p1;
reg   [31:0] grp_fu_1895_p1;
reg   [31:0] grp_fu_1899_p1;
reg   [31:0] grp_fu_1903_p1;
reg   [31:0] grp_fu_1907_p1;
reg   [31:0] grp_fu_1911_p1;
reg   [31:0] grp_fu_1915_p1;
reg   [31:0] grp_fu_1919_p1;
reg   [31:0] grp_fu_1923_p1;
reg   [31:0] grp_fu_1927_p1;
reg   [31:0] grp_fu_1931_p1;
reg   [31:0] grp_fu_1935_p1;
reg   [31:0] grp_fu_1939_p1;
reg   [31:0] grp_fu_1943_p1;
reg   [31:0] grp_fu_1947_p1;
reg   [31:0] grp_fu_1951_p1;
reg   [31:0] grp_fu_1955_p1;
wire   [30:0] A_offset_cast_fu_1963_p1;
wire   [30:0] A_offset_cast1_cast_fu_1959_p1;
wire   [30:0] C_offset_cast_fu_1987_p1;
wire   [30:0] C_offset_cast2_cast_fu_1983_p1;
wire   [30:0] sum5_fu_1991_p2;
wire   [12:0] tmp_1_fu_2029_p3;
wire   [12:0] tmp_8_fu_2057_p2;
wire   [12:0] tmp_s_fu_2087_p2;
wire   [12:0] tmp_7_fu_2117_p2;
wire   [5:0] tmp_fu_2171_p1;
wire   [6:0] tmp_5_fu_2179_p65;
reg   [27:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_1631;

// power-on initialization
initial begin
#0 ap_CS_fsm = 28'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_reg_ioackin_m_axi_A_ARREADY = 1'b0;
#0 ap_reg_ioackin_m_axi_C_AWREADY = 1'b0;
#0 ap_reg_ioackin_m_axi_C_WREADY = 1'b0;
end

a0_matxvec_a #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
a_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(a_address0),
    .ce0(a_ce0),
    .we0(a_we0),
    .d0(A_addr_read_reg_2339),
    .q0(a_q0)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1639_p0),
    .din1(grp_fu_1639_p1),
    .ce(1'b1),
    .dout(grp_fu_1639_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1644_p0),
    .din1(grp_fu_1644_p1),
    .ce(1'b1),
    .dout(grp_fu_1644_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1649_p0),
    .din1(grp_fu_1649_p1),
    .ce(1'b1),
    .dout(grp_fu_1649_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1654_p0),
    .din1(grp_fu_1654_p1),
    .ce(1'b1),
    .dout(grp_fu_1654_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1659_p0),
    .din1(grp_fu_1659_p1),
    .ce(1'b1),
    .dout(grp_fu_1659_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1664_p0),
    .din1(grp_fu_1664_p1),
    .ce(1'b1),
    .dout(grp_fu_1664_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1669_p0),
    .din1(grp_fu_1669_p1),
    .ce(1'b1),
    .dout(grp_fu_1669_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1674_p0),
    .din1(grp_fu_1674_p1),
    .ce(1'b1),
    .dout(grp_fu_1674_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1679_p0),
    .din1(grp_fu_1679_p1),
    .ce(1'b1),
    .dout(grp_fu_1679_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1684_p0),
    .din1(grp_fu_1684_p1),
    .ce(1'b1),
    .dout(grp_fu_1684_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1689_p0),
    .din1(grp_fu_1689_p1),
    .ce(1'b1),
    .dout(grp_fu_1689_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1694_p0),
    .din1(grp_fu_1694_p1),
    .ce(1'b1),
    .dout(grp_fu_1694_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1699_p0),
    .din1(grp_fu_1699_p1),
    .ce(1'b1),
    .dout(grp_fu_1699_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1704_p0),
    .din1(grp_fu_1704_p1),
    .ce(1'b1),
    .dout(grp_fu_1704_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1709_p0),
    .din1(grp_fu_1709_p1),
    .ce(1'b1),
    .dout(grp_fu_1709_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1714_p0),
    .din1(grp_fu_1714_p1),
    .ce(1'b1),
    .dout(grp_fu_1714_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1719_p0),
    .din1(grp_fu_1719_p1),
    .ce(1'b1),
    .dout(grp_fu_1719_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1724_p0),
    .din1(grp_fu_1724_p1),
    .ce(1'b1),
    .dout(grp_fu_1724_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1729_p0),
    .din1(grp_fu_1729_p1),
    .ce(1'b1),
    .dout(grp_fu_1729_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1734_p0),
    .din1(grp_fu_1734_p1),
    .ce(1'b1),
    .dout(grp_fu_1734_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1739_p0),
    .din1(grp_fu_1739_p1),
    .ce(1'b1),
    .dout(grp_fu_1739_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1744_p0),
    .din1(grp_fu_1744_p1),
    .ce(1'b1),
    .dout(grp_fu_1744_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1749_p0),
    .din1(grp_fu_1749_p1),
    .ce(1'b1),
    .dout(grp_fu_1749_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1754_p0),
    .din1(grp_fu_1754_p1),
    .ce(1'b1),
    .dout(grp_fu_1754_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1759_p0),
    .din1(grp_fu_1759_p1),
    .ce(1'b1),
    .dout(grp_fu_1759_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1764_p0),
    .din1(grp_fu_1764_p1),
    .ce(1'b1),
    .dout(grp_fu_1764_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1769_p0),
    .din1(grp_fu_1769_p1),
    .ce(1'b1),
    .dout(grp_fu_1769_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1774_p0),
    .din1(grp_fu_1774_p1),
    .ce(1'b1),
    .dout(grp_fu_1774_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1779_p0),
    .din1(grp_fu_1779_p1),
    .ce(1'b1),
    .dout(grp_fu_1779_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1784_p0),
    .din1(grp_fu_1784_p1),
    .ce(1'b1),
    .dout(grp_fu_1784_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1789_p0),
    .din1(grp_fu_1789_p1),
    .ce(1'b1),
    .dout(grp_fu_1789_p2)
);

a0_block_mmult_fadd_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fadd_bkb_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1794_p0),
    .din1(grp_fu_1794_p1),
    .ce(1'b1),
    .dout(grp_fu_1794_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1831_p1),
    .ce(1'b1),
    .dout(grp_fu_1831_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1835_p1),
    .ce(1'b1),
    .dout(grp_fu_1835_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1839_p1),
    .ce(1'b1),
    .dout(grp_fu_1839_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1843_p1),
    .ce(1'b1),
    .dout(grp_fu_1843_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1847_p1),
    .ce(1'b1),
    .dout(grp_fu_1847_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1851_p1),
    .ce(1'b1),
    .dout(grp_fu_1851_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1855_p1),
    .ce(1'b1),
    .dout(grp_fu_1855_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1859_p1),
    .ce(1'b1),
    .dout(grp_fu_1859_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1863_p1),
    .ce(1'b1),
    .dout(grp_fu_1863_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1867_p1),
    .ce(1'b1),
    .dout(grp_fu_1867_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1871_p1),
    .ce(1'b1),
    .dout(grp_fu_1871_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1875_p1),
    .ce(1'b1),
    .dout(grp_fu_1875_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1879_p1),
    .ce(1'b1),
    .dout(grp_fu_1879_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1883_p1),
    .ce(1'b1),
    .dout(grp_fu_1883_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1887_p1),
    .ce(1'b1),
    .dout(grp_fu_1887_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1891_p1),
    .ce(1'b1),
    .dout(grp_fu_1891_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1895_p1),
    .ce(1'b1),
    .dout(grp_fu_1895_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1899_p1),
    .ce(1'b1),
    .dout(grp_fu_1899_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1903_p1),
    .ce(1'b1),
    .dout(grp_fu_1903_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1907_p1),
    .ce(1'b1),
    .dout(grp_fu_1907_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1911_p1),
    .ce(1'b1),
    .dout(grp_fu_1911_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1915_p1),
    .ce(1'b1),
    .dout(grp_fu_1915_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1919_p1),
    .ce(1'b1),
    .dout(grp_fu_1919_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1923_p1),
    .ce(1'b1),
    .dout(grp_fu_1923_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1927_p1),
    .ce(1'b1),
    .dout(grp_fu_1927_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1931_p1),
    .ce(1'b1),
    .dout(grp_fu_1931_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1935_p1),
    .ce(1'b1),
    .dout(grp_fu_1935_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1939_p1),
    .ce(1'b1),
    .dout(grp_fu_1939_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1943_p1),
    .ce(1'b1),
    .dout(grp_fu_1943_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1947_p1),
    .ce(1'b1),
    .dout(grp_fu_1947_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1951_p1),
    .ce(1'b1),
    .dout(grp_fu_1951_p2)
);

a0_block_mmult_fmul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
block_mmult_fmul_cud_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_load_reg_2678),
    .din1(grp_fu_1955_p1),
    .ce(1'b1),
    .dout(grp_fu_1955_p2)
);

a0_block_mmult_mux_6dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 32 ),
    .din40_WIDTH( 32 ),
    .din41_WIDTH( 32 ),
    .din42_WIDTH( 32 ),
    .din43_WIDTH( 32 ),
    .din44_WIDTH( 32 ),
    .din45_WIDTH( 32 ),
    .din46_WIDTH( 32 ),
    .din47_WIDTH( 32 ),
    .din48_WIDTH( 32 ),
    .din49_WIDTH( 32 ),
    .din50_WIDTH( 32 ),
    .din51_WIDTH( 32 ),
    .din52_WIDTH( 32 ),
    .din53_WIDTH( 32 ),
    .din54_WIDTH( 32 ),
    .din55_WIDTH( 32 ),
    .din56_WIDTH( 32 ),
    .din57_WIDTH( 32 ),
    .din58_WIDTH( 32 ),
    .din59_WIDTH( 32 ),
    .din60_WIDTH( 32 ),
    .din61_WIDTH( 32 ),
    .din62_WIDTH( 32 ),
    .din63_WIDTH( 32 ),
    .din64_WIDTH( 7 ),
    .dout_WIDTH( 32 ))
block_mmult_mux_6dEe_U65(
    .din0(c_0_0_reg_1605),
    .din1(c_0_1_reg_1593),
    .din2(c_0_2_reg_1581),
    .din3(c_0_3_reg_1569),
    .din4(c_1_0_reg_1557),
    .din5(c_1_1_reg_1545),
    .din6(c_1_2_reg_1533),
    .din7(c_1_3_reg_1521),
    .din8(c_2_0_reg_1509),
    .din9(c_2_1_reg_1497),
    .din10(c_2_2_reg_1485),
    .din11(c_2_3_reg_1473),
    .din12(c_3_0_reg_1461),
    .din13(c_3_1_reg_1449),
    .din14(c_3_2_reg_1437),
    .din15(c_3_3_reg_1425),
    .din16(c_4_0_reg_1413),
    .din17(c_4_1_reg_1401),
    .din18(c_4_2_reg_1389),
    .din19(c_4_3_reg_1377),
    .din20(c_5_0_reg_1365),
    .din21(c_5_1_reg_1353),
    .din22(c_5_2_reg_1341),
    .din23(c_5_3_reg_1329),
    .din24(c_6_0_reg_1317),
    .din25(c_6_1_reg_1305),
    .din26(c_6_2_reg_1293),
    .din27(c_6_3_reg_1281),
    .din28(c_7_0_reg_1269),
    .din29(c_7_1_reg_1257),
    .din30(c_7_2_reg_1245),
    .din31(c_7_3_reg_1233),
    .din32(c_8_0_reg_1221),
    .din33(c_8_1_reg_1209),
    .din34(c_8_2_reg_1197),
    .din35(c_8_3_reg_1185),
    .din36(c_9_0_reg_1173),
    .din37(c_9_1_reg_1161),
    .din38(c_9_2_reg_1149),
    .din39(c_9_3_reg_1137),
    .din40(c_10_0_reg_1125),
    .din41(c_10_1_reg_1113),
    .din42(c_10_2_reg_1101),
    .din43(c_10_3_reg_1089),
    .din44(c_11_0_reg_1077),
    .din45(c_11_1_reg_1065),
    .din46(c_11_2_reg_1053),
    .din47(c_11_3_reg_1041),
    .din48(c_12_0_reg_1029),
    .din49(c_12_1_reg_1017),
    .din50(c_12_2_reg_1005),
    .din51(c_12_3_reg_993),
    .din52(c_13_0_reg_981),
    .din53(c_13_1_reg_969),
    .din54(c_13_2_reg_957),
    .din55(c_13_3_reg_945),
    .din56(c_14_0_reg_933),
    .din57(c_14_1_reg_921),
    .din58(c_14_2_reg_909),
    .din59(c_14_3_reg_897),
    .din60(c_15_0_reg_885),
    .din61(c_15_1_reg_873),
    .din62(c_15_2_reg_861),
    .din63(c_15_3_reg_849),
    .din64(tmp_5_fu_2179_p65),
    .dout(tmp_5_fu_2179_p66)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state9)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state25) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b0 == ap_block_state13_io) & (exitcond1_fu_2147_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state25))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state25);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b0 == ap_block_state13_io) & (exitcond1_fu_2147_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_A_ARREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            if ((ap_sig_ioackin_m_axi_A_ARREADY == 1'b1)) begin
                ap_reg_ioackin_m_axi_A_ARREADY <= 1'b0;
            end else if ((m_axi_A_ARREADY == 1'b1)) begin
                ap_reg_ioackin_m_axi_A_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_C_AWREADY <= 1'b0;
    end else begin
        if (((exitcond1_fu_2147_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
            if ((1'b0 == ap_block_state13_io)) begin
                ap_reg_ioackin_m_axi_C_AWREADY <= 1'b0;
            end else if ((m_axi_C_AWREADY == 1'b1)) begin
                ap_reg_ioackin_m_axi_C_AWREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_C_WREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_1631)) begin
            if ((1'b0 == ap_block_pp1_stage0_11001)) begin
                ap_reg_ioackin_m_axi_C_WREADY <= 1'b0;
            end else if (((m_axi_C_WREADY == 1'b1) & (1'b0 == ap_block_pp1_stage0_01001))) begin
                ap_reg_ioackin_m_axi_C_WREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_0_0_reg_1605 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_0_0_reg_1605 <= c_0_0_1_reg_3354;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_0_1_reg_1593 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_0_1_reg_1593 <= c_0_1_1_reg_3359;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_0_2_reg_1581 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_0_2_reg_1581 <= grp_fu_1639_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_0_3_reg_1569 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_0_3_reg_1569 <= grp_fu_1644_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_10_0_reg_1125 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_10_0_reg_1125 <= c_10_0_1_reg_3454;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_10_1_reg_1113 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_10_1_reg_1113 <= c_10_1_1_reg_3459;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_10_2_reg_1101 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_10_2_reg_1101 <= grp_fu_1739_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_10_3_reg_1089 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_10_3_reg_1089 <= grp_fu_1744_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_11_0_reg_1077 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_11_0_reg_1077 <= c_11_0_1_reg_3464;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_11_1_reg_1065 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_11_1_reg_1065 <= c_11_1_1_reg_3469;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_11_2_reg_1053 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_11_2_reg_1053 <= grp_fu_1749_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_11_3_reg_1041 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_11_3_reg_1041 <= grp_fu_1754_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_12_0_reg_1029 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_12_0_reg_1029 <= c_12_0_1_reg_3474;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_12_1_reg_1017 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_12_1_reg_1017 <= c_12_1_1_reg_3479;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_12_2_reg_1005 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_12_2_reg_1005 <= grp_fu_1759_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_12_3_reg_993 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_12_3_reg_993 <= grp_fu_1764_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_13_0_reg_981 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_13_0_reg_981 <= c_13_0_1_reg_3484;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_13_1_reg_969 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_13_1_reg_969 <= c_13_1_1_reg_3489;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_13_2_reg_957 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_13_2_reg_957 <= grp_fu_1769_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_13_3_reg_945 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_13_3_reg_945 <= grp_fu_1774_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_14_0_reg_933 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_14_0_reg_933 <= c_14_0_1_reg_3494;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_14_1_reg_921 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_14_1_reg_921 <= c_14_1_1_reg_3499;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_14_2_reg_909 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_14_2_reg_909 <= grp_fu_1779_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_14_3_reg_897 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_14_3_reg_897 <= grp_fu_1784_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_15_0_reg_885 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_15_0_reg_885 <= c_15_0_1_reg_3504;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_15_1_reg_873 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_15_1_reg_873 <= c_15_1_1_reg_3509;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_15_2_reg_861 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_15_2_reg_861 <= grp_fu_1789_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_15_3_reg_849 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_15_3_reg_849 <= grp_fu_1794_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_1_0_reg_1557 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_1_0_reg_1557 <= c_1_0_1_reg_3364;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_1_1_reg_1545 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_1_1_reg_1545 <= c_1_1_1_reg_3369;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_1_2_reg_1533 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_1_2_reg_1533 <= grp_fu_1649_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_1_3_reg_1521 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_1_3_reg_1521 <= grp_fu_1654_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_2_0_reg_1509 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_2_0_reg_1509 <= c_2_0_1_reg_3374;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_2_1_reg_1497 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_2_1_reg_1497 <= c_2_1_1_reg_3379;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_2_2_reg_1485 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_2_2_reg_1485 <= grp_fu_1659_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_2_3_reg_1473 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_2_3_reg_1473 <= grp_fu_1664_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_3_0_reg_1461 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_3_0_reg_1461 <= c_3_0_1_reg_3384;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_3_1_reg_1449 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_3_1_reg_1449 <= c_3_1_1_reg_3389;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_3_2_reg_1437 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_3_2_reg_1437 <= grp_fu_1669_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_3_3_reg_1425 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_3_3_reg_1425 <= grp_fu_1674_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_4_0_reg_1413 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_4_0_reg_1413 <= c_4_0_1_reg_3394;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_4_1_reg_1401 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_4_1_reg_1401 <= c_4_1_1_reg_3399;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_4_2_reg_1389 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_4_2_reg_1389 <= grp_fu_1679_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_4_3_reg_1377 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_4_3_reg_1377 <= grp_fu_1684_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_5_0_reg_1365 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_5_0_reg_1365 <= c_5_0_1_reg_3404;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_5_1_reg_1353 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_5_1_reg_1353 <= c_5_1_1_reg_3409;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_5_2_reg_1341 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_5_2_reg_1341 <= grp_fu_1689_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_5_3_reg_1329 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_5_3_reg_1329 <= grp_fu_1694_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_6_0_reg_1317 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_6_0_reg_1317 <= c_6_0_1_reg_3414;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_6_1_reg_1305 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_6_1_reg_1305 <= c_6_1_1_reg_3419;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_6_2_reg_1293 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_6_2_reg_1293 <= grp_fu_1699_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_6_3_reg_1281 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_6_3_reg_1281 <= grp_fu_1704_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_7_0_reg_1269 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_7_0_reg_1269 <= c_7_0_1_reg_3424;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_7_1_reg_1257 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_7_1_reg_1257 <= c_7_1_1_reg_3429;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_7_2_reg_1245 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_7_2_reg_1245 <= grp_fu_1709_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_7_3_reg_1233 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_7_3_reg_1233 <= grp_fu_1714_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_8_0_reg_1221 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_8_0_reg_1221 <= c_8_0_1_reg_3434;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_8_1_reg_1209 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_8_1_reg_1209 <= c_8_1_1_reg_3439;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_8_2_reg_1197 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_8_2_reg_1197 <= grp_fu_1719_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_8_3_reg_1185 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_8_3_reg_1185 <= grp_fu_1724_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_9_0_reg_1173 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_9_0_reg_1173 <= c_9_0_1_reg_3444;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_9_1_reg_1161 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_9_1_reg_1161 <= c_9_1_1_reg_3449;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_9_2_reg_1149 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_9_2_reg_1149 <= grp_fu_1729_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c_9_3_reg_1137 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        c_9_3_reg_1137 <= grp_fu_1734_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state13_io) & (exitcond1_fu_2147_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        indvar6_reg_1628 <= 7'd0;
    end else if (((exitcond8_fu_2159_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar6_reg_1628 <= indvar_next7_fu_2165_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_2330 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_reg_837 <= indvar_next_reg_2334;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_reg_837 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        k_reg_1617 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        k_reg_1617 <= k_1_reg_2668;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_2330 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_addr_read_reg_2339 <= m_axi_A_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13))) begin
        B_0_addr_2_reg_2354[11 : 2] <= tmp_3_fu_2093_p3[11 : 2];
        B_0_addr_3_reg_2359[11 : 2] <= tmp_10_fu_2123_p3[11 : 2];
        B_10_addr_2_reg_2554[11 : 2] <= tmp_3_fu_2093_p3[11 : 2];
        B_10_addr_3_reg_2559[11 : 2] <= tmp_10_fu_2123_p3[11 : 2];
        B_11_addr_2_reg_2574[11 : 2] <= tmp_3_fu_2093_p3[11 : 2];
        B_11_addr_3_reg_2579[11 : 2] <= tmp_10_fu_2123_p3[11 : 2];
        B_12_addr_2_reg_2594[11 : 2] <= tmp_3_fu_2093_p3[11 : 2];
        B_12_addr_3_reg_2599[11 : 2] <= tmp_10_fu_2123_p3[11 : 2];
        B_13_addr_2_reg_2614[11 : 2] <= tmp_3_fu_2093_p3[11 : 2];
        B_13_addr_3_reg_2619[11 : 2] <= tmp_10_fu_2123_p3[11 : 2];
        B_14_addr_2_reg_2634[11 : 2] <= tmp_3_fu_2093_p3[11 : 2];
        B_14_addr_3_reg_2639[11 : 2] <= tmp_10_fu_2123_p3[11 : 2];
        B_15_addr_2_reg_2654[11 : 2] <= tmp_3_fu_2093_p3[11 : 2];
        B_15_addr_3_reg_2659[11 : 2] <= tmp_10_fu_2123_p3[11 : 2];
        B_1_addr_2_reg_2374[11 : 2] <= tmp_3_fu_2093_p3[11 : 2];
        B_1_addr_3_reg_2379[11 : 2] <= tmp_10_fu_2123_p3[11 : 2];
        B_2_addr_2_reg_2394[11 : 2] <= tmp_3_fu_2093_p3[11 : 2];
        B_2_addr_3_reg_2399[11 : 2] <= tmp_10_fu_2123_p3[11 : 2];
        B_3_addr_2_reg_2414[11 : 2] <= tmp_3_fu_2093_p3[11 : 2];
        B_3_addr_3_reg_2419[11 : 2] <= tmp_10_fu_2123_p3[11 : 2];
        B_4_addr_2_reg_2434[11 : 2] <= tmp_3_fu_2093_p3[11 : 2];
        B_4_addr_3_reg_2439[11 : 2] <= tmp_10_fu_2123_p3[11 : 2];
        B_5_addr_2_reg_2454[11 : 2] <= tmp_3_fu_2093_p3[11 : 2];
        B_5_addr_3_reg_2459[11 : 2] <= tmp_10_fu_2123_p3[11 : 2];
        B_6_addr_2_reg_2474[11 : 2] <= tmp_3_fu_2093_p3[11 : 2];
        B_6_addr_3_reg_2479[11 : 2] <= tmp_10_fu_2123_p3[11 : 2];
        B_7_addr_2_reg_2494[11 : 2] <= tmp_3_fu_2093_p3[11 : 2];
        B_7_addr_3_reg_2499[11 : 2] <= tmp_10_fu_2123_p3[11 : 2];
        B_8_addr_2_reg_2514[11 : 2] <= tmp_3_fu_2093_p3[11 : 2];
        B_8_addr_3_reg_2519[11 : 2] <= tmp_10_fu_2123_p3[11 : 2];
        B_9_addr_2_reg_2534[11 : 2] <= tmp_3_fu_2093_p3[11 : 2];
        B_9_addr_3_reg_2539[11 : 2] <= tmp_10_fu_2123_p3[11 : 2];
        k_1_reg_2668 <= k_1_fu_2153_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_0_load_1_reg_2719 <= B_0_q1;
        B_0_load_reg_2714 <= B_0_q0;
        B_10_load_1_reg_2819 <= B_10_q1;
        B_10_load_reg_2814 <= B_10_q0;
        B_11_load_1_reg_2829 <= B_11_q1;
        B_11_load_reg_2824 <= B_11_q0;
        B_12_load_1_reg_2839 <= B_12_q1;
        B_12_load_reg_2834 <= B_12_q0;
        B_13_load_1_reg_2849 <= B_13_q1;
        B_13_load_reg_2844 <= B_13_q0;
        B_14_load_1_reg_2859 <= B_14_q1;
        B_14_load_reg_2854 <= B_14_q0;
        B_15_load_1_reg_2869 <= B_15_q1;
        B_15_load_reg_2864 <= B_15_q0;
        B_1_load_1_reg_2729 <= B_1_q1;
        B_1_load_reg_2724 <= B_1_q0;
        B_2_load_1_reg_2739 <= B_2_q1;
        B_2_load_reg_2734 <= B_2_q0;
        B_3_load_1_reg_2749 <= B_3_q1;
        B_3_load_reg_2744 <= B_3_q0;
        B_4_load_1_reg_2759 <= B_4_q1;
        B_4_load_reg_2754 <= B_4_q0;
        B_5_load_1_reg_2769 <= B_5_q1;
        B_5_load_reg_2764 <= B_5_q0;
        B_6_load_1_reg_2779 <= B_6_q1;
        B_6_load_reg_2774 <= B_6_q0;
        B_7_load_1_reg_2789 <= B_7_q1;
        B_7_load_reg_2784 <= B_7_q0;
        B_8_load_1_reg_2799 <= B_8_q1;
        B_8_load_reg_2794 <= B_8_q0;
        B_9_load_1_reg_2809 <= B_9_q1;
        B_9_load_reg_2804 <= B_9_q0;
        a_load_reg_2678 <= a_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        B_0_load_2_reg_2874 <= B_0_q0;
        B_0_load_3_reg_2879 <= B_0_q1;
        B_10_load_2_reg_2974 <= B_10_q0;
        B_10_load_3_reg_2979 <= B_10_q1;
        B_11_load_2_reg_2984 <= B_11_q0;
        B_11_load_3_reg_2989 <= B_11_q1;
        B_12_load_2_reg_2994 <= B_12_q0;
        B_12_load_3_reg_2999 <= B_12_q1;
        B_13_load_2_reg_3004 <= B_13_q0;
        B_13_load_3_reg_3009 <= B_13_q1;
        B_14_load_2_reg_3014 <= B_14_q0;
        B_14_load_3_reg_3019 <= B_14_q1;
        B_15_load_2_reg_3024 <= B_15_q0;
        B_15_load_3_reg_3029 <= B_15_q1;
        B_1_load_2_reg_2884 <= B_1_q0;
        B_1_load_3_reg_2889 <= B_1_q1;
        B_2_load_2_reg_2894 <= B_2_q0;
        B_2_load_3_reg_2899 <= B_2_q1;
        B_3_load_2_reg_2904 <= B_3_q0;
        B_3_load_3_reg_2909 <= B_3_q1;
        B_4_load_2_reg_2914 <= B_4_q0;
        B_4_load_3_reg_2919 <= B_4_q1;
        B_5_load_2_reg_2924 <= B_5_q0;
        B_5_load_3_reg_2929 <= B_5_q1;
        B_6_load_2_reg_2934 <= B_6_q0;
        B_6_load_3_reg_2939 <= B_6_q1;
        B_7_load_2_reg_2944 <= B_7_q0;
        B_7_load_3_reg_2949 <= B_7_q1;
        B_8_load_2_reg_2954 <= B_8_q0;
        B_8_load_3_reg_2959 <= B_8_q1;
        B_9_load_2_reg_2964 <= B_9_q0;
        B_9_load_3_reg_2969 <= B_9_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        C_addr_reg_2324[30 : 0] <= sum5_cast_fu_1997_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        c_0_0_1_reg_3354 <= grp_fu_1639_p2;
        c_0_1_1_reg_3359 <= grp_fu_1644_p2;
        c_10_0_1_reg_3454 <= grp_fu_1739_p2;
        c_10_1_1_reg_3459 <= grp_fu_1744_p2;
        c_11_0_1_reg_3464 <= grp_fu_1749_p2;
        c_11_1_1_reg_3469 <= grp_fu_1754_p2;
        c_12_0_1_reg_3474 <= grp_fu_1759_p2;
        c_12_1_1_reg_3479 <= grp_fu_1764_p2;
        c_13_0_1_reg_3484 <= grp_fu_1769_p2;
        c_13_1_1_reg_3489 <= grp_fu_1774_p2;
        c_14_0_1_reg_3494 <= grp_fu_1779_p2;
        c_14_1_1_reg_3499 <= grp_fu_1784_p2;
        c_15_0_1_reg_3504 <= grp_fu_1789_p2;
        c_15_1_1_reg_3509 <= grp_fu_1794_p2;
        c_1_0_1_reg_3364 <= grp_fu_1649_p2;
        c_1_1_1_reg_3369 <= grp_fu_1654_p2;
        c_2_0_1_reg_3374 <= grp_fu_1659_p2;
        c_2_1_1_reg_3379 <= grp_fu_1664_p2;
        c_3_0_1_reg_3384 <= grp_fu_1669_p2;
        c_3_1_1_reg_3389 <= grp_fu_1674_p2;
        c_4_0_1_reg_3394 <= grp_fu_1679_p2;
        c_4_1_1_reg_3399 <= grp_fu_1684_p2;
        c_5_0_1_reg_3404 <= grp_fu_1689_p2;
        c_5_1_1_reg_3409 <= grp_fu_1694_p2;
        c_6_0_1_reg_3414 <= grp_fu_1699_p2;
        c_6_1_1_reg_3419 <= grp_fu_1704_p2;
        c_7_0_1_reg_3424 <= grp_fu_1709_p2;
        c_7_1_1_reg_3429 <= grp_fu_1714_p2;
        c_8_0_1_reg_3434 <= grp_fu_1719_p2;
        c_8_1_1_reg_3439 <= grp_fu_1724_p2;
        c_9_0_1_reg_3444 <= grp_fu_1729_p2;
        c_9_1_1_reg_3449 <= grp_fu_1734_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond3_reg_2330 <= exitcond3_fu_2007_p2;
        exitcond3_reg_2330_pp0_iter1_reg <= exitcond3_reg_2330;
        indvar_reg_837_pp0_iter1_reg <= indvar_reg_837;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond8_reg_3674 <= exitcond8_fu_2159_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_next_reg_2334 <= indvar_next_fu_2013_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sum_reg_2313 <= sum_fu_1967_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_2159_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_5_reg_3683 <= tmp_5_fu_2179_p66;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_6_10_reg_3219 <= grp_fu_1851_p2;
        tmp_6_13_reg_3224 <= grp_fu_1855_p2;
        tmp_6_14_reg_3229 <= grp_fu_1859_p2;
        tmp_6_17_reg_3234 <= grp_fu_1863_p2;
        tmp_6_18_reg_3239 <= grp_fu_1867_p2;
        tmp_6_21_reg_3244 <= grp_fu_1871_p2;
        tmp_6_22_reg_3249 <= grp_fu_1875_p2;
        tmp_6_25_reg_3254 <= grp_fu_1879_p2;
        tmp_6_26_reg_3259 <= grp_fu_1883_p2;
        tmp_6_29_reg_3264 <= grp_fu_1887_p2;
        tmp_6_2_reg_3194 <= grp_fu_1831_p2;
        tmp_6_30_reg_3269 <= grp_fu_1891_p2;
        tmp_6_33_reg_3274 <= grp_fu_1895_p2;
        tmp_6_34_reg_3279 <= grp_fu_1899_p2;
        tmp_6_37_reg_3284 <= grp_fu_1903_p2;
        tmp_6_38_reg_3289 <= grp_fu_1907_p2;
        tmp_6_3_reg_3199 <= grp_fu_1835_p2;
        tmp_6_41_reg_3294 <= grp_fu_1911_p2;
        tmp_6_42_reg_3299 <= grp_fu_1915_p2;
        tmp_6_45_reg_3304 <= grp_fu_1919_p2;
        tmp_6_46_reg_3309 <= grp_fu_1923_p2;
        tmp_6_49_reg_3314 <= grp_fu_1927_p2;
        tmp_6_50_reg_3319 <= grp_fu_1931_p2;
        tmp_6_53_reg_3324 <= grp_fu_1935_p2;
        tmp_6_54_reg_3329 <= grp_fu_1939_p2;
        tmp_6_57_reg_3334 <= grp_fu_1943_p2;
        tmp_6_58_reg_3339 <= grp_fu_1947_p2;
        tmp_6_61_reg_3344 <= grp_fu_1951_p2;
        tmp_6_62_reg_3349 <= grp_fu_1955_p2;
        tmp_6_6_reg_3204 <= grp_fu_1839_p2;
        tmp_6_7_reg_3209 <= grp_fu_1843_p2;
        tmp_6_s_reg_3214 <= grp_fu_1847_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_6_11_reg_3064 <= grp_fu_1855_p2;
        tmp_6_12_reg_3069 <= grp_fu_1859_p2;
        tmp_6_15_reg_3074 <= grp_fu_1863_p2;
        tmp_6_16_reg_3079 <= grp_fu_1867_p2;
        tmp_6_19_reg_3084 <= grp_fu_1871_p2;
        tmp_6_1_reg_3039 <= grp_fu_1835_p2;
        tmp_6_20_reg_3089 <= grp_fu_1875_p2;
        tmp_6_23_reg_3094 <= grp_fu_1879_p2;
        tmp_6_24_reg_3099 <= grp_fu_1883_p2;
        tmp_6_27_reg_3104 <= grp_fu_1887_p2;
        tmp_6_28_reg_3109 <= grp_fu_1891_p2;
        tmp_6_31_reg_3114 <= grp_fu_1895_p2;
        tmp_6_32_reg_3119 <= grp_fu_1899_p2;
        tmp_6_35_reg_3124 <= grp_fu_1903_p2;
        tmp_6_36_reg_3129 <= grp_fu_1907_p2;
        tmp_6_39_reg_3134 <= grp_fu_1911_p2;
        tmp_6_40_reg_3139 <= grp_fu_1915_p2;
        tmp_6_43_reg_3144 <= grp_fu_1919_p2;
        tmp_6_44_reg_3149 <= grp_fu_1923_p2;
        tmp_6_47_reg_3154 <= grp_fu_1927_p2;
        tmp_6_48_reg_3159 <= grp_fu_1931_p2;
        tmp_6_4_reg_3044 <= grp_fu_1839_p2;
        tmp_6_51_reg_3164 <= grp_fu_1935_p2;
        tmp_6_52_reg_3169 <= grp_fu_1939_p2;
        tmp_6_55_reg_3174 <= grp_fu_1943_p2;
        tmp_6_56_reg_3179 <= grp_fu_1947_p2;
        tmp_6_59_reg_3184 <= grp_fu_1951_p2;
        tmp_6_5_reg_3049 <= grp_fu_1843_p2;
        tmp_6_60_reg_3189 <= grp_fu_1955_p2;
        tmp_6_8_reg_3054 <= grp_fu_1847_p2;
        tmp_6_9_reg_3059 <= grp_fu_1851_p2;
        tmp_6_reg_3034 <= grp_fu_1831_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        A_blk_n_AR = m_axi_A_ARREADY;
    end else begin
        A_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond3_reg_2330 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_blk_n_R = m_axi_A_RVALID;
    end else begin
        A_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_0_address0 = B_0_addr_2_reg_2354;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_0_address0 = tmp_2_fu_2037_p1;
    end else begin
        B_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_0_address1 = B_0_addr_3_reg_2359;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_0_address1 = tmp_9_fu_2063_p3;
    end else begin
        B_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_0_ce0 = 1'b1;
    end else begin
        B_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_0_ce1 = 1'b1;
    end else begin
        B_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_10_address0 = B_10_addr_2_reg_2554;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_10_address0 = tmp_2_fu_2037_p1;
    end else begin
        B_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_10_address1 = B_10_addr_3_reg_2559;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_10_address1 = tmp_9_fu_2063_p3;
    end else begin
        B_10_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_10_ce0 = 1'b1;
    end else begin
        B_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_10_ce1 = 1'b1;
    end else begin
        B_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_11_address0 = B_11_addr_2_reg_2574;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_11_address0 = tmp_2_fu_2037_p1;
    end else begin
        B_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_11_address1 = B_11_addr_3_reg_2579;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_11_address1 = tmp_9_fu_2063_p3;
    end else begin
        B_11_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_11_ce0 = 1'b1;
    end else begin
        B_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_11_ce1 = 1'b1;
    end else begin
        B_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_12_address0 = B_12_addr_2_reg_2594;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_12_address0 = tmp_2_fu_2037_p1;
    end else begin
        B_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_12_address1 = B_12_addr_3_reg_2599;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_12_address1 = tmp_9_fu_2063_p3;
    end else begin
        B_12_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_12_ce0 = 1'b1;
    end else begin
        B_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_12_ce1 = 1'b1;
    end else begin
        B_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_13_address0 = B_13_addr_2_reg_2614;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_13_address0 = tmp_2_fu_2037_p1;
    end else begin
        B_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_13_address1 = B_13_addr_3_reg_2619;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_13_address1 = tmp_9_fu_2063_p3;
    end else begin
        B_13_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_13_ce0 = 1'b1;
    end else begin
        B_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_13_ce1 = 1'b1;
    end else begin
        B_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_14_address0 = B_14_addr_2_reg_2634;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_14_address0 = tmp_2_fu_2037_p1;
    end else begin
        B_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_14_address1 = B_14_addr_3_reg_2639;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_14_address1 = tmp_9_fu_2063_p3;
    end else begin
        B_14_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_14_ce0 = 1'b1;
    end else begin
        B_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_14_ce1 = 1'b1;
    end else begin
        B_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_15_address0 = B_15_addr_2_reg_2654;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_15_address0 = tmp_2_fu_2037_p1;
    end else begin
        B_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_15_address1 = B_15_addr_3_reg_2659;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_15_address1 = tmp_9_fu_2063_p3;
    end else begin
        B_15_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_15_ce0 = 1'b1;
    end else begin
        B_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_15_ce1 = 1'b1;
    end else begin
        B_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_1_address0 = B_1_addr_2_reg_2374;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_1_address0 = tmp_2_fu_2037_p1;
    end else begin
        B_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_1_address1 = B_1_addr_3_reg_2379;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_1_address1 = tmp_9_fu_2063_p3;
    end else begin
        B_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_1_ce0 = 1'b1;
    end else begin
        B_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_1_ce1 = 1'b1;
    end else begin
        B_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_2_address0 = B_2_addr_2_reg_2394;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_2_address0 = tmp_2_fu_2037_p1;
    end else begin
        B_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_2_address1 = B_2_addr_3_reg_2399;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_2_address1 = tmp_9_fu_2063_p3;
    end else begin
        B_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_2_ce0 = 1'b1;
    end else begin
        B_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_2_ce1 = 1'b1;
    end else begin
        B_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_3_address0 = B_3_addr_2_reg_2414;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_3_address0 = tmp_2_fu_2037_p1;
    end else begin
        B_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_3_address1 = B_3_addr_3_reg_2419;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_3_address1 = tmp_9_fu_2063_p3;
    end else begin
        B_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_3_ce0 = 1'b1;
    end else begin
        B_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_3_ce1 = 1'b1;
    end else begin
        B_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_4_address0 = B_4_addr_2_reg_2434;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_4_address0 = tmp_2_fu_2037_p1;
    end else begin
        B_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_4_address1 = B_4_addr_3_reg_2439;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_4_address1 = tmp_9_fu_2063_p3;
    end else begin
        B_4_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_4_ce0 = 1'b1;
    end else begin
        B_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_4_ce1 = 1'b1;
    end else begin
        B_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_5_address0 = B_5_addr_2_reg_2454;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_5_address0 = tmp_2_fu_2037_p1;
    end else begin
        B_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_5_address1 = B_5_addr_3_reg_2459;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_5_address1 = tmp_9_fu_2063_p3;
    end else begin
        B_5_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_5_ce0 = 1'b1;
    end else begin
        B_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_5_ce1 = 1'b1;
    end else begin
        B_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_6_address0 = B_6_addr_2_reg_2474;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_6_address0 = tmp_2_fu_2037_p1;
    end else begin
        B_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_6_address1 = B_6_addr_3_reg_2479;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_6_address1 = tmp_9_fu_2063_p3;
    end else begin
        B_6_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_6_ce0 = 1'b1;
    end else begin
        B_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_6_ce1 = 1'b1;
    end else begin
        B_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_7_address0 = B_7_addr_2_reg_2494;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_7_address0 = tmp_2_fu_2037_p1;
    end else begin
        B_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_7_address1 = B_7_addr_3_reg_2499;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_7_address1 = tmp_9_fu_2063_p3;
    end else begin
        B_7_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_7_ce0 = 1'b1;
    end else begin
        B_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_7_ce1 = 1'b1;
    end else begin
        B_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_8_address0 = B_8_addr_2_reg_2514;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_8_address0 = tmp_2_fu_2037_p1;
    end else begin
        B_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_8_address1 = B_8_addr_3_reg_2519;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_8_address1 = tmp_9_fu_2063_p3;
    end else begin
        B_8_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_8_ce0 = 1'b1;
    end else begin
        B_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_8_ce1 = 1'b1;
    end else begin
        B_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_9_address0 = B_9_addr_2_reg_2534;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_9_address0 = tmp_2_fu_2037_p1;
    end else begin
        B_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        B_9_address1 = B_9_addr_3_reg_2539;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        B_9_address1 = tmp_9_fu_2063_p3;
    end else begin
        B_9_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_9_ce0 = 1'b1;
    end else begin
        B_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        B_9_ce1 = 1'b1;
    end else begin
        B_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_fu_2147_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        C_blk_n_AW = m_axi_C_AWREADY;
    end else begin
        C_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        C_blk_n_B = m_axi_C_BVALID;
    end else begin
        C_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond8_reg_3674 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        C_blk_n_W = m_axi_C_WREADY;
    end else begin
        C_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        a_address0 = k_cast3_fu_2024_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        a_address0 = indvar_cast4_fu_2019_p1;
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13)))) begin
        a_ce0 = 1'b1;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond3_reg_2330_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        a_we0 = 1'b1;
    end else begin
        a_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond3_fu_2007_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond8_fu_2159_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state25 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state25 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((m_axi_C_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state31)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond3_reg_2330 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_phi_fu_841_p4 = indvar_next_reg_2334;
    end else begin
        ap_phi_mux_indvar_phi_fu_841_p4 = indvar_reg_837;
    end
end

always @ (*) begin
    if (((m_axi_C_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_A_ARREADY == 1'b0)) begin
        ap_sig_ioackin_m_axi_A_ARREADY = m_axi_A_ARREADY;
    end else begin
        ap_sig_ioackin_m_axi_A_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_C_AWREADY == 1'b0)) begin
        ap_sig_ioackin_m_axi_C_AWREADY = m_axi_C_AWREADY;
    end else begin
        ap_sig_ioackin_m_axi_C_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_C_WREADY == 1'b0)) begin
        ap_sig_ioackin_m_axi_C_WREADY = m_axi_C_WREADY;
    end else begin
        ap_sig_ioackin_m_axi_C_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1639_p0 = c_0_2_reg_1581;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1639_p0 = c_0_0_reg_1605;
    end else begin
        grp_fu_1639_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1639_p1 = tmp_6_2_reg_3194;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1639_p1 = tmp_6_reg_3034;
    end else begin
        grp_fu_1639_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1644_p0 = c_0_3_reg_1569;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1644_p0 = c_0_1_reg_1593;
    end else begin
        grp_fu_1644_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1644_p1 = tmp_6_3_reg_3199;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1644_p1 = tmp_6_1_reg_3039;
    end else begin
        grp_fu_1644_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1649_p0 = c_1_2_reg_1533;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1649_p0 = c_1_0_reg_1557;
    end else begin
        grp_fu_1649_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1649_p1 = tmp_6_6_reg_3204;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1649_p1 = tmp_6_4_reg_3044;
    end else begin
        grp_fu_1649_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1654_p0 = c_1_3_reg_1521;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1654_p0 = c_1_1_reg_1545;
    end else begin
        grp_fu_1654_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1654_p1 = tmp_6_7_reg_3209;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1654_p1 = tmp_6_5_reg_3049;
    end else begin
        grp_fu_1654_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1659_p0 = c_2_2_reg_1485;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1659_p0 = c_2_0_reg_1509;
    end else begin
        grp_fu_1659_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1659_p1 = tmp_6_s_reg_3214;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1659_p1 = tmp_6_8_reg_3054;
    end else begin
        grp_fu_1659_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1664_p0 = c_2_3_reg_1473;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1664_p0 = c_2_1_reg_1497;
    end else begin
        grp_fu_1664_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1664_p1 = tmp_6_10_reg_3219;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1664_p1 = tmp_6_9_reg_3059;
    end else begin
        grp_fu_1664_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1669_p0 = c_3_2_reg_1437;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1669_p0 = c_3_0_reg_1461;
    end else begin
        grp_fu_1669_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1669_p1 = tmp_6_13_reg_3224;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1669_p1 = tmp_6_11_reg_3064;
    end else begin
        grp_fu_1669_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1674_p0 = c_3_3_reg_1425;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1674_p0 = c_3_1_reg_1449;
    end else begin
        grp_fu_1674_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1674_p1 = tmp_6_14_reg_3229;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1674_p1 = tmp_6_12_reg_3069;
    end else begin
        grp_fu_1674_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1679_p0 = c_4_2_reg_1389;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1679_p0 = c_4_0_reg_1413;
    end else begin
        grp_fu_1679_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1679_p1 = tmp_6_17_reg_3234;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1679_p1 = tmp_6_15_reg_3074;
    end else begin
        grp_fu_1679_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1684_p0 = c_4_3_reg_1377;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1684_p0 = c_4_1_reg_1401;
    end else begin
        grp_fu_1684_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1684_p1 = tmp_6_18_reg_3239;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1684_p1 = tmp_6_16_reg_3079;
    end else begin
        grp_fu_1684_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1689_p0 = c_5_2_reg_1341;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1689_p0 = c_5_0_reg_1365;
    end else begin
        grp_fu_1689_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1689_p1 = tmp_6_21_reg_3244;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1689_p1 = tmp_6_19_reg_3084;
    end else begin
        grp_fu_1689_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1694_p0 = c_5_3_reg_1329;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1694_p0 = c_5_1_reg_1353;
    end else begin
        grp_fu_1694_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1694_p1 = tmp_6_22_reg_3249;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1694_p1 = tmp_6_20_reg_3089;
    end else begin
        grp_fu_1694_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1699_p0 = c_6_2_reg_1293;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1699_p0 = c_6_0_reg_1317;
    end else begin
        grp_fu_1699_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1699_p1 = tmp_6_25_reg_3254;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1699_p1 = tmp_6_23_reg_3094;
    end else begin
        grp_fu_1699_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1704_p0 = c_6_3_reg_1281;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1704_p0 = c_6_1_reg_1305;
    end else begin
        grp_fu_1704_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1704_p1 = tmp_6_26_reg_3259;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1704_p1 = tmp_6_24_reg_3099;
    end else begin
        grp_fu_1704_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1709_p0 = c_7_2_reg_1245;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1709_p0 = c_7_0_reg_1269;
    end else begin
        grp_fu_1709_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1709_p1 = tmp_6_29_reg_3264;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1709_p1 = tmp_6_27_reg_3104;
    end else begin
        grp_fu_1709_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1714_p0 = c_7_3_reg_1233;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1714_p0 = c_7_1_reg_1257;
    end else begin
        grp_fu_1714_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1714_p1 = tmp_6_30_reg_3269;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1714_p1 = tmp_6_28_reg_3109;
    end else begin
        grp_fu_1714_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1719_p0 = c_8_2_reg_1197;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1719_p0 = c_8_0_reg_1221;
    end else begin
        grp_fu_1719_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1719_p1 = tmp_6_33_reg_3274;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1719_p1 = tmp_6_31_reg_3114;
    end else begin
        grp_fu_1719_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1724_p0 = c_8_3_reg_1185;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1724_p0 = c_8_1_reg_1209;
    end else begin
        grp_fu_1724_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1724_p1 = tmp_6_34_reg_3279;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1724_p1 = tmp_6_32_reg_3119;
    end else begin
        grp_fu_1724_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1729_p0 = c_9_2_reg_1149;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1729_p0 = c_9_0_reg_1173;
    end else begin
        grp_fu_1729_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1729_p1 = tmp_6_37_reg_3284;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1729_p1 = tmp_6_35_reg_3124;
    end else begin
        grp_fu_1729_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1734_p0 = c_9_3_reg_1137;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1734_p0 = c_9_1_reg_1161;
    end else begin
        grp_fu_1734_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1734_p1 = tmp_6_38_reg_3289;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1734_p1 = tmp_6_36_reg_3129;
    end else begin
        grp_fu_1734_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1739_p0 = c_10_2_reg_1101;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1739_p0 = c_10_0_reg_1125;
    end else begin
        grp_fu_1739_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1739_p1 = tmp_6_41_reg_3294;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1739_p1 = tmp_6_39_reg_3134;
    end else begin
        grp_fu_1739_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1744_p0 = c_10_3_reg_1089;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1744_p0 = c_10_1_reg_1113;
    end else begin
        grp_fu_1744_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1744_p1 = tmp_6_42_reg_3299;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1744_p1 = tmp_6_40_reg_3139;
    end else begin
        grp_fu_1744_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1749_p0 = c_11_2_reg_1053;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1749_p0 = c_11_0_reg_1077;
    end else begin
        grp_fu_1749_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1749_p1 = tmp_6_45_reg_3304;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1749_p1 = tmp_6_43_reg_3144;
    end else begin
        grp_fu_1749_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1754_p0 = c_11_3_reg_1041;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1754_p0 = c_11_1_reg_1065;
    end else begin
        grp_fu_1754_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1754_p1 = tmp_6_46_reg_3309;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1754_p1 = tmp_6_44_reg_3149;
    end else begin
        grp_fu_1754_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1759_p0 = c_12_2_reg_1005;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1759_p0 = c_12_0_reg_1029;
    end else begin
        grp_fu_1759_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1759_p1 = tmp_6_49_reg_3314;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1759_p1 = tmp_6_47_reg_3154;
    end else begin
        grp_fu_1759_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1764_p0 = c_12_3_reg_993;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1764_p0 = c_12_1_reg_1017;
    end else begin
        grp_fu_1764_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1764_p1 = tmp_6_50_reg_3319;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1764_p1 = tmp_6_48_reg_3159;
    end else begin
        grp_fu_1764_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1769_p0 = c_13_2_reg_957;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1769_p0 = c_13_0_reg_981;
    end else begin
        grp_fu_1769_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1769_p1 = tmp_6_53_reg_3324;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1769_p1 = tmp_6_51_reg_3164;
    end else begin
        grp_fu_1769_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1774_p0 = c_13_3_reg_945;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1774_p0 = c_13_1_reg_969;
    end else begin
        grp_fu_1774_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1774_p1 = tmp_6_54_reg_3329;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1774_p1 = tmp_6_52_reg_3169;
    end else begin
        grp_fu_1774_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1779_p0 = c_14_2_reg_909;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1779_p0 = c_14_0_reg_933;
    end else begin
        grp_fu_1779_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1779_p1 = tmp_6_57_reg_3334;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1779_p1 = tmp_6_55_reg_3174;
    end else begin
        grp_fu_1779_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1784_p0 = c_14_3_reg_897;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1784_p0 = c_14_1_reg_921;
    end else begin
        grp_fu_1784_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1784_p1 = tmp_6_58_reg_3339;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1784_p1 = tmp_6_56_reg_3179;
    end else begin
        grp_fu_1784_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1789_p0 = c_15_2_reg_861;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1789_p0 = c_15_0_reg_885;
    end else begin
        grp_fu_1789_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1789_p1 = tmp_6_61_reg_3344;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1789_p1 = tmp_6_59_reg_3184;
    end else begin
        grp_fu_1789_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1794_p0 = c_15_3_reg_849;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1794_p0 = c_15_1_reg_873;
    end else begin
        grp_fu_1794_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1794_p1 = tmp_6_62_reg_3349;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_1794_p1 = tmp_6_60_reg_3189;
    end else begin
        grp_fu_1794_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1831_p1 = B_0_load_2_reg_2874;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1831_p1 = B_0_load_reg_2714;
    end else begin
        grp_fu_1831_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1835_p1 = B_0_load_3_reg_2879;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1835_p1 = B_0_load_1_reg_2719;
    end else begin
        grp_fu_1835_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1839_p1 = B_1_load_2_reg_2884;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1839_p1 = B_1_load_reg_2724;
    end else begin
        grp_fu_1839_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1843_p1 = B_1_load_3_reg_2889;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1843_p1 = B_1_load_1_reg_2729;
    end else begin
        grp_fu_1843_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1847_p1 = B_2_load_2_reg_2894;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1847_p1 = B_2_load_reg_2734;
    end else begin
        grp_fu_1847_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1851_p1 = B_2_load_3_reg_2899;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1851_p1 = B_2_load_1_reg_2739;
    end else begin
        grp_fu_1851_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1855_p1 = B_3_load_2_reg_2904;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1855_p1 = B_3_load_reg_2744;
    end else begin
        grp_fu_1855_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1859_p1 = B_3_load_3_reg_2909;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1859_p1 = B_3_load_1_reg_2749;
    end else begin
        grp_fu_1859_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1863_p1 = B_4_load_2_reg_2914;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1863_p1 = B_4_load_reg_2754;
    end else begin
        grp_fu_1863_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1867_p1 = B_4_load_3_reg_2919;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1867_p1 = B_4_load_1_reg_2759;
    end else begin
        grp_fu_1867_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1871_p1 = B_5_load_2_reg_2924;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1871_p1 = B_5_load_reg_2764;
    end else begin
        grp_fu_1871_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1875_p1 = B_5_load_3_reg_2929;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1875_p1 = B_5_load_1_reg_2769;
    end else begin
        grp_fu_1875_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1879_p1 = B_6_load_2_reg_2934;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1879_p1 = B_6_load_reg_2774;
    end else begin
        grp_fu_1879_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1883_p1 = B_6_load_3_reg_2939;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1883_p1 = B_6_load_1_reg_2779;
    end else begin
        grp_fu_1883_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1887_p1 = B_7_load_2_reg_2944;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1887_p1 = B_7_load_reg_2784;
    end else begin
        grp_fu_1887_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1891_p1 = B_7_load_3_reg_2949;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1891_p1 = B_7_load_1_reg_2789;
    end else begin
        grp_fu_1891_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1895_p1 = B_8_load_2_reg_2954;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1895_p1 = B_8_load_reg_2794;
    end else begin
        grp_fu_1895_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1899_p1 = B_8_load_3_reg_2959;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1899_p1 = B_8_load_1_reg_2799;
    end else begin
        grp_fu_1899_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1903_p1 = B_9_load_2_reg_2964;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1903_p1 = B_9_load_reg_2804;
    end else begin
        grp_fu_1903_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1907_p1 = B_9_load_3_reg_2969;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1907_p1 = B_9_load_1_reg_2809;
    end else begin
        grp_fu_1907_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1911_p1 = B_10_load_2_reg_2974;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1911_p1 = B_10_load_reg_2814;
    end else begin
        grp_fu_1911_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1915_p1 = B_10_load_3_reg_2979;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1915_p1 = B_10_load_1_reg_2819;
    end else begin
        grp_fu_1915_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1919_p1 = B_11_load_2_reg_2984;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1919_p1 = B_11_load_reg_2824;
    end else begin
        grp_fu_1919_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1923_p1 = B_11_load_3_reg_2989;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1923_p1 = B_11_load_1_reg_2829;
    end else begin
        grp_fu_1923_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1927_p1 = B_12_load_2_reg_2994;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1927_p1 = B_12_load_reg_2834;
    end else begin
        grp_fu_1927_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1931_p1 = B_12_load_3_reg_2999;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1931_p1 = B_12_load_1_reg_2839;
    end else begin
        grp_fu_1931_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1935_p1 = B_13_load_2_reg_3004;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1935_p1 = B_13_load_reg_2844;
    end else begin
        grp_fu_1935_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1939_p1 = B_13_load_3_reg_3009;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1939_p1 = B_13_load_1_reg_2849;
    end else begin
        grp_fu_1939_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1943_p1 = B_14_load_2_reg_3014;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1943_p1 = B_14_load_reg_2854;
    end else begin
        grp_fu_1943_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1947_p1 = B_14_load_3_reg_3019;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1947_p1 = B_14_load_1_reg_2859;
    end else begin
        grp_fu_1947_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1951_p1 = B_15_load_2_reg_3024;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1951_p1 = B_15_load_reg_2864;
    end else begin
        grp_fu_1951_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1955_p1 = B_15_load_3_reg_3029;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1955_p1 = B_15_load_1_reg_2869;
    end else begin
        grp_fu_1955_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_m_axi_A_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_A_ARVALID = 1'b1;
    end else begin
        m_axi_A_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond3_reg_2330 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_A_RREADY = 1'b1;
    end else begin
        m_axi_A_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_fu_2147_p2 == 1'd1) & (ap_reg_ioackin_m_axi_C_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_C_AWVALID = 1'b1;
    end else begin
        m_axi_C_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_C_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
        m_axi_C_BREADY = 1'b1;
    end else begin
        m_axi_C_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond8_reg_3674 == 1'd0) & (ap_reg_ioackin_m_axi_C_WREADY == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_01001))) begin
        m_axi_C_WVALID = 1'b1;
    end else begin
        m_axi_C_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((ap_sig_ioackin_m_axi_A_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond3_fu_2007_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond3_fu_2007_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b0 == ap_block_state13_io) & (exitcond1_fu_2147_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((exitcond1_fu_2147_p2 == 1'd0) & (1'b0 == ap_block_state13_io) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond8_fu_2159_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond8_fu_2159_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((m_axi_C_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_offset_cast1_cast_fu_1959_p1 = A_offset1;

assign A_offset_cast_fu_1963_p1 = A_offset;

assign C_offset_cast2_cast_fu_1983_p1 = C_offset2;

assign C_offset_cast_fu_1987_p1 = C_offset;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((exitcond3_reg_2330 == 1'd0) & (m_axi_A_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((exitcond3_reg_2330 == 1'd0) & (m_axi_A_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((1'b1 == ap_block_state26_io) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((1'b1 == ap_block_state26_io) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter1 = ((exitcond3_reg_2330 == 1'd0) & (m_axi_A_RVALID == 1'b0));
end

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_io = ((exitcond1_fu_2147_p2 == 1'd1) & (ap_sig_ioackin_m_axi_C_AWREADY == 1'b0));
end

assign ap_block_state25_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state26_io = ((exitcond8_reg_3674 == 1'd0) & (ap_sig_ioackin_m_axi_C_WREADY == 1'b0));
end

assign ap_block_state26_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1631 = ((exitcond8_reg_3674 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign exitcond1_fu_2147_p2 = ((k_reg_1617 == 11'd1024) ? 1'b1 : 1'b0);

assign exitcond3_fu_2007_p2 = ((ap_phi_mux_indvar_phi_fu_841_p4 == 11'd1024) ? 1'b1 : 1'b0);

assign exitcond8_fu_2159_p2 = ((indvar6_reg_1628 == 7'd64) ? 1'b1 : 1'b0);

assign indvar_cast4_fu_2019_p1 = indvar_reg_837_pp0_iter1_reg;

assign indvar_next7_fu_2165_p2 = (indvar6_reg_1628 + 7'd1);

assign indvar_next_fu_2013_p2 = (ap_phi_mux_indvar_phi_fu_841_p4 + 11'd1);

assign k_1_fu_2153_p2 = (k_reg_1617 + 11'd1);

assign k_cast3_fu_2024_p1 = k_reg_1617;

assign m_axi_A_ARADDR = sum_cast_fu_1973_p1;

assign m_axi_A_ARBURST = 2'd0;

assign m_axi_A_ARCACHE = 4'd0;

assign m_axi_A_ARID = 1'd0;

assign m_axi_A_ARLEN = 32'd1024;

assign m_axi_A_ARLOCK = 2'd0;

assign m_axi_A_ARPROT = 3'd0;

assign m_axi_A_ARQOS = 4'd0;

assign m_axi_A_ARREGION = 4'd0;

assign m_axi_A_ARSIZE = 3'd0;

assign m_axi_A_ARUSER = 1'd0;

assign m_axi_A_AWADDR = 32'd0;

assign m_axi_A_AWBURST = 2'd0;

assign m_axi_A_AWCACHE = 4'd0;

assign m_axi_A_AWID = 1'd0;

assign m_axi_A_AWLEN = 32'd0;

assign m_axi_A_AWLOCK = 2'd0;

assign m_axi_A_AWPROT = 3'd0;

assign m_axi_A_AWQOS = 4'd0;

assign m_axi_A_AWREGION = 4'd0;

assign m_axi_A_AWSIZE = 3'd0;

assign m_axi_A_AWUSER = 1'd0;

assign m_axi_A_AWVALID = 1'b0;

assign m_axi_A_BREADY = 1'b0;

assign m_axi_A_WDATA = 32'd0;

assign m_axi_A_WID = 1'd0;

assign m_axi_A_WLAST = 1'b0;

assign m_axi_A_WSTRB = 4'd0;

assign m_axi_A_WUSER = 1'd0;

assign m_axi_A_WVALID = 1'b0;

assign m_axi_C_ARADDR = 32'd0;

assign m_axi_C_ARBURST = 2'd0;

assign m_axi_C_ARCACHE = 4'd0;

assign m_axi_C_ARID = 1'd0;

assign m_axi_C_ARLEN = 32'd0;

assign m_axi_C_ARLOCK = 2'd0;

assign m_axi_C_ARPROT = 3'd0;

assign m_axi_C_ARQOS = 4'd0;

assign m_axi_C_ARREGION = 4'd0;

assign m_axi_C_ARSIZE = 3'd0;

assign m_axi_C_ARUSER = 1'd0;

assign m_axi_C_ARVALID = 1'b0;

assign m_axi_C_AWADDR = C_addr_reg_2324;

assign m_axi_C_AWBURST = 2'd0;

assign m_axi_C_AWCACHE = 4'd0;

assign m_axi_C_AWID = 1'd0;

assign m_axi_C_AWLEN = 32'd64;

assign m_axi_C_AWLOCK = 2'd0;

assign m_axi_C_AWPROT = 3'd0;

assign m_axi_C_AWQOS = 4'd0;

assign m_axi_C_AWREGION = 4'd0;

assign m_axi_C_AWSIZE = 3'd0;

assign m_axi_C_AWUSER = 1'd0;

assign m_axi_C_RREADY = 1'b0;

assign m_axi_C_WDATA = tmp_5_reg_3683;

assign m_axi_C_WID = 1'd0;

assign m_axi_C_WLAST = 1'b0;

assign m_axi_C_WSTRB = 4'd15;

assign m_axi_C_WUSER = 1'd0;

assign sum5_cast_fu_1997_p1 = sum5_fu_1991_p2;

assign sum5_fu_1991_p2 = (C_offset_cast_fu_1987_p1 + C_offset_cast2_cast_fu_1983_p1);

assign sum_cast_fu_1973_p1 = sum_reg_2313;

assign sum_fu_1967_p2 = (A_offset_cast_fu_1963_p1 + A_offset_cast1_cast_fu_1959_p1);

assign tmp_10_fu_2123_p3 = {{19'd0}, {tmp_7_fu_2117_p2}};

assign tmp_1_fu_2029_p3 = {{k_reg_1617}, {2'd0}};

assign tmp_2_fu_2037_p1 = tmp_1_fu_2029_p3;

assign tmp_3_fu_2093_p3 = {{19'd0}, {tmp_s_fu_2087_p2}};

assign tmp_5_fu_2179_p65 = tmp_fu_2171_p1;

assign tmp_7_fu_2117_p2 = (tmp_1_fu_2029_p3 | 13'd3);

assign tmp_8_fu_2057_p2 = (tmp_1_fu_2029_p3 | 13'd1);

assign tmp_9_fu_2063_p3 = {{19'd0}, {tmp_8_fu_2057_p2}};

assign tmp_fu_2171_p1 = indvar6_reg_1628[5:0];

assign tmp_s_fu_2087_p2 = (tmp_1_fu_2029_p3 | 13'd2);

always @ (posedge ap_clk) begin
    C_addr_reg_2324[31] <= 1'b0;
    B_0_addr_2_reg_2354[1:0] <= 2'b10;
    B_0_addr_3_reg_2359[1:0] <= 2'b11;
    B_1_addr_2_reg_2374[1:0] <= 2'b10;
    B_1_addr_3_reg_2379[1:0] <= 2'b11;
    B_2_addr_2_reg_2394[1:0] <= 2'b10;
    B_2_addr_3_reg_2399[1:0] <= 2'b11;
    B_3_addr_2_reg_2414[1:0] <= 2'b10;
    B_3_addr_3_reg_2419[1:0] <= 2'b11;
    B_4_addr_2_reg_2434[1:0] <= 2'b10;
    B_4_addr_3_reg_2439[1:0] <= 2'b11;
    B_5_addr_2_reg_2454[1:0] <= 2'b10;
    B_5_addr_3_reg_2459[1:0] <= 2'b11;
    B_6_addr_2_reg_2474[1:0] <= 2'b10;
    B_6_addr_3_reg_2479[1:0] <= 2'b11;
    B_7_addr_2_reg_2494[1:0] <= 2'b10;
    B_7_addr_3_reg_2499[1:0] <= 2'b11;
    B_8_addr_2_reg_2514[1:0] <= 2'b10;
    B_8_addr_3_reg_2519[1:0] <= 2'b11;
    B_9_addr_2_reg_2534[1:0] <= 2'b10;
    B_9_addr_3_reg_2539[1:0] <= 2'b11;
    B_10_addr_2_reg_2554[1:0] <= 2'b10;
    B_10_addr_3_reg_2559[1:0] <= 2'b11;
    B_11_addr_2_reg_2574[1:0] <= 2'b10;
    B_11_addr_3_reg_2579[1:0] <= 2'b11;
    B_12_addr_2_reg_2594[1:0] <= 2'b10;
    B_12_addr_3_reg_2599[1:0] <= 2'b11;
    B_13_addr_2_reg_2614[1:0] <= 2'b10;
    B_13_addr_3_reg_2619[1:0] <= 2'b11;
    B_14_addr_2_reg_2634[1:0] <= 2'b10;
    B_14_addr_3_reg_2639[1:0] <= 2'b11;
    B_15_addr_2_reg_2654[1:0] <= 2'b10;
    B_15_addr_3_reg_2659[1:0] <= 2'b11;
end

endmodule //a0_matxvec
