// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="a0_block_mmult,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=220512449,HLS_SYN_TPT=none,HLS_SYN_MEM=136,HLS_SYN_DSP=160,HLS_SYN_FF=20897,HLS_SYN_LUT=28904,HLS_VERSION=2018_3}" *)

module a0_block_mmult (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_A_AWVALID,
        m_axi_A_AWREADY,
        m_axi_A_AWADDR,
        m_axi_A_AWID,
        m_axi_A_AWLEN,
        m_axi_A_AWSIZE,
        m_axi_A_AWBURST,
        m_axi_A_AWLOCK,
        m_axi_A_AWCACHE,
        m_axi_A_AWPROT,
        m_axi_A_AWQOS,
        m_axi_A_AWREGION,
        m_axi_A_AWUSER,
        m_axi_A_WVALID,
        m_axi_A_WREADY,
        m_axi_A_WDATA,
        m_axi_A_WSTRB,
        m_axi_A_WLAST,
        m_axi_A_WID,
        m_axi_A_WUSER,
        m_axi_A_ARVALID,
        m_axi_A_ARREADY,
        m_axi_A_ARADDR,
        m_axi_A_ARID,
        m_axi_A_ARLEN,
        m_axi_A_ARSIZE,
        m_axi_A_ARBURST,
        m_axi_A_ARLOCK,
        m_axi_A_ARCACHE,
        m_axi_A_ARPROT,
        m_axi_A_ARQOS,
        m_axi_A_ARREGION,
        m_axi_A_ARUSER,
        m_axi_A_RVALID,
        m_axi_A_RREADY,
        m_axi_A_RDATA,
        m_axi_A_RLAST,
        m_axi_A_RID,
        m_axi_A_RUSER,
        m_axi_A_RRESP,
        m_axi_A_BVALID,
        m_axi_A_BREADY,
        m_axi_A_BRESP,
        m_axi_A_BID,
        m_axi_A_BUSER,
        m_axi_B_AWVALID,
        m_axi_B_AWREADY,
        m_axi_B_AWADDR,
        m_axi_B_AWID,
        m_axi_B_AWLEN,
        m_axi_B_AWSIZE,
        m_axi_B_AWBURST,
        m_axi_B_AWLOCK,
        m_axi_B_AWCACHE,
        m_axi_B_AWPROT,
        m_axi_B_AWQOS,
        m_axi_B_AWREGION,
        m_axi_B_AWUSER,
        m_axi_B_WVALID,
        m_axi_B_WREADY,
        m_axi_B_WDATA,
        m_axi_B_WSTRB,
        m_axi_B_WLAST,
        m_axi_B_WID,
        m_axi_B_WUSER,
        m_axi_B_ARVALID,
        m_axi_B_ARREADY,
        m_axi_B_ARADDR,
        m_axi_B_ARID,
        m_axi_B_ARLEN,
        m_axi_B_ARSIZE,
        m_axi_B_ARBURST,
        m_axi_B_ARLOCK,
        m_axi_B_ARCACHE,
        m_axi_B_ARPROT,
        m_axi_B_ARQOS,
        m_axi_B_ARREGION,
        m_axi_B_ARUSER,
        m_axi_B_RVALID,
        m_axi_B_RREADY,
        m_axi_B_RDATA,
        m_axi_B_RLAST,
        m_axi_B_RID,
        m_axi_B_RUSER,
        m_axi_B_RRESP,
        m_axi_B_BVALID,
        m_axi_B_BREADY,
        m_axi_B_BRESP,
        m_axi_B_BID,
        m_axi_B_BUSER,
        m_axi_C_AWVALID,
        m_axi_C_AWREADY,
        m_axi_C_AWADDR,
        m_axi_C_AWID,
        m_axi_C_AWLEN,
        m_axi_C_AWSIZE,
        m_axi_C_AWBURST,
        m_axi_C_AWLOCK,
        m_axi_C_AWCACHE,
        m_axi_C_AWPROT,
        m_axi_C_AWQOS,
        m_axi_C_AWREGION,
        m_axi_C_AWUSER,
        m_axi_C_WVALID,
        m_axi_C_WREADY,
        m_axi_C_WDATA,
        m_axi_C_WSTRB,
        m_axi_C_WLAST,
        m_axi_C_WID,
        m_axi_C_WUSER,
        m_axi_C_ARVALID,
        m_axi_C_ARREADY,
        m_axi_C_ARADDR,
        m_axi_C_ARID,
        m_axi_C_ARLEN,
        m_axi_C_ARSIZE,
        m_axi_C_ARBURST,
        m_axi_C_ARLOCK,
        m_axi_C_ARCACHE,
        m_axi_C_ARPROT,
        m_axi_C_ARQOS,
        m_axi_C_ARREGION,
        m_axi_C_ARUSER,
        m_axi_C_RVALID,
        m_axi_C_RREADY,
        m_axi_C_RDATA,
        m_axi_C_RLAST,
        m_axi_C_RID,
        m_axi_C_RUSER,
        m_axi_C_RRESP,
        m_axi_C_BVALID,
        m_axi_C_BREADY,
        m_axi_C_BRESP,
        m_axi_C_BID,
        m_axi_C_BUSER,
        A_offset,
        B_offset,
        C_offset
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_pp0_stage0 = 6'd4;
parameter    ap_ST_fsm_state13 = 6'd8;
parameter    ap_ST_fsm_state14 = 6'd16;
parameter    ap_ST_fsm_state15 = 6'd32;
parameter    C_M_AXI_A_ID_WIDTH = 1;
parameter    C_M_AXI_A_ADDR_WIDTH = 32;
parameter    C_M_AXI_A_DATA_WIDTH = 32;
parameter    C_M_AXI_A_AWUSER_WIDTH = 1;
parameter    C_M_AXI_A_ARUSER_WIDTH = 1;
parameter    C_M_AXI_A_WUSER_WIDTH = 1;
parameter    C_M_AXI_A_RUSER_WIDTH = 1;
parameter    C_M_AXI_A_BUSER_WIDTH = 1;
parameter    C_M_AXI_A_USER_VALUE = 0;
parameter    C_M_AXI_A_PROT_VALUE = 0;
parameter    C_M_AXI_A_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_B_ID_WIDTH = 1;
parameter    C_M_AXI_B_ADDR_WIDTH = 32;
parameter    C_M_AXI_B_DATA_WIDTH = 32;
parameter    C_M_AXI_B_AWUSER_WIDTH = 1;
parameter    C_M_AXI_B_ARUSER_WIDTH = 1;
parameter    C_M_AXI_B_WUSER_WIDTH = 1;
parameter    C_M_AXI_B_RUSER_WIDTH = 1;
parameter    C_M_AXI_B_BUSER_WIDTH = 1;
parameter    C_M_AXI_B_USER_VALUE = 0;
parameter    C_M_AXI_B_PROT_VALUE = 0;
parameter    C_M_AXI_B_CACHE_VALUE = 3;
parameter    C_M_AXI_C_ID_WIDTH = 1;
parameter    C_M_AXI_C_ADDR_WIDTH = 32;
parameter    C_M_AXI_C_DATA_WIDTH = 32;
parameter    C_M_AXI_C_AWUSER_WIDTH = 1;
parameter    C_M_AXI_C_ARUSER_WIDTH = 1;
parameter    C_M_AXI_C_WUSER_WIDTH = 1;
parameter    C_M_AXI_C_RUSER_WIDTH = 1;
parameter    C_M_AXI_C_BUSER_WIDTH = 1;
parameter    C_M_AXI_C_USER_VALUE = 0;
parameter    C_M_AXI_C_PROT_VALUE = 0;
parameter    C_M_AXI_C_CACHE_VALUE = 3;

parameter C_M_AXI_A_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_B_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_C_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_A_AWVALID;
input   m_axi_A_AWREADY;
output  [C_M_AXI_A_ADDR_WIDTH - 1:0] m_axi_A_AWADDR;
output  [C_M_AXI_A_ID_WIDTH - 1:0] m_axi_A_AWID;
output  [7:0] m_axi_A_AWLEN;
output  [2:0] m_axi_A_AWSIZE;
output  [1:0] m_axi_A_AWBURST;
output  [1:0] m_axi_A_AWLOCK;
output  [3:0] m_axi_A_AWCACHE;
output  [2:0] m_axi_A_AWPROT;
output  [3:0] m_axi_A_AWQOS;
output  [3:0] m_axi_A_AWREGION;
output  [C_M_AXI_A_AWUSER_WIDTH - 1:0] m_axi_A_AWUSER;
output   m_axi_A_WVALID;
input   m_axi_A_WREADY;
output  [C_M_AXI_A_DATA_WIDTH - 1:0] m_axi_A_WDATA;
output  [C_M_AXI_A_WSTRB_WIDTH - 1:0] m_axi_A_WSTRB;
output   m_axi_A_WLAST;
output  [C_M_AXI_A_ID_WIDTH - 1:0] m_axi_A_WID;
output  [C_M_AXI_A_WUSER_WIDTH - 1:0] m_axi_A_WUSER;
output   m_axi_A_ARVALID;
input   m_axi_A_ARREADY;
output  [C_M_AXI_A_ADDR_WIDTH - 1:0] m_axi_A_ARADDR;
output  [C_M_AXI_A_ID_WIDTH - 1:0] m_axi_A_ARID;
output  [7:0] m_axi_A_ARLEN;
output  [2:0] m_axi_A_ARSIZE;
output  [1:0] m_axi_A_ARBURST;
output  [1:0] m_axi_A_ARLOCK;
output  [3:0] m_axi_A_ARCACHE;
output  [2:0] m_axi_A_ARPROT;
output  [3:0] m_axi_A_ARQOS;
output  [3:0] m_axi_A_ARREGION;
output  [C_M_AXI_A_ARUSER_WIDTH - 1:0] m_axi_A_ARUSER;
input   m_axi_A_RVALID;
output   m_axi_A_RREADY;
input  [C_M_AXI_A_DATA_WIDTH - 1:0] m_axi_A_RDATA;
input   m_axi_A_RLAST;
input  [C_M_AXI_A_ID_WIDTH - 1:0] m_axi_A_RID;
input  [C_M_AXI_A_RUSER_WIDTH - 1:0] m_axi_A_RUSER;
input  [1:0] m_axi_A_RRESP;
input   m_axi_A_BVALID;
output   m_axi_A_BREADY;
input  [1:0] m_axi_A_BRESP;
input  [C_M_AXI_A_ID_WIDTH - 1:0] m_axi_A_BID;
input  [C_M_AXI_A_BUSER_WIDTH - 1:0] m_axi_A_BUSER;
output   m_axi_B_AWVALID;
input   m_axi_B_AWREADY;
output  [C_M_AXI_B_ADDR_WIDTH - 1:0] m_axi_B_AWADDR;
output  [C_M_AXI_B_ID_WIDTH - 1:0] m_axi_B_AWID;
output  [7:0] m_axi_B_AWLEN;
output  [2:0] m_axi_B_AWSIZE;
output  [1:0] m_axi_B_AWBURST;
output  [1:0] m_axi_B_AWLOCK;
output  [3:0] m_axi_B_AWCACHE;
output  [2:0] m_axi_B_AWPROT;
output  [3:0] m_axi_B_AWQOS;
output  [3:0] m_axi_B_AWREGION;
output  [C_M_AXI_B_AWUSER_WIDTH - 1:0] m_axi_B_AWUSER;
output   m_axi_B_WVALID;
input   m_axi_B_WREADY;
output  [C_M_AXI_B_DATA_WIDTH - 1:0] m_axi_B_WDATA;
output  [C_M_AXI_B_WSTRB_WIDTH - 1:0] m_axi_B_WSTRB;
output   m_axi_B_WLAST;
output  [C_M_AXI_B_ID_WIDTH - 1:0] m_axi_B_WID;
output  [C_M_AXI_B_WUSER_WIDTH - 1:0] m_axi_B_WUSER;
output   m_axi_B_ARVALID;
input   m_axi_B_ARREADY;
output  [C_M_AXI_B_ADDR_WIDTH - 1:0] m_axi_B_ARADDR;
output  [C_M_AXI_B_ID_WIDTH - 1:0] m_axi_B_ARID;
output  [7:0] m_axi_B_ARLEN;
output  [2:0] m_axi_B_ARSIZE;
output  [1:0] m_axi_B_ARBURST;
output  [1:0] m_axi_B_ARLOCK;
output  [3:0] m_axi_B_ARCACHE;
output  [2:0] m_axi_B_ARPROT;
output  [3:0] m_axi_B_ARQOS;
output  [3:0] m_axi_B_ARREGION;
output  [C_M_AXI_B_ARUSER_WIDTH - 1:0] m_axi_B_ARUSER;
input   m_axi_B_RVALID;
output   m_axi_B_RREADY;
input  [C_M_AXI_B_DATA_WIDTH - 1:0] m_axi_B_RDATA;
input   m_axi_B_RLAST;
input  [C_M_AXI_B_ID_WIDTH - 1:0] m_axi_B_RID;
input  [C_M_AXI_B_RUSER_WIDTH - 1:0] m_axi_B_RUSER;
input  [1:0] m_axi_B_RRESP;
input   m_axi_B_BVALID;
output   m_axi_B_BREADY;
input  [1:0] m_axi_B_BRESP;
input  [C_M_AXI_B_ID_WIDTH - 1:0] m_axi_B_BID;
input  [C_M_AXI_B_BUSER_WIDTH - 1:0] m_axi_B_BUSER;
output   m_axi_C_AWVALID;
input   m_axi_C_AWREADY;
output  [C_M_AXI_C_ADDR_WIDTH - 1:0] m_axi_C_AWADDR;
output  [C_M_AXI_C_ID_WIDTH - 1:0] m_axi_C_AWID;
output  [7:0] m_axi_C_AWLEN;
output  [2:0] m_axi_C_AWSIZE;
output  [1:0] m_axi_C_AWBURST;
output  [1:0] m_axi_C_AWLOCK;
output  [3:0] m_axi_C_AWCACHE;
output  [2:0] m_axi_C_AWPROT;
output  [3:0] m_axi_C_AWQOS;
output  [3:0] m_axi_C_AWREGION;
output  [C_M_AXI_C_AWUSER_WIDTH - 1:0] m_axi_C_AWUSER;
output   m_axi_C_WVALID;
input   m_axi_C_WREADY;
output  [C_M_AXI_C_DATA_WIDTH - 1:0] m_axi_C_WDATA;
output  [C_M_AXI_C_WSTRB_WIDTH - 1:0] m_axi_C_WSTRB;
output   m_axi_C_WLAST;
output  [C_M_AXI_C_ID_WIDTH - 1:0] m_axi_C_WID;
output  [C_M_AXI_C_WUSER_WIDTH - 1:0] m_axi_C_WUSER;
output   m_axi_C_ARVALID;
input   m_axi_C_ARREADY;
output  [C_M_AXI_C_ADDR_WIDTH - 1:0] m_axi_C_ARADDR;
output  [C_M_AXI_C_ID_WIDTH - 1:0] m_axi_C_ARID;
output  [7:0] m_axi_C_ARLEN;
output  [2:0] m_axi_C_ARSIZE;
output  [1:0] m_axi_C_ARBURST;
output  [1:0] m_axi_C_ARLOCK;
output  [3:0] m_axi_C_ARCACHE;
output  [2:0] m_axi_C_ARPROT;
output  [3:0] m_axi_C_ARQOS;
output  [3:0] m_axi_C_ARREGION;
output  [C_M_AXI_C_ARUSER_WIDTH - 1:0] m_axi_C_ARUSER;
input   m_axi_C_RVALID;
output   m_axi_C_RREADY;
input  [C_M_AXI_C_DATA_WIDTH - 1:0] m_axi_C_RDATA;
input   m_axi_C_RLAST;
input  [C_M_AXI_C_ID_WIDTH - 1:0] m_axi_C_RID;
input  [C_M_AXI_C_RUSER_WIDTH - 1:0] m_axi_C_RUSER;
input  [1:0] m_axi_C_RRESP;
input   m_axi_C_BVALID;
output   m_axi_C_BREADY;
input  [1:0] m_axi_C_BRESP;
input  [C_M_AXI_C_ID_WIDTH - 1:0] m_axi_C_BID;
input  [C_M_AXI_C_BUSER_WIDTH - 1:0] m_axi_C_BUSER;
input  [31:0] A_offset;
input  [31:0] B_offset;
input  [31:0] C_offset;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    B_blk_n_AR;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_7_reg_802;
reg    B_blk_n_R;
reg    ap_enable_reg_pp0_iter8;
wire    A_AWREADY;
wire    A_WREADY;
reg    A_ARVALID;
wire    A_ARREADY;
wire    A_RVALID;
reg    A_RREADY;
wire   [31:0] A_RDATA;
wire    A_RLAST;
wire   [0:0] A_RID;
wire   [0:0] A_RUSER;
wire   [1:0] A_RRESP;
wire    A_BVALID;
wire   [1:0] A_BRESP;
wire   [0:0] A_BID;
wire   [0:0] A_BUSER;
wire    B_AWREADY;
wire    B_WREADY;
reg    B_ARVALID;
wire    B_ARREADY;
wire    B_RVALID;
reg    B_RREADY;
wire   [31:0] B_RDATA;
wire    B_RLAST;
wire   [0:0] B_RID;
wire   [0:0] B_RUSER;
wire   [1:0] B_RRESP;
wire    B_BVALID;
wire   [1:0] B_BRESP;
wire   [0:0] B_BID;
wire   [0:0] B_BUSER;
reg    C_AWVALID;
wire    C_AWREADY;
reg    C_WVALID;
wire    C_WREADY;
wire    C_ARREADY;
wire    C_RVALID;
wire   [31:0] C_RDATA;
wire    C_RLAST;
wire   [0:0] C_RID;
wire   [0:0] C_RUSER;
wire   [1:0] C_RRESP;
wire    C_BVALID;
reg    C_BREADY;
wire   [1:0] C_BRESP;
wire   [0:0] C_BID;
wire   [0:0] C_BUSER;
reg   [16:0] indvar_flatten_reg_437;
reg   [10:0] i_reg_448;
reg   [6:0] j_reg_459;
reg   [29:0] C_offset5_reg_751;
wire   [30:0] tmp_15_cast_fu_529_p1;
reg   [30:0] tmp_15_cast_reg_756;
reg   [29:0] A_offset1_reg_761;
wire   [0:0] exitcond3_fu_543_p2;
wire    ap_CS_fsm_state2;
wire   [4:0] k_2_fu_549_p2;
reg   [4:0] k_2_reg_770;
wire   [3:0] tmp_1_fu_555_p1;
reg   [3:0] tmp_1_reg_775;
wire   [0:0] exitcond_flatten_fu_572_p2;
reg   [0:0] exitcond_flatten_reg_782;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
reg    ap_sig_ioackin_B_ARREADY;
reg    ap_block_state4_io;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
reg    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
reg    ap_block_pp0_stage0_11001;
wire   [16:0] indvar_flatten_next_fu_578_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [10:0] i_cast6_mid2_v_fu_604_p3;
reg   [10:0] i_cast6_mid2_v_reg_791;
reg   [10:0] i_cast6_mid2_v_reg_791_pp0_iter1_reg;
reg   [10:0] i_cast6_mid2_v_reg_791_pp0_iter2_reg;
reg   [10:0] i_cast6_mid2_v_reg_791_pp0_iter3_reg;
reg   [10:0] i_cast6_mid2_v_reg_791_pp0_iter4_reg;
reg   [10:0] i_cast6_mid2_v_reg_791_pp0_iter5_reg;
reg   [10:0] i_cast6_mid2_v_reg_791_pp0_iter6_reg;
reg   [10:0] i_cast6_mid2_v_reg_791_pp0_iter7_reg;
reg   [10:0] i_cast6_mid2_v_reg_791_pp0_iter8_reg;
wire   [30:0] B4_sum7_fu_637_p2;
reg   [30:0] B4_sum7_reg_797;
wire   [0:0] tmp_7_fu_654_p2;
reg   [4:0] arrayNo_cast_reg_806;
reg   [4:0] arrayNo_cast_reg_806_pp0_iter1_reg;
reg   [4:0] arrayNo_cast_reg_806_pp0_iter2_reg;
reg   [4:0] arrayNo_cast_reg_806_pp0_iter3_reg;
reg   [4:0] arrayNo_cast_reg_806_pp0_iter4_reg;
reg   [4:0] arrayNo_cast_reg_806_pp0_iter5_reg;
reg   [4:0] arrayNo_cast_reg_806_pp0_iter6_reg;
reg   [4:0] arrayNo_cast_reg_806_pp0_iter7_reg;
reg   [4:0] arrayNo_cast_reg_806_pp0_iter8_reg;
wire   [1:0] tmp_10_fu_670_p1;
reg   [1:0] tmp_10_reg_810;
reg   [1:0] tmp_10_reg_810_pp0_iter1_reg;
reg   [1:0] tmp_10_reg_810_pp0_iter2_reg;
reg   [1:0] tmp_10_reg_810_pp0_iter3_reg;
reg   [1:0] tmp_10_reg_810_pp0_iter4_reg;
reg   [1:0] tmp_10_reg_810_pp0_iter5_reg;
reg   [1:0] tmp_10_reg_810_pp0_iter6_reg;
reg   [1:0] tmp_10_reg_810_pp0_iter7_reg;
reg   [1:0] tmp_10_reg_810_pp0_iter8_reg;
wire   [6:0] j_1_fu_674_p2;
reg   [31:0] B_addr_read_reg_826;
wire   [10:0] p_1_fu_722_p2;
reg   [10:0] p_1_reg_849;
wire    ap_CS_fsm_state14;
wire   [19:0] tmp_s_fu_732_p3;
reg   [19:0] tmp_s_reg_854;
wire   [0:0] exitcond_fu_716_p2;
wire   [19:0] sum6_fu_741_p4;
reg   [19:0] sum6_reg_859;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter9;
reg   [11:0] b_0_address0;
reg    b_0_ce0;
reg    b_0_we0;
wire   [31:0] b_0_q0;
reg    b_0_ce1;
wire   [31:0] b_0_q1;
reg   [11:0] b_1_address0;
reg    b_1_ce0;
reg    b_1_we0;
wire   [31:0] b_1_q0;
reg    b_1_ce1;
wire   [31:0] b_1_q1;
reg   [11:0] b_2_address0;
reg    b_2_ce0;
reg    b_2_we0;
wire   [31:0] b_2_q0;
reg    b_2_ce1;
wire   [31:0] b_2_q1;
reg   [11:0] b_3_address0;
reg    b_3_ce0;
reg    b_3_we0;
wire   [31:0] b_3_q0;
reg    b_3_ce1;
wire   [31:0] b_3_q1;
reg   [11:0] b_4_address0;
reg    b_4_ce0;
reg    b_4_we0;
wire   [31:0] b_4_q0;
reg    b_4_ce1;
wire   [31:0] b_4_q1;
reg   [11:0] b_5_address0;
reg    b_5_ce0;
reg    b_5_we0;
wire   [31:0] b_5_q0;
reg    b_5_ce1;
wire   [31:0] b_5_q1;
reg   [11:0] b_6_address0;
reg    b_6_ce0;
reg    b_6_we0;
wire   [31:0] b_6_q0;
reg    b_6_ce1;
wire   [31:0] b_6_q1;
reg   [11:0] b_7_address0;
reg    b_7_ce0;
reg    b_7_we0;
wire   [31:0] b_7_q0;
reg    b_7_ce1;
wire   [31:0] b_7_q1;
reg   [11:0] b_8_address0;
reg    b_8_ce0;
reg    b_8_we0;
wire   [31:0] b_8_q0;
reg    b_8_ce1;
wire   [31:0] b_8_q1;
reg   [11:0] b_9_address0;
reg    b_9_ce0;
reg    b_9_we0;
wire   [31:0] b_9_q0;
reg    b_9_ce1;
wire   [31:0] b_9_q1;
reg   [11:0] b_10_address0;
reg    b_10_ce0;
reg    b_10_we0;
wire   [31:0] b_10_q0;
reg    b_10_ce1;
wire   [31:0] b_10_q1;
reg   [11:0] b_11_address0;
reg    b_11_ce0;
reg    b_11_we0;
wire   [31:0] b_11_q0;
reg    b_11_ce1;
wire   [31:0] b_11_q1;
reg   [11:0] b_12_address0;
reg    b_12_ce0;
reg    b_12_we0;
wire   [31:0] b_12_q0;
reg    b_12_ce1;
wire   [31:0] b_12_q1;
reg   [11:0] b_13_address0;
reg    b_13_ce0;
reg    b_13_we0;
wire   [31:0] b_13_q0;
reg    b_13_ce1;
wire   [31:0] b_13_q1;
reg   [11:0] b_14_address0;
reg    b_14_ce0;
reg    b_14_we0;
wire   [31:0] b_14_q0;
reg    b_14_ce1;
wire   [31:0] b_14_q1;
reg   [11:0] b_15_address0;
reg    b_15_ce0;
reg    b_15_we0;
wire   [31:0] b_15_q0;
reg    b_15_ce1;
wire   [31:0] b_15_q1;
wire    grp_matxvec_fu_481_ap_start;
wire    grp_matxvec_fu_481_ap_done;
wire    grp_matxvec_fu_481_ap_idle;
wire    grp_matxvec_fu_481_ap_ready;
wire    grp_matxvec_fu_481_m_axi_A_AWVALID;
wire   [31:0] grp_matxvec_fu_481_m_axi_A_AWADDR;
wire   [0:0] grp_matxvec_fu_481_m_axi_A_AWID;
wire   [31:0] grp_matxvec_fu_481_m_axi_A_AWLEN;
wire   [2:0] grp_matxvec_fu_481_m_axi_A_AWSIZE;
wire   [1:0] grp_matxvec_fu_481_m_axi_A_AWBURST;
wire   [1:0] grp_matxvec_fu_481_m_axi_A_AWLOCK;
wire   [3:0] grp_matxvec_fu_481_m_axi_A_AWCACHE;
wire   [2:0] grp_matxvec_fu_481_m_axi_A_AWPROT;
wire   [3:0] grp_matxvec_fu_481_m_axi_A_AWQOS;
wire   [3:0] grp_matxvec_fu_481_m_axi_A_AWREGION;
wire   [0:0] grp_matxvec_fu_481_m_axi_A_AWUSER;
wire    grp_matxvec_fu_481_m_axi_A_WVALID;
wire   [31:0] grp_matxvec_fu_481_m_axi_A_WDATA;
wire   [3:0] grp_matxvec_fu_481_m_axi_A_WSTRB;
wire    grp_matxvec_fu_481_m_axi_A_WLAST;
wire   [0:0] grp_matxvec_fu_481_m_axi_A_WID;
wire   [0:0] grp_matxvec_fu_481_m_axi_A_WUSER;
wire    grp_matxvec_fu_481_m_axi_A_ARVALID;
wire   [31:0] grp_matxvec_fu_481_m_axi_A_ARADDR;
wire   [0:0] grp_matxvec_fu_481_m_axi_A_ARID;
wire   [31:0] grp_matxvec_fu_481_m_axi_A_ARLEN;
wire   [2:0] grp_matxvec_fu_481_m_axi_A_ARSIZE;
wire   [1:0] grp_matxvec_fu_481_m_axi_A_ARBURST;
wire   [1:0] grp_matxvec_fu_481_m_axi_A_ARLOCK;
wire   [3:0] grp_matxvec_fu_481_m_axi_A_ARCACHE;
wire   [2:0] grp_matxvec_fu_481_m_axi_A_ARPROT;
wire   [3:0] grp_matxvec_fu_481_m_axi_A_ARQOS;
wire   [3:0] grp_matxvec_fu_481_m_axi_A_ARREGION;
wire   [0:0] grp_matxvec_fu_481_m_axi_A_ARUSER;
wire    grp_matxvec_fu_481_m_axi_A_RREADY;
wire    grp_matxvec_fu_481_m_axi_A_BREADY;
wire   [11:0] grp_matxvec_fu_481_B_0_address0;
wire    grp_matxvec_fu_481_B_0_ce0;
wire   [11:0] grp_matxvec_fu_481_B_0_address1;
wire    grp_matxvec_fu_481_B_0_ce1;
wire   [11:0] grp_matxvec_fu_481_B_1_address0;
wire    grp_matxvec_fu_481_B_1_ce0;
wire   [11:0] grp_matxvec_fu_481_B_1_address1;
wire    grp_matxvec_fu_481_B_1_ce1;
wire   [11:0] grp_matxvec_fu_481_B_2_address0;
wire    grp_matxvec_fu_481_B_2_ce0;
wire   [11:0] grp_matxvec_fu_481_B_2_address1;
wire    grp_matxvec_fu_481_B_2_ce1;
wire   [11:0] grp_matxvec_fu_481_B_3_address0;
wire    grp_matxvec_fu_481_B_3_ce0;
wire   [11:0] grp_matxvec_fu_481_B_3_address1;
wire    grp_matxvec_fu_481_B_3_ce1;
wire   [11:0] grp_matxvec_fu_481_B_4_address0;
wire    grp_matxvec_fu_481_B_4_ce0;
wire   [11:0] grp_matxvec_fu_481_B_4_address1;
wire    grp_matxvec_fu_481_B_4_ce1;
wire   [11:0] grp_matxvec_fu_481_B_5_address0;
wire    grp_matxvec_fu_481_B_5_ce0;
wire   [11:0] grp_matxvec_fu_481_B_5_address1;
wire    grp_matxvec_fu_481_B_5_ce1;
wire   [11:0] grp_matxvec_fu_481_B_6_address0;
wire    grp_matxvec_fu_481_B_6_ce0;
wire   [11:0] grp_matxvec_fu_481_B_6_address1;
wire    grp_matxvec_fu_481_B_6_ce1;
wire   [11:0] grp_matxvec_fu_481_B_7_address0;
wire    grp_matxvec_fu_481_B_7_ce0;
wire   [11:0] grp_matxvec_fu_481_B_7_address1;
wire    grp_matxvec_fu_481_B_7_ce1;
wire   [11:0] grp_matxvec_fu_481_B_8_address0;
wire    grp_matxvec_fu_481_B_8_ce0;
wire   [11:0] grp_matxvec_fu_481_B_8_address1;
wire    grp_matxvec_fu_481_B_8_ce1;
wire   [11:0] grp_matxvec_fu_481_B_9_address0;
wire    grp_matxvec_fu_481_B_9_ce0;
wire   [11:0] grp_matxvec_fu_481_B_9_address1;
wire    grp_matxvec_fu_481_B_9_ce1;
wire   [11:0] grp_matxvec_fu_481_B_10_address0;
wire    grp_matxvec_fu_481_B_10_ce0;
wire   [11:0] grp_matxvec_fu_481_B_10_address1;
wire    grp_matxvec_fu_481_B_10_ce1;
wire   [11:0] grp_matxvec_fu_481_B_11_address0;
wire    grp_matxvec_fu_481_B_11_ce0;
wire   [11:0] grp_matxvec_fu_481_B_11_address1;
wire    grp_matxvec_fu_481_B_11_ce1;
wire   [11:0] grp_matxvec_fu_481_B_12_address0;
wire    grp_matxvec_fu_481_B_12_ce0;
wire   [11:0] grp_matxvec_fu_481_B_12_address1;
wire    grp_matxvec_fu_481_B_12_ce1;
wire   [11:0] grp_matxvec_fu_481_B_13_address0;
wire    grp_matxvec_fu_481_B_13_ce0;
wire   [11:0] grp_matxvec_fu_481_B_13_address1;
wire    grp_matxvec_fu_481_B_13_ce1;
wire   [11:0] grp_matxvec_fu_481_B_14_address0;
wire    grp_matxvec_fu_481_B_14_ce0;
wire   [11:0] grp_matxvec_fu_481_B_14_address1;
wire    grp_matxvec_fu_481_B_14_ce1;
wire   [11:0] grp_matxvec_fu_481_B_15_address0;
wire    grp_matxvec_fu_481_B_15_ce0;
wire   [11:0] grp_matxvec_fu_481_B_15_address1;
wire    grp_matxvec_fu_481_B_15_ce1;
wire    grp_matxvec_fu_481_m_axi_C_AWVALID;
wire   [31:0] grp_matxvec_fu_481_m_axi_C_AWADDR;
wire   [0:0] grp_matxvec_fu_481_m_axi_C_AWID;
wire   [31:0] grp_matxvec_fu_481_m_axi_C_AWLEN;
wire   [2:0] grp_matxvec_fu_481_m_axi_C_AWSIZE;
wire   [1:0] grp_matxvec_fu_481_m_axi_C_AWBURST;
wire   [1:0] grp_matxvec_fu_481_m_axi_C_AWLOCK;
wire   [3:0] grp_matxvec_fu_481_m_axi_C_AWCACHE;
wire   [2:0] grp_matxvec_fu_481_m_axi_C_AWPROT;
wire   [3:0] grp_matxvec_fu_481_m_axi_C_AWQOS;
wire   [3:0] grp_matxvec_fu_481_m_axi_C_AWREGION;
wire   [0:0] grp_matxvec_fu_481_m_axi_C_AWUSER;
wire    grp_matxvec_fu_481_m_axi_C_WVALID;
wire   [31:0] grp_matxvec_fu_481_m_axi_C_WDATA;
wire   [3:0] grp_matxvec_fu_481_m_axi_C_WSTRB;
wire    grp_matxvec_fu_481_m_axi_C_WLAST;
wire   [0:0] grp_matxvec_fu_481_m_axi_C_WID;
wire   [0:0] grp_matxvec_fu_481_m_axi_C_WUSER;
wire    grp_matxvec_fu_481_m_axi_C_ARVALID;
wire   [31:0] grp_matxvec_fu_481_m_axi_C_ARADDR;
wire   [0:0] grp_matxvec_fu_481_m_axi_C_ARID;
wire   [31:0] grp_matxvec_fu_481_m_axi_C_ARLEN;
wire   [2:0] grp_matxvec_fu_481_m_axi_C_ARSIZE;
wire   [1:0] grp_matxvec_fu_481_m_axi_C_ARBURST;
wire   [1:0] grp_matxvec_fu_481_m_axi_C_ARLOCK;
wire   [3:0] grp_matxvec_fu_481_m_axi_C_ARCACHE;
wire   [2:0] grp_matxvec_fu_481_m_axi_C_ARPROT;
wire   [3:0] grp_matxvec_fu_481_m_axi_C_ARQOS;
wire   [3:0] grp_matxvec_fu_481_m_axi_C_ARREGION;
wire   [0:0] grp_matxvec_fu_481_m_axi_C_ARUSER;
wire    grp_matxvec_fu_481_m_axi_C_RREADY;
wire    grp_matxvec_fu_481_m_axi_C_BREADY;
reg   [4:0] k_reg_426;
reg   [10:0] ap_phi_mux_i_phi_fu_452_p4;
reg   [10:0] p_reg_470;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state13;
reg    grp_matxvec_fu_481_ap_start_reg;
wire   [31:0] tmp_12_fu_696_p1;
wire   [31:0] B4_sum7_cast_fu_680_p1;
reg    ap_reg_ioackin_B_ARREADY;
reg    ap_block_pp0_stage0_01001;
wire   [29:0] tmp_fu_519_p4;
wire   [9:0] tmp_2_fu_559_p1;
wire   [0:0] exitcond1_fu_590_p2;
wire   [10:0] i_1_fu_584_p2;
wire   [9:0] tmp_3_fu_612_p1;
wire   [19:0] tmp_9_mid1_fu_616_p4;
wire   [19:0] tmp_9_fu_563_p4;
wire   [19:0] tmp_4_fu_625_p3;
wire   [30:0] tmp_10_mid2_cast_fu_633_p1;
wire   [5:0] tmp_5_fu_642_p1;
wire   [16:0] tmp_6_fu_646_p3;
wire   [6:0] j_mid2_fu_596_p3;
wire   [12:0] tmp_11_fu_690_p3;
wire   [9:0] tmp_13_fu_728_p1;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_1296;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 grp_matxvec_fu_481_ap_start_reg = 1'b0;
#0 ap_reg_ioackin_B_ARREADY = 1'b0;
end

a0_block_mmult_A_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_A_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_A_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_A_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_A_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_A_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_A_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_A_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_A_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_A_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_A_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_A_CACHE_VALUE ))
block_mmult_A_m_axi_U(
    .AWVALID(m_axi_A_AWVALID),
    .AWREADY(m_axi_A_AWREADY),
    .AWADDR(m_axi_A_AWADDR),
    .AWID(m_axi_A_AWID),
    .AWLEN(m_axi_A_AWLEN),
    .AWSIZE(m_axi_A_AWSIZE),
    .AWBURST(m_axi_A_AWBURST),
    .AWLOCK(m_axi_A_AWLOCK),
    .AWCACHE(m_axi_A_AWCACHE),
    .AWPROT(m_axi_A_AWPROT),
    .AWQOS(m_axi_A_AWQOS),
    .AWREGION(m_axi_A_AWREGION),
    .AWUSER(m_axi_A_AWUSER),
    .WVALID(m_axi_A_WVALID),
    .WREADY(m_axi_A_WREADY),
    .WDATA(m_axi_A_WDATA),
    .WSTRB(m_axi_A_WSTRB),
    .WLAST(m_axi_A_WLAST),
    .WID(m_axi_A_WID),
    .WUSER(m_axi_A_WUSER),
    .ARVALID(m_axi_A_ARVALID),
    .ARREADY(m_axi_A_ARREADY),
    .ARADDR(m_axi_A_ARADDR),
    .ARID(m_axi_A_ARID),
    .ARLEN(m_axi_A_ARLEN),
    .ARSIZE(m_axi_A_ARSIZE),
    .ARBURST(m_axi_A_ARBURST),
    .ARLOCK(m_axi_A_ARLOCK),
    .ARCACHE(m_axi_A_ARCACHE),
    .ARPROT(m_axi_A_ARPROT),
    .ARQOS(m_axi_A_ARQOS),
    .ARREGION(m_axi_A_ARREGION),
    .ARUSER(m_axi_A_ARUSER),
    .RVALID(m_axi_A_RVALID),
    .RREADY(m_axi_A_RREADY),
    .RDATA(m_axi_A_RDATA),
    .RLAST(m_axi_A_RLAST),
    .RID(m_axi_A_RID),
    .RUSER(m_axi_A_RUSER),
    .RRESP(m_axi_A_RRESP),
    .BVALID(m_axi_A_BVALID),
    .BREADY(m_axi_A_BREADY),
    .BRESP(m_axi_A_BRESP),
    .BID(m_axi_A_BID),
    .BUSER(m_axi_A_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(A_ARVALID),
    .I_ARREADY(A_ARREADY),
    .I_ARADDR(grp_matxvec_fu_481_m_axi_A_ARADDR),
    .I_ARID(grp_matxvec_fu_481_m_axi_A_ARID),
    .I_ARLEN(grp_matxvec_fu_481_m_axi_A_ARLEN),
    .I_ARSIZE(grp_matxvec_fu_481_m_axi_A_ARSIZE),
    .I_ARLOCK(grp_matxvec_fu_481_m_axi_A_ARLOCK),
    .I_ARCACHE(grp_matxvec_fu_481_m_axi_A_ARCACHE),
    .I_ARQOS(grp_matxvec_fu_481_m_axi_A_ARQOS),
    .I_ARPROT(grp_matxvec_fu_481_m_axi_A_ARPROT),
    .I_ARUSER(grp_matxvec_fu_481_m_axi_A_ARUSER),
    .I_ARBURST(grp_matxvec_fu_481_m_axi_A_ARBURST),
    .I_ARREGION(grp_matxvec_fu_481_m_axi_A_ARREGION),
    .I_RVALID(A_RVALID),
    .I_RREADY(A_RREADY),
    .I_RDATA(A_RDATA),
    .I_RID(A_RID),
    .I_RUSER(A_RUSER),
    .I_RRESP(A_RRESP),
    .I_RLAST(A_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(A_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(A_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(A_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(A_BRESP),
    .I_BID(A_BID),
    .I_BUSER(A_BUSER)
);

a0_block_mmult_B_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_B_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_B_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_B_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_B_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_B_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_B_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_B_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_B_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_B_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_B_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_B_CACHE_VALUE ))
block_mmult_B_m_axi_U(
    .AWVALID(m_axi_B_AWVALID),
    .AWREADY(m_axi_B_AWREADY),
    .AWADDR(m_axi_B_AWADDR),
    .AWID(m_axi_B_AWID),
    .AWLEN(m_axi_B_AWLEN),
    .AWSIZE(m_axi_B_AWSIZE),
    .AWBURST(m_axi_B_AWBURST),
    .AWLOCK(m_axi_B_AWLOCK),
    .AWCACHE(m_axi_B_AWCACHE),
    .AWPROT(m_axi_B_AWPROT),
    .AWQOS(m_axi_B_AWQOS),
    .AWREGION(m_axi_B_AWREGION),
    .AWUSER(m_axi_B_AWUSER),
    .WVALID(m_axi_B_WVALID),
    .WREADY(m_axi_B_WREADY),
    .WDATA(m_axi_B_WDATA),
    .WSTRB(m_axi_B_WSTRB),
    .WLAST(m_axi_B_WLAST),
    .WID(m_axi_B_WID),
    .WUSER(m_axi_B_WUSER),
    .ARVALID(m_axi_B_ARVALID),
    .ARREADY(m_axi_B_ARREADY),
    .ARADDR(m_axi_B_ARADDR),
    .ARID(m_axi_B_ARID),
    .ARLEN(m_axi_B_ARLEN),
    .ARSIZE(m_axi_B_ARSIZE),
    .ARBURST(m_axi_B_ARBURST),
    .ARLOCK(m_axi_B_ARLOCK),
    .ARCACHE(m_axi_B_ARCACHE),
    .ARPROT(m_axi_B_ARPROT),
    .ARQOS(m_axi_B_ARQOS),
    .ARREGION(m_axi_B_ARREGION),
    .ARUSER(m_axi_B_ARUSER),
    .RVALID(m_axi_B_RVALID),
    .RREADY(m_axi_B_RREADY),
    .RDATA(m_axi_B_RDATA),
    .RLAST(m_axi_B_RLAST),
    .RID(m_axi_B_RID),
    .RUSER(m_axi_B_RUSER),
    .RRESP(m_axi_B_RRESP),
    .BVALID(m_axi_B_BVALID),
    .BREADY(m_axi_B_BREADY),
    .BRESP(m_axi_B_BRESP),
    .BID(m_axi_B_BID),
    .BUSER(m_axi_B_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(B_ARVALID),
    .I_ARREADY(B_ARREADY),
    .I_ARADDR(B4_sum7_cast_fu_680_p1),
    .I_ARID(1'd0),
    .I_ARLEN(32'd64),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(B_RVALID),
    .I_RREADY(B_RREADY),
    .I_RDATA(B_RDATA),
    .I_RID(B_RID),
    .I_RUSER(B_RUSER),
    .I_RRESP(B_RRESP),
    .I_RLAST(B_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(B_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(B_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(B_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(B_BRESP),
    .I_BID(B_BID),
    .I_BUSER(B_BUSER)
);

a0_block_mmult_C_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_C_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_C_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_C_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_C_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_C_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_C_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_C_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_C_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_C_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_C_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_C_CACHE_VALUE ))
block_mmult_C_m_axi_U(
    .AWVALID(m_axi_C_AWVALID),
    .AWREADY(m_axi_C_AWREADY),
    .AWADDR(m_axi_C_AWADDR),
    .AWID(m_axi_C_AWID),
    .AWLEN(m_axi_C_AWLEN),
    .AWSIZE(m_axi_C_AWSIZE),
    .AWBURST(m_axi_C_AWBURST),
    .AWLOCK(m_axi_C_AWLOCK),
    .AWCACHE(m_axi_C_AWCACHE),
    .AWPROT(m_axi_C_AWPROT),
    .AWQOS(m_axi_C_AWQOS),
    .AWREGION(m_axi_C_AWREGION),
    .AWUSER(m_axi_C_AWUSER),
    .WVALID(m_axi_C_WVALID),
    .WREADY(m_axi_C_WREADY),
    .WDATA(m_axi_C_WDATA),
    .WSTRB(m_axi_C_WSTRB),
    .WLAST(m_axi_C_WLAST),
    .WID(m_axi_C_WID),
    .WUSER(m_axi_C_WUSER),
    .ARVALID(m_axi_C_ARVALID),
    .ARREADY(m_axi_C_ARREADY),
    .ARADDR(m_axi_C_ARADDR),
    .ARID(m_axi_C_ARID),
    .ARLEN(m_axi_C_ARLEN),
    .ARSIZE(m_axi_C_ARSIZE),
    .ARBURST(m_axi_C_ARBURST),
    .ARLOCK(m_axi_C_ARLOCK),
    .ARCACHE(m_axi_C_ARCACHE),
    .ARPROT(m_axi_C_ARPROT),
    .ARQOS(m_axi_C_ARQOS),
    .ARREGION(m_axi_C_ARREGION),
    .ARUSER(m_axi_C_ARUSER),
    .RVALID(m_axi_C_RVALID),
    .RREADY(m_axi_C_RREADY),
    .RDATA(m_axi_C_RDATA),
    .RLAST(m_axi_C_RLAST),
    .RID(m_axi_C_RID),
    .RUSER(m_axi_C_RUSER),
    .RRESP(m_axi_C_RRESP),
    .BVALID(m_axi_C_BVALID),
    .BREADY(m_axi_C_BREADY),
    .BRESP(m_axi_C_BRESP),
    .BID(m_axi_C_BID),
    .BUSER(m_axi_C_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(C_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(C_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(C_RDATA),
    .I_RID(C_RID),
    .I_RUSER(C_RUSER),
    .I_RRESP(C_RRESP),
    .I_RLAST(C_RLAST),
    .I_AWVALID(C_AWVALID),
    .I_AWREADY(C_AWREADY),
    .I_AWADDR(grp_matxvec_fu_481_m_axi_C_AWADDR),
    .I_AWID(grp_matxvec_fu_481_m_axi_C_AWID),
    .I_AWLEN(grp_matxvec_fu_481_m_axi_C_AWLEN),
    .I_AWSIZE(grp_matxvec_fu_481_m_axi_C_AWSIZE),
    .I_AWLOCK(grp_matxvec_fu_481_m_axi_C_AWLOCK),
    .I_AWCACHE(grp_matxvec_fu_481_m_axi_C_AWCACHE),
    .I_AWQOS(grp_matxvec_fu_481_m_axi_C_AWQOS),
    .I_AWPROT(grp_matxvec_fu_481_m_axi_C_AWPROT),
    .I_AWUSER(grp_matxvec_fu_481_m_axi_C_AWUSER),
    .I_AWBURST(grp_matxvec_fu_481_m_axi_C_AWBURST),
    .I_AWREGION(grp_matxvec_fu_481_m_axi_C_AWREGION),
    .I_WVALID(C_WVALID),
    .I_WREADY(C_WREADY),
    .I_WDATA(grp_matxvec_fu_481_m_axi_C_WDATA),
    .I_WID(grp_matxvec_fu_481_m_axi_C_WID),
    .I_WUSER(grp_matxvec_fu_481_m_axi_C_WUSER),
    .I_WLAST(grp_matxvec_fu_481_m_axi_C_WLAST),
    .I_WSTRB(grp_matxvec_fu_481_m_axi_C_WSTRB),
    .I_BVALID(C_BVALID),
    .I_BREADY(C_BREADY),
    .I_BRESP(C_BRESP),
    .I_BID(C_BID),
    .I_BUSER(C_BUSER)
);

a0_block_mmult_b_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
b_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_0_address0),
    .ce0(b_0_ce0),
    .we0(b_0_we0),
    .d0(B_addr_read_reg_826),
    .q0(b_0_q0),
    .address1(grp_matxvec_fu_481_B_0_address1),
    .ce1(b_0_ce1),
    .q1(b_0_q1)
);

a0_block_mmult_b_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
b_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_1_address0),
    .ce0(b_1_ce0),
    .we0(b_1_we0),
    .d0(B_addr_read_reg_826),
    .q0(b_1_q0),
    .address1(grp_matxvec_fu_481_B_1_address1),
    .ce1(b_1_ce1),
    .q1(b_1_q1)
);

a0_block_mmult_b_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
b_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_2_address0),
    .ce0(b_2_ce0),
    .we0(b_2_we0),
    .d0(B_addr_read_reg_826),
    .q0(b_2_q0),
    .address1(grp_matxvec_fu_481_B_2_address1),
    .ce1(b_2_ce1),
    .q1(b_2_q1)
);

a0_block_mmult_b_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
b_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_3_address0),
    .ce0(b_3_ce0),
    .we0(b_3_we0),
    .d0(B_addr_read_reg_826),
    .q0(b_3_q0),
    .address1(grp_matxvec_fu_481_B_3_address1),
    .ce1(b_3_ce1),
    .q1(b_3_q1)
);

a0_block_mmult_b_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
b_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_4_address0),
    .ce0(b_4_ce0),
    .we0(b_4_we0),
    .d0(B_addr_read_reg_826),
    .q0(b_4_q0),
    .address1(grp_matxvec_fu_481_B_4_address1),
    .ce1(b_4_ce1),
    .q1(b_4_q1)
);

a0_block_mmult_b_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
b_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_5_address0),
    .ce0(b_5_ce0),
    .we0(b_5_we0),
    .d0(B_addr_read_reg_826),
    .q0(b_5_q0),
    .address1(grp_matxvec_fu_481_B_5_address1),
    .ce1(b_5_ce1),
    .q1(b_5_q1)
);

a0_block_mmult_b_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
b_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_6_address0),
    .ce0(b_6_ce0),
    .we0(b_6_we0),
    .d0(B_addr_read_reg_826),
    .q0(b_6_q0),
    .address1(grp_matxvec_fu_481_B_6_address1),
    .ce1(b_6_ce1),
    .q1(b_6_q1)
);

a0_block_mmult_b_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
b_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_7_address0),
    .ce0(b_7_ce0),
    .we0(b_7_we0),
    .d0(B_addr_read_reg_826),
    .q0(b_7_q0),
    .address1(grp_matxvec_fu_481_B_7_address1),
    .ce1(b_7_ce1),
    .q1(b_7_q1)
);

a0_block_mmult_b_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
b_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_8_address0),
    .ce0(b_8_ce0),
    .we0(b_8_we0),
    .d0(B_addr_read_reg_826),
    .q0(b_8_q0),
    .address1(grp_matxvec_fu_481_B_8_address1),
    .ce1(b_8_ce1),
    .q1(b_8_q1)
);

a0_block_mmult_b_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
b_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_9_address0),
    .ce0(b_9_ce0),
    .we0(b_9_we0),
    .d0(B_addr_read_reg_826),
    .q0(b_9_q0),
    .address1(grp_matxvec_fu_481_B_9_address1),
    .ce1(b_9_ce1),
    .q1(b_9_q1)
);

a0_block_mmult_b_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
b_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_10_address0),
    .ce0(b_10_ce0),
    .we0(b_10_we0),
    .d0(B_addr_read_reg_826),
    .q0(b_10_q0),
    .address1(grp_matxvec_fu_481_B_10_address1),
    .ce1(b_10_ce1),
    .q1(b_10_q1)
);

a0_block_mmult_b_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
b_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_11_address0),
    .ce0(b_11_ce0),
    .we0(b_11_we0),
    .d0(B_addr_read_reg_826),
    .q0(b_11_q0),
    .address1(grp_matxvec_fu_481_B_11_address1),
    .ce1(b_11_ce1),
    .q1(b_11_q1)
);

a0_block_mmult_b_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
b_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_12_address0),
    .ce0(b_12_ce0),
    .we0(b_12_we0),
    .d0(B_addr_read_reg_826),
    .q0(b_12_q0),
    .address1(grp_matxvec_fu_481_B_12_address1),
    .ce1(b_12_ce1),
    .q1(b_12_q1)
);

a0_block_mmult_b_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
b_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_13_address0),
    .ce0(b_13_ce0),
    .we0(b_13_we0),
    .d0(B_addr_read_reg_826),
    .q0(b_13_q0),
    .address1(grp_matxvec_fu_481_B_13_address1),
    .ce1(b_13_ce1),
    .q1(b_13_q1)
);

a0_block_mmult_b_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
b_14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_14_address0),
    .ce0(b_14_ce0),
    .we0(b_14_we0),
    .d0(B_addr_read_reg_826),
    .q0(b_14_q0),
    .address1(grp_matxvec_fu_481_B_14_address1),
    .ce1(b_14_ce1),
    .q1(b_14_q1)
);

a0_block_mmult_b_0 #(
    .DataWidth( 32 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
b_15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(b_15_address0),
    .ce0(b_15_ce0),
    .we0(b_15_we0),
    .d0(B_addr_read_reg_826),
    .q0(b_15_q0),
    .address1(grp_matxvec_fu_481_B_15_address1),
    .ce1(b_15_ce1),
    .q1(b_15_q1)
);

a0_matxvec grp_matxvec_fu_481(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_matxvec_fu_481_ap_start),
    .ap_done(grp_matxvec_fu_481_ap_done),
    .ap_idle(grp_matxvec_fu_481_ap_idle),
    .ap_ready(grp_matxvec_fu_481_ap_ready),
    .m_axi_A_AWVALID(grp_matxvec_fu_481_m_axi_A_AWVALID),
    .m_axi_A_AWREADY(1'b0),
    .m_axi_A_AWADDR(grp_matxvec_fu_481_m_axi_A_AWADDR),
    .m_axi_A_AWID(grp_matxvec_fu_481_m_axi_A_AWID),
    .m_axi_A_AWLEN(grp_matxvec_fu_481_m_axi_A_AWLEN),
    .m_axi_A_AWSIZE(grp_matxvec_fu_481_m_axi_A_AWSIZE),
    .m_axi_A_AWBURST(grp_matxvec_fu_481_m_axi_A_AWBURST),
    .m_axi_A_AWLOCK(grp_matxvec_fu_481_m_axi_A_AWLOCK),
    .m_axi_A_AWCACHE(grp_matxvec_fu_481_m_axi_A_AWCACHE),
    .m_axi_A_AWPROT(grp_matxvec_fu_481_m_axi_A_AWPROT),
    .m_axi_A_AWQOS(grp_matxvec_fu_481_m_axi_A_AWQOS),
    .m_axi_A_AWREGION(grp_matxvec_fu_481_m_axi_A_AWREGION),
    .m_axi_A_AWUSER(grp_matxvec_fu_481_m_axi_A_AWUSER),
    .m_axi_A_WVALID(grp_matxvec_fu_481_m_axi_A_WVALID),
    .m_axi_A_WREADY(1'b0),
    .m_axi_A_WDATA(grp_matxvec_fu_481_m_axi_A_WDATA),
    .m_axi_A_WSTRB(grp_matxvec_fu_481_m_axi_A_WSTRB),
    .m_axi_A_WLAST(grp_matxvec_fu_481_m_axi_A_WLAST),
    .m_axi_A_WID(grp_matxvec_fu_481_m_axi_A_WID),
    .m_axi_A_WUSER(grp_matxvec_fu_481_m_axi_A_WUSER),
    .m_axi_A_ARVALID(grp_matxvec_fu_481_m_axi_A_ARVALID),
    .m_axi_A_ARREADY(A_ARREADY),
    .m_axi_A_ARADDR(grp_matxvec_fu_481_m_axi_A_ARADDR),
    .m_axi_A_ARID(grp_matxvec_fu_481_m_axi_A_ARID),
    .m_axi_A_ARLEN(grp_matxvec_fu_481_m_axi_A_ARLEN),
    .m_axi_A_ARSIZE(grp_matxvec_fu_481_m_axi_A_ARSIZE),
    .m_axi_A_ARBURST(grp_matxvec_fu_481_m_axi_A_ARBURST),
    .m_axi_A_ARLOCK(grp_matxvec_fu_481_m_axi_A_ARLOCK),
    .m_axi_A_ARCACHE(grp_matxvec_fu_481_m_axi_A_ARCACHE),
    .m_axi_A_ARPROT(grp_matxvec_fu_481_m_axi_A_ARPROT),
    .m_axi_A_ARQOS(grp_matxvec_fu_481_m_axi_A_ARQOS),
    .m_axi_A_ARREGION(grp_matxvec_fu_481_m_axi_A_ARREGION),
    .m_axi_A_ARUSER(grp_matxvec_fu_481_m_axi_A_ARUSER),
    .m_axi_A_RVALID(A_RVALID),
    .m_axi_A_RREADY(grp_matxvec_fu_481_m_axi_A_RREADY),
    .m_axi_A_RDATA(A_RDATA),
    .m_axi_A_RLAST(A_RLAST),
    .m_axi_A_RID(A_RID),
    .m_axi_A_RUSER(A_RUSER),
    .m_axi_A_RRESP(A_RRESP),
    .m_axi_A_BVALID(1'b0),
    .m_axi_A_BREADY(grp_matxvec_fu_481_m_axi_A_BREADY),
    .m_axi_A_BRESP(2'd0),
    .m_axi_A_BID(1'd0),
    .m_axi_A_BUSER(1'd0),
    .A_offset(A_offset1_reg_761),
    .A_offset1(tmp_s_reg_854),
    .B_0_address0(grp_matxvec_fu_481_B_0_address0),
    .B_0_ce0(grp_matxvec_fu_481_B_0_ce0),
    .B_0_q0(b_0_q0),
    .B_0_address1(grp_matxvec_fu_481_B_0_address1),
    .B_0_ce1(grp_matxvec_fu_481_B_0_ce1),
    .B_0_q1(b_0_q1),
    .B_1_address0(grp_matxvec_fu_481_B_1_address0),
    .B_1_ce0(grp_matxvec_fu_481_B_1_ce0),
    .B_1_q0(b_1_q0),
    .B_1_address1(grp_matxvec_fu_481_B_1_address1),
    .B_1_ce1(grp_matxvec_fu_481_B_1_ce1),
    .B_1_q1(b_1_q1),
    .B_2_address0(grp_matxvec_fu_481_B_2_address0),
    .B_2_ce0(grp_matxvec_fu_481_B_2_ce0),
    .B_2_q0(b_2_q0),
    .B_2_address1(grp_matxvec_fu_481_B_2_address1),
    .B_2_ce1(grp_matxvec_fu_481_B_2_ce1),
    .B_2_q1(b_2_q1),
    .B_3_address0(grp_matxvec_fu_481_B_3_address0),
    .B_3_ce0(grp_matxvec_fu_481_B_3_ce0),
    .B_3_q0(b_3_q0),
    .B_3_address1(grp_matxvec_fu_481_B_3_address1),
    .B_3_ce1(grp_matxvec_fu_481_B_3_ce1),
    .B_3_q1(b_3_q1),
    .B_4_address0(grp_matxvec_fu_481_B_4_address0),
    .B_4_ce0(grp_matxvec_fu_481_B_4_ce0),
    .B_4_q0(b_4_q0),
    .B_4_address1(grp_matxvec_fu_481_B_4_address1),
    .B_4_ce1(grp_matxvec_fu_481_B_4_ce1),
    .B_4_q1(b_4_q1),
    .B_5_address0(grp_matxvec_fu_481_B_5_address0),
    .B_5_ce0(grp_matxvec_fu_481_B_5_ce0),
    .B_5_q0(b_5_q0),
    .B_5_address1(grp_matxvec_fu_481_B_5_address1),
    .B_5_ce1(grp_matxvec_fu_481_B_5_ce1),
    .B_5_q1(b_5_q1),
    .B_6_address0(grp_matxvec_fu_481_B_6_address0),
    .B_6_ce0(grp_matxvec_fu_481_B_6_ce0),
    .B_6_q0(b_6_q0),
    .B_6_address1(grp_matxvec_fu_481_B_6_address1),
    .B_6_ce1(grp_matxvec_fu_481_B_6_ce1),
    .B_6_q1(b_6_q1),
    .B_7_address0(grp_matxvec_fu_481_B_7_address0),
    .B_7_ce0(grp_matxvec_fu_481_B_7_ce0),
    .B_7_q0(b_7_q0),
    .B_7_address1(grp_matxvec_fu_481_B_7_address1),
    .B_7_ce1(grp_matxvec_fu_481_B_7_ce1),
    .B_7_q1(b_7_q1),
    .B_8_address0(grp_matxvec_fu_481_B_8_address0),
    .B_8_ce0(grp_matxvec_fu_481_B_8_ce0),
    .B_8_q0(b_8_q0),
    .B_8_address1(grp_matxvec_fu_481_B_8_address1),
    .B_8_ce1(grp_matxvec_fu_481_B_8_ce1),
    .B_8_q1(b_8_q1),
    .B_9_address0(grp_matxvec_fu_481_B_9_address0),
    .B_9_ce0(grp_matxvec_fu_481_B_9_ce0),
    .B_9_q0(b_9_q0),
    .B_9_address1(grp_matxvec_fu_481_B_9_address1),
    .B_9_ce1(grp_matxvec_fu_481_B_9_ce1),
    .B_9_q1(b_9_q1),
    .B_10_address0(grp_matxvec_fu_481_B_10_address0),
    .B_10_ce0(grp_matxvec_fu_481_B_10_ce0),
    .B_10_q0(b_10_q0),
    .B_10_address1(grp_matxvec_fu_481_B_10_address1),
    .B_10_ce1(grp_matxvec_fu_481_B_10_ce1),
    .B_10_q1(b_10_q1),
    .B_11_address0(grp_matxvec_fu_481_B_11_address0),
    .B_11_ce0(grp_matxvec_fu_481_B_11_ce0),
    .B_11_q0(b_11_q0),
    .B_11_address1(grp_matxvec_fu_481_B_11_address1),
    .B_11_ce1(grp_matxvec_fu_481_B_11_ce1),
    .B_11_q1(b_11_q1),
    .B_12_address0(grp_matxvec_fu_481_B_12_address0),
    .B_12_ce0(grp_matxvec_fu_481_B_12_ce0),
    .B_12_q0(b_12_q0),
    .B_12_address1(grp_matxvec_fu_481_B_12_address1),
    .B_12_ce1(grp_matxvec_fu_481_B_12_ce1),
    .B_12_q1(b_12_q1),
    .B_13_address0(grp_matxvec_fu_481_B_13_address0),
    .B_13_ce0(grp_matxvec_fu_481_B_13_ce0),
    .B_13_q0(b_13_q0),
    .B_13_address1(grp_matxvec_fu_481_B_13_address1),
    .B_13_ce1(grp_matxvec_fu_481_B_13_ce1),
    .B_13_q1(b_13_q1),
    .B_14_address0(grp_matxvec_fu_481_B_14_address0),
    .B_14_ce0(grp_matxvec_fu_481_B_14_ce0),
    .B_14_q0(b_14_q0),
    .B_14_address1(grp_matxvec_fu_481_B_14_address1),
    .B_14_ce1(grp_matxvec_fu_481_B_14_ce1),
    .B_14_q1(b_14_q1),
    .B_15_address0(grp_matxvec_fu_481_B_15_address0),
    .B_15_ce0(grp_matxvec_fu_481_B_15_ce0),
    .B_15_q0(b_15_q0),
    .B_15_address1(grp_matxvec_fu_481_B_15_address1),
    .B_15_ce1(grp_matxvec_fu_481_B_15_ce1),
    .B_15_q1(b_15_q1),
    .m_axi_C_AWVALID(grp_matxvec_fu_481_m_axi_C_AWVALID),
    .m_axi_C_AWREADY(C_AWREADY),
    .m_axi_C_AWADDR(grp_matxvec_fu_481_m_axi_C_AWADDR),
    .m_axi_C_AWID(grp_matxvec_fu_481_m_axi_C_AWID),
    .m_axi_C_AWLEN(grp_matxvec_fu_481_m_axi_C_AWLEN),
    .m_axi_C_AWSIZE(grp_matxvec_fu_481_m_axi_C_AWSIZE),
    .m_axi_C_AWBURST(grp_matxvec_fu_481_m_axi_C_AWBURST),
    .m_axi_C_AWLOCK(grp_matxvec_fu_481_m_axi_C_AWLOCK),
    .m_axi_C_AWCACHE(grp_matxvec_fu_481_m_axi_C_AWCACHE),
    .m_axi_C_AWPROT(grp_matxvec_fu_481_m_axi_C_AWPROT),
    .m_axi_C_AWQOS(grp_matxvec_fu_481_m_axi_C_AWQOS),
    .m_axi_C_AWREGION(grp_matxvec_fu_481_m_axi_C_AWREGION),
    .m_axi_C_AWUSER(grp_matxvec_fu_481_m_axi_C_AWUSER),
    .m_axi_C_WVALID(grp_matxvec_fu_481_m_axi_C_WVALID),
    .m_axi_C_WREADY(C_WREADY),
    .m_axi_C_WDATA(grp_matxvec_fu_481_m_axi_C_WDATA),
    .m_axi_C_WSTRB(grp_matxvec_fu_481_m_axi_C_WSTRB),
    .m_axi_C_WLAST(grp_matxvec_fu_481_m_axi_C_WLAST),
    .m_axi_C_WID(grp_matxvec_fu_481_m_axi_C_WID),
    .m_axi_C_WUSER(grp_matxvec_fu_481_m_axi_C_WUSER),
    .m_axi_C_ARVALID(grp_matxvec_fu_481_m_axi_C_ARVALID),
    .m_axi_C_ARREADY(1'b0),
    .m_axi_C_ARADDR(grp_matxvec_fu_481_m_axi_C_ARADDR),
    .m_axi_C_ARID(grp_matxvec_fu_481_m_axi_C_ARID),
    .m_axi_C_ARLEN(grp_matxvec_fu_481_m_axi_C_ARLEN),
    .m_axi_C_ARSIZE(grp_matxvec_fu_481_m_axi_C_ARSIZE),
    .m_axi_C_ARBURST(grp_matxvec_fu_481_m_axi_C_ARBURST),
    .m_axi_C_ARLOCK(grp_matxvec_fu_481_m_axi_C_ARLOCK),
    .m_axi_C_ARCACHE(grp_matxvec_fu_481_m_axi_C_ARCACHE),
    .m_axi_C_ARPROT(grp_matxvec_fu_481_m_axi_C_ARPROT),
    .m_axi_C_ARQOS(grp_matxvec_fu_481_m_axi_C_ARQOS),
    .m_axi_C_ARREGION(grp_matxvec_fu_481_m_axi_C_ARREGION),
    .m_axi_C_ARUSER(grp_matxvec_fu_481_m_axi_C_ARUSER),
    .m_axi_C_RVALID(1'b0),
    .m_axi_C_RREADY(grp_matxvec_fu_481_m_axi_C_RREADY),
    .m_axi_C_RDATA(32'd0),
    .m_axi_C_RLAST(1'b0),
    .m_axi_C_RID(1'd0),
    .m_axi_C_RUSER(1'd0),
    .m_axi_C_RRESP(2'd0),
    .m_axi_C_BVALID(C_BVALID),
    .m_axi_C_BREADY(grp_matxvec_fu_481_m_axi_C_BREADY),
    .m_axi_C_BRESP(C_BRESP),
    .m_axi_C_BID(C_BID),
    .m_axi_C_BUSER(C_BUSER),
    .C_offset(C_offset5_reg_751),
    .C_offset2(sum6_reg_859)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond3_fu_543_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end else if (((exitcond3_fu_543_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_B_ARREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_1296)) begin
            if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                ap_reg_ioackin_B_ARREADY <= 1'b0;
            end else if (((1'b1 == B_ARREADY) & (1'b0 == ap_block_pp0_stage0_01001))) begin
                ap_reg_ioackin_B_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_matxvec_fu_481_ap_start_reg <= 1'b0;
    end else begin
        if (((exitcond_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
            grp_matxvec_fu_481_ap_start_reg <= 1'b1;
        end else if ((grp_matxvec_fu_481_ap_ready == 1'b1)) begin
            grp_matxvec_fu_481_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_782 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_448 <= i_cast6_mid2_v_reg_791;
    end else if (((exitcond3_fu_543_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_448 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_572_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_437 <= indvar_flatten_next_fu_578_p2;
    end else if (((exitcond3_fu_543_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_437 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_572_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_459 <= j_1_fu_674_p2;
    end else if (((exitcond3_fu_543_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_459 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (exitcond_fu_716_p2 == 1'd1))) begin
        k_reg_426 <= k_2_reg_770;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        k_reg_426 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        p_reg_470 <= 11'd0;
    end else if (((grp_matxvec_fu_481_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        p_reg_470 <= p_1_reg_849;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        A_offset1_reg_761 <= {{A_offset[31:2]}};
        C_offset5_reg_751 <= {{C_offset[31:2]}};
        tmp_15_cast_reg_756[29 : 0] <= tmp_15_cast_fu_529_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_572_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        B4_sum7_reg_797 <= B4_sum7_fu_637_p2;
        arrayNo_cast_reg_806 <= {{j_mid2_fu_596_p3[6:2]}};
        tmp_10_reg_810 <= tmp_10_fu_670_p1;
        tmp_7_reg_802 <= tmp_7_fu_654_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        B_addr_read_reg_826 <= B_RDATA;
        arrayNo_cast_reg_806_pp0_iter2_reg <= arrayNo_cast_reg_806_pp0_iter1_reg;
        arrayNo_cast_reg_806_pp0_iter3_reg <= arrayNo_cast_reg_806_pp0_iter2_reg;
        arrayNo_cast_reg_806_pp0_iter4_reg <= arrayNo_cast_reg_806_pp0_iter3_reg;
        arrayNo_cast_reg_806_pp0_iter5_reg <= arrayNo_cast_reg_806_pp0_iter4_reg;
        arrayNo_cast_reg_806_pp0_iter6_reg <= arrayNo_cast_reg_806_pp0_iter5_reg;
        arrayNo_cast_reg_806_pp0_iter7_reg <= arrayNo_cast_reg_806_pp0_iter6_reg;
        arrayNo_cast_reg_806_pp0_iter8_reg <= arrayNo_cast_reg_806_pp0_iter7_reg;
        i_cast6_mid2_v_reg_791_pp0_iter2_reg <= i_cast6_mid2_v_reg_791_pp0_iter1_reg;
        i_cast6_mid2_v_reg_791_pp0_iter3_reg <= i_cast6_mid2_v_reg_791_pp0_iter2_reg;
        i_cast6_mid2_v_reg_791_pp0_iter4_reg <= i_cast6_mid2_v_reg_791_pp0_iter3_reg;
        i_cast6_mid2_v_reg_791_pp0_iter5_reg <= i_cast6_mid2_v_reg_791_pp0_iter4_reg;
        i_cast6_mid2_v_reg_791_pp0_iter6_reg <= i_cast6_mid2_v_reg_791_pp0_iter5_reg;
        i_cast6_mid2_v_reg_791_pp0_iter7_reg <= i_cast6_mid2_v_reg_791_pp0_iter6_reg;
        i_cast6_mid2_v_reg_791_pp0_iter8_reg <= i_cast6_mid2_v_reg_791_pp0_iter7_reg;
        tmp_10_reg_810_pp0_iter2_reg <= tmp_10_reg_810_pp0_iter1_reg;
        tmp_10_reg_810_pp0_iter3_reg <= tmp_10_reg_810_pp0_iter2_reg;
        tmp_10_reg_810_pp0_iter4_reg <= tmp_10_reg_810_pp0_iter3_reg;
        tmp_10_reg_810_pp0_iter5_reg <= tmp_10_reg_810_pp0_iter4_reg;
        tmp_10_reg_810_pp0_iter6_reg <= tmp_10_reg_810_pp0_iter5_reg;
        tmp_10_reg_810_pp0_iter7_reg <= tmp_10_reg_810_pp0_iter6_reg;
        tmp_10_reg_810_pp0_iter8_reg <= tmp_10_reg_810_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        arrayNo_cast_reg_806_pp0_iter1_reg <= arrayNo_cast_reg_806;
        exitcond_flatten_reg_782 <= exitcond_flatten_fu_572_p2;
        i_cast6_mid2_v_reg_791_pp0_iter1_reg <= i_cast6_mid2_v_reg_791;
        tmp_10_reg_810_pp0_iter1_reg <= tmp_10_reg_810;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_572_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_cast6_mid2_v_reg_791 <= i_cast6_mid2_v_fu_604_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        k_2_reg_770 <= k_2_fu_549_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        p_1_reg_849 <= p_1_fu_722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        sum6_reg_859[19 : 6] <= sum6_fu_741_p4[19 : 6];
        tmp_s_reg_854[19 : 10] <= tmp_s_fu_732_p3[19 : 10];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_543_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_1_reg_775 <= tmp_1_fu_555_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((exitcond_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        A_ARVALID = grp_matxvec_fu_481_m_axi_A_ARVALID;
    end else begin
        A_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((exitcond_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        A_RREADY = grp_matxvec_fu_481_m_axi_A_RREADY;
    end else begin
        A_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_B_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_7_reg_802 == 1'd1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        B_ARVALID = 1'b1;
    end else begin
        B_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        B_RREADY = 1'b1;
    end else begin
        B_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_7_reg_802 == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        B_blk_n_AR = m_axi_B_ARREADY;
    end else begin
        B_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        B_blk_n_R = m_axi_B_RVALID;
    end else begin
        B_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((exitcond_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        C_AWVALID = grp_matxvec_fu_481_m_axi_C_AWVALID;
    end else begin
        C_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((exitcond_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        C_BREADY = grp_matxvec_fu_481_m_axi_C_BREADY;
    end else begin
        C_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((exitcond_fu_716_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        C_WVALID = grp_matxvec_fu_481_m_axi_C_WVALID;
    end else begin
        C_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_572_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_543_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_782 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_452_p4 = i_cast6_mid2_v_reg_791;
    end else begin
        ap_phi_mux_i_phi_fu_452_p4 = i_reg_448;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_543_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_B_ARREADY == 1'b0)) begin
        ap_sig_ioackin_B_ARREADY = B_ARREADY;
    end else begin
        ap_sig_ioackin_B_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        b_0_address0 = tmp_12_fu_696_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_0_address0 = grp_matxvec_fu_481_B_0_address0;
    end else begin
        b_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_0_ce0 = grp_matxvec_fu_481_B_0_ce0;
    end else begin
        b_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        b_0_ce1 = grp_matxvec_fu_481_B_0_ce1;
    end else begin
        b_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_806_pp0_iter8_reg == 5'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_0_we0 = 1'b1;
    end else begin
        b_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        b_10_address0 = tmp_12_fu_696_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_10_address0 = grp_matxvec_fu_481_B_10_address0;
    end else begin
        b_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_10_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_10_ce0 = grp_matxvec_fu_481_B_10_ce0;
    end else begin
        b_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        b_10_ce1 = grp_matxvec_fu_481_B_10_ce1;
    end else begin
        b_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_806_pp0_iter8_reg == 5'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_10_we0 = 1'b1;
    end else begin
        b_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        b_11_address0 = tmp_12_fu_696_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_11_address0 = grp_matxvec_fu_481_B_11_address0;
    end else begin
        b_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_11_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_11_ce0 = grp_matxvec_fu_481_B_11_ce0;
    end else begin
        b_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        b_11_ce1 = grp_matxvec_fu_481_B_11_ce1;
    end else begin
        b_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_806_pp0_iter8_reg == 5'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_11_we0 = 1'b1;
    end else begin
        b_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        b_12_address0 = tmp_12_fu_696_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_12_address0 = grp_matxvec_fu_481_B_12_address0;
    end else begin
        b_12_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_12_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_12_ce0 = grp_matxvec_fu_481_B_12_ce0;
    end else begin
        b_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        b_12_ce1 = grp_matxvec_fu_481_B_12_ce1;
    end else begin
        b_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_806_pp0_iter8_reg == 5'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_12_we0 = 1'b1;
    end else begin
        b_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        b_13_address0 = tmp_12_fu_696_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_13_address0 = grp_matxvec_fu_481_B_13_address0;
    end else begin
        b_13_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_13_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_13_ce0 = grp_matxvec_fu_481_B_13_ce0;
    end else begin
        b_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        b_13_ce1 = grp_matxvec_fu_481_B_13_ce1;
    end else begin
        b_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_806_pp0_iter8_reg == 5'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_13_we0 = 1'b1;
    end else begin
        b_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        b_14_address0 = tmp_12_fu_696_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_14_address0 = grp_matxvec_fu_481_B_14_address0;
    end else begin
        b_14_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_14_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_14_ce0 = grp_matxvec_fu_481_B_14_ce0;
    end else begin
        b_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        b_14_ce1 = grp_matxvec_fu_481_B_14_ce1;
    end else begin
        b_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_806_pp0_iter8_reg == 5'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_14_we0 = 1'b1;
    end else begin
        b_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        b_15_address0 = tmp_12_fu_696_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_15_address0 = grp_matxvec_fu_481_B_15_address0;
    end else begin
        b_15_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_15_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_15_ce0 = grp_matxvec_fu_481_B_15_ce0;
    end else begin
        b_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        b_15_ce1 = grp_matxvec_fu_481_B_15_ce1;
    end else begin
        b_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(arrayNo_cast_reg_806_pp0_iter8_reg == 5'd0) & ~(arrayNo_cast_reg_806_pp0_iter8_reg == 5'd1) & ~(arrayNo_cast_reg_806_pp0_iter8_reg == 5'd2) & ~(arrayNo_cast_reg_806_pp0_iter8_reg == 5'd3) & ~(arrayNo_cast_reg_806_pp0_iter8_reg == 5'd4) & ~(arrayNo_cast_reg_806_pp0_iter8_reg == 5'd5) & ~(arrayNo_cast_reg_806_pp0_iter8_reg == 5'd6) & ~(arrayNo_cast_reg_806_pp0_iter8_reg == 5'd7) & ~(arrayNo_cast_reg_806_pp0_iter8_reg == 5'd8) & ~(arrayNo_cast_reg_806_pp0_iter8_reg == 5'd9) & ~(arrayNo_cast_reg_806_pp0_iter8_reg == 5'd10) & ~(arrayNo_cast_reg_806_pp0_iter8_reg == 5'd11) & ~(arrayNo_cast_reg_806_pp0_iter8_reg == 5'd12) & ~(arrayNo_cast_reg_806_pp0_iter8_reg == 5'd13) & ~(arrayNo_cast_reg_806_pp0_iter8_reg == 5'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_15_we0 = 1'b1;
    end else begin
        b_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        b_1_address0 = tmp_12_fu_696_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_1_address0 = grp_matxvec_fu_481_B_1_address0;
    end else begin
        b_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_1_ce0 = grp_matxvec_fu_481_B_1_ce0;
    end else begin
        b_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        b_1_ce1 = grp_matxvec_fu_481_B_1_ce1;
    end else begin
        b_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_806_pp0_iter8_reg == 5'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_1_we0 = 1'b1;
    end else begin
        b_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        b_2_address0 = tmp_12_fu_696_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_2_address0 = grp_matxvec_fu_481_B_2_address0;
    end else begin
        b_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_2_ce0 = grp_matxvec_fu_481_B_2_ce0;
    end else begin
        b_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        b_2_ce1 = grp_matxvec_fu_481_B_2_ce1;
    end else begin
        b_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_806_pp0_iter8_reg == 5'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_2_we0 = 1'b1;
    end else begin
        b_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        b_3_address0 = tmp_12_fu_696_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_3_address0 = grp_matxvec_fu_481_B_3_address0;
    end else begin
        b_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_3_ce0 = grp_matxvec_fu_481_B_3_ce0;
    end else begin
        b_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        b_3_ce1 = grp_matxvec_fu_481_B_3_ce1;
    end else begin
        b_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_806_pp0_iter8_reg == 5'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_3_we0 = 1'b1;
    end else begin
        b_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        b_4_address0 = tmp_12_fu_696_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_4_address0 = grp_matxvec_fu_481_B_4_address0;
    end else begin
        b_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_4_ce0 = grp_matxvec_fu_481_B_4_ce0;
    end else begin
        b_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        b_4_ce1 = grp_matxvec_fu_481_B_4_ce1;
    end else begin
        b_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_806_pp0_iter8_reg == 5'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_4_we0 = 1'b1;
    end else begin
        b_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        b_5_address0 = tmp_12_fu_696_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_5_address0 = grp_matxvec_fu_481_B_5_address0;
    end else begin
        b_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_5_ce0 = grp_matxvec_fu_481_B_5_ce0;
    end else begin
        b_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        b_5_ce1 = grp_matxvec_fu_481_B_5_ce1;
    end else begin
        b_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_806_pp0_iter8_reg == 5'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_5_we0 = 1'b1;
    end else begin
        b_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        b_6_address0 = tmp_12_fu_696_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_6_address0 = grp_matxvec_fu_481_B_6_address0;
    end else begin
        b_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_6_ce0 = grp_matxvec_fu_481_B_6_ce0;
    end else begin
        b_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        b_6_ce1 = grp_matxvec_fu_481_B_6_ce1;
    end else begin
        b_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_806_pp0_iter8_reg == 5'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_6_we0 = 1'b1;
    end else begin
        b_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        b_7_address0 = tmp_12_fu_696_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_7_address0 = grp_matxvec_fu_481_B_7_address0;
    end else begin
        b_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_7_ce0 = grp_matxvec_fu_481_B_7_ce0;
    end else begin
        b_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        b_7_ce1 = grp_matxvec_fu_481_B_7_ce1;
    end else begin
        b_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_806_pp0_iter8_reg == 5'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_7_we0 = 1'b1;
    end else begin
        b_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        b_8_address0 = tmp_12_fu_696_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_8_address0 = grp_matxvec_fu_481_B_8_address0;
    end else begin
        b_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_8_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_8_ce0 = grp_matxvec_fu_481_B_8_ce0;
    end else begin
        b_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        b_8_ce1 = grp_matxvec_fu_481_B_8_ce1;
    end else begin
        b_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_806_pp0_iter8_reg == 5'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_8_we0 = 1'b1;
    end else begin
        b_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        b_9_address0 = tmp_12_fu_696_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_9_address0 = grp_matxvec_fu_481_B_9_address0;
    end else begin
        b_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_9_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        b_9_ce0 = grp_matxvec_fu_481_B_9_ce0;
    end else begin
        b_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        b_9_ce1 = grp_matxvec_fu_481_B_9_ce1;
    end else begin
        b_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_806_pp0_iter8_reg == 5'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        b_9_we0 = 1'b1;
    end else begin
        b_9_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_543_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_fu_572_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_fu_572_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (exitcond_fu_716_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((grp_matxvec_fu_481_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B4_sum7_cast_fu_680_p1 = B4_sum7_reg_797;

assign B4_sum7_fu_637_p2 = (tmp_10_mid2_cast_fu_633_p1 + tmp_15_cast_reg_756);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((1'b0 == B_RVALID) & (ap_enable_reg_pp0_iter8 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b0 == B_RVALID) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b0 == B_RVALID) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage0_iter8 = (1'b0 == B_RVALID);
end

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((ap_sig_ioackin_B_ARREADY == 1'b0) & (tmp_7_reg_802 == 1'd1));
end

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1296 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_7_reg_802 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign exitcond1_fu_590_p2 = ((j_reg_459 == 7'd64) ? 1'b1 : 1'b0);

assign exitcond3_fu_543_p2 = ((k_reg_426 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_572_p2 = ((indvar_flatten_reg_437 == 17'd65536) ? 1'b1 : 1'b0);

assign exitcond_fu_716_p2 = ((p_reg_470 == 11'd1024) ? 1'b1 : 1'b0);

assign grp_matxvec_fu_481_ap_start = grp_matxvec_fu_481_ap_start_reg;

assign i_1_fu_584_p2 = (11'd1 + ap_phi_mux_i_phi_fu_452_p4);

assign i_cast6_mid2_v_fu_604_p3 = ((exitcond1_fu_590_p2[0:0] === 1'b1) ? i_1_fu_584_p2 : ap_phi_mux_i_phi_fu_452_p4);

assign indvar_flatten_next_fu_578_p2 = (17'd1 + indvar_flatten_reg_437);

assign j_1_fu_674_p2 = (j_mid2_fu_596_p3 + 7'd1);

assign j_mid2_fu_596_p3 = ((exitcond1_fu_590_p2[0:0] === 1'b1) ? 7'd0 : j_reg_459);

assign k_2_fu_549_p2 = (k_reg_426 + 5'd1);

assign p_1_fu_722_p2 = (p_reg_470 + 11'd1);

assign sum6_fu_741_p4 = {{{tmp_13_fu_728_p1}, {tmp_1_reg_775}}, {6'd0}};

assign tmp_10_fu_670_p1 = j_mid2_fu_596_p3[1:0];

assign tmp_10_mid2_cast_fu_633_p1 = tmp_4_fu_625_p3;

assign tmp_11_fu_690_p3 = {{i_cast6_mid2_v_reg_791_pp0_iter8_reg}, {tmp_10_reg_810_pp0_iter8_reg}};

assign tmp_12_fu_696_p1 = tmp_11_fu_690_p3;

assign tmp_13_fu_728_p1 = p_reg_470[9:0];

assign tmp_15_cast_fu_529_p1 = tmp_fu_519_p4;

assign tmp_1_fu_555_p1 = k_reg_426[3:0];

assign tmp_2_fu_559_p1 = ap_phi_mux_i_phi_fu_452_p4[9:0];

assign tmp_3_fu_612_p1 = i_1_fu_584_p2[9:0];

assign tmp_4_fu_625_p3 = ((exitcond1_fu_590_p2[0:0] === 1'b1) ? tmp_9_mid1_fu_616_p4 : tmp_9_fu_563_p4);

assign tmp_5_fu_642_p1 = indvar_flatten_reg_437[5:0];

assign tmp_6_fu_646_p3 = {{11'd0}, {tmp_5_fu_642_p1}};

assign tmp_7_fu_654_p2 = ((tmp_6_fu_646_p3 == 17'd0) ? 1'b1 : 1'b0);

assign tmp_9_fu_563_p4 = {{{tmp_2_fu_559_p1}, {tmp_1_reg_775}}, {6'd0}};

assign tmp_9_mid1_fu_616_p4 = {{{tmp_3_fu_612_p1}, {tmp_1_reg_775}}, {6'd0}};

assign tmp_fu_519_p4 = {{B_offset[31:2]}};

assign tmp_s_fu_732_p3 = {{tmp_13_fu_728_p1}, {10'd0}};

always @ (posedge ap_clk) begin
    tmp_15_cast_reg_756[30] <= 1'b0;
    tmp_s_reg_854[9:0] <= 10'b0000000000;
    sum6_reg_859[5:0] <= 6'b000000;
end

endmodule //a0_block_mmult
